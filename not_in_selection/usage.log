Inverse selection of mrp.production() / state: before (("mrp_production"."state" not in %s) OR "mrp_production"."state" IS NULL) | [('done', 'cancel')] -> after (("mrp_production"."state" in %s) OR "mrp_production"."state" IS NULL) | [('draft', 'confirmed', 'progress', 'to_close')]
<osv.Query: 'SELECT "mrp_production".id FROM "mrp_production" WHERE ((("mrp_production"."reservation_state" = %s) AND (("mrp_production"."state" in %s) OR "mrp_production"."state" IS NULL)) AND ("mrp_production"."picking_type_id" in %s))' with params: ['waiting', ('draft', 'confirmed', 'progress', 'to_close'), (1, 5, 2, 6, 15)]>

 --------------------------------
Inverse selection of mrp.production() / state: before (("mrp_production"."state" not in %s) OR "mrp_production"."state" IS NULL) | [('done', 'cancel')] -> after (("mrp_production"."state" in %s) OR "mrp_production"."state" IS NULL) | [('draft', 'confirmed', 'progress', 'to_close')]
<osv.Query: 'SELECT "mrp_production".id FROM "mrp_production" WHERE (((("mrp_production"."state" in %s) OR ("mrp_production"."is_planned" = %s)) AND (("mrp_production"."state" in %s) OR "mrp_production"."state" IS NULL)) AND ("mrp_production"."picking_type_id" in %s))' with params: [('confirmed', 'draft', 'progress', 'to_close'), True, ('draft', 'confirmed', 'progress', 'to_close'), (1, 5, 2, 6, 15)]>

 --------------------------------
Inverse selection of mrp.production() / state: before (("mrp_production"."state" not in %s) OR "mrp_production"."state" IS NULL) | [('done', 'cancel')] -> after (("mrp_production"."state" in %s) OR "mrp_production"."state" IS NULL) | [('draft', 'confirmed', 'progress', 'to_close')]
<osv.Query: 'SELECT "mrp_production".id FROM "mrp_production" WHERE (((("mrp_production"."date_planned_start" < %s) AND ("mrp_production"."state" = %s)) AND (("mrp_production"."state" in %s) OR "mrp_production"."state" IS NULL)) AND ("mrp_production"."picking_type_id" in %s))' with params: ['2022-05-16 00:00:00', 'confirmed', ('draft', 'confirmed', 'progress', 'to_close'), (1, 5, 2, 6, 15)]>

 --------------------------------
Inverse selection of mrp.production() / state: before (("mrp_production"."state" not in %s) OR "mrp_production"."state" IS NULL) | [('done', 'cancel')] -> after (("mrp_production"."state" in %s) OR "mrp_production"."state" IS NULL) | [('draft', 'confirmed', 'progress', 'to_close')]
<osv.Query: 'SELECT "mrp_production".id FROM "mrp_production" WHERE ((("mrp_production"."reservation_state" = %s) AND (("mrp_production"."state" in %s) OR "mrp_production"."state" IS NULL)) AND ("mrp_production"."picking_type_id" in %s))' with params: ['waiting', ('draft', 'confirmed', 'progress', 'to_close'), (1, 5, 2, 6, 15, 1720, 1724, 1721, 1725, 1728, 1729, 1733, 1730, 1734, 1737, 1738, 1742, 1739, 1743, 1746, 1819, 1823, 1820, 1824, 1827, 1828, 1832, 1830, 1829, 1833, 1834, 1836, 1837, 1841, 1839, 1840, 1838, 1842, 1843, 1845, 1844, 1846, 1850, 1847, 1851, 1852, 1854, 1853, 1855, 1859, 1857, 1856, 1860, 1863, 1864, 1868, 1866, 1867, 1865, 1869, 1870, 1872, 1873, 1877, 1875, 1876, 1874, 1878, 1879, 1881, 1880, 1882, 1886, 1884, 1885, 1883, 1887, 1890, 1891, 1895)]>

 --------------------------------
Inverse selection of mrp.production() / state: before (("mrp_production"."state" not in %s) OR "mrp_production"."state" IS NULL) | [('done', 'cancel')] -> after (("mrp_production"."state" in %s) OR "mrp_production"."state" IS NULL) | [('draft', 'confirmed', 'progress', 'to_close')]
<osv.Query: 'SELECT "mrp_production".id FROM "mrp_production" WHERE (((("mrp_production"."state" in %s) OR ("mrp_production"."is_planned" = %s)) AND (("mrp_production"."state" in %s) OR "mrp_production"."state" IS NULL)) AND ("mrp_production"."picking_type_id" in %s))' with params: [('confirmed', 'draft', 'progress', 'to_close'), True, ('draft', 'confirmed', 'progress', 'to_close'), (1, 5, 2, 6, 15, 1720, 1724, 1721, 1725, 1728, 1729, 1733, 1730, 1734, 1737, 1738, 1742, 1739, 1743, 1746, 1819, 1823, 1820, 1824, 1827, 1828, 1832, 1830, 1829, 1833, 1834, 1836, 1837, 1841, 1839, 1840, 1838, 1842, 1843, 1845, 1844, 1846, 1850, 1847, 1851, 1852, 1854, 1853, 1855, 1859, 1857, 1856, 1860, 1863, 1864, 1868, 1866, 1867, 1865, 1869, 1870, 1872, 1873, 1877, 1875, 1876, 1874, 1878, 1879, 1881, 1880, 1882, 1886, 1884, 1885, 1883, 1887, 1890, 1891, 1895)]>

 --------------------------------
Inverse selection of mrp.production() / state: before (("mrp_production"."state" not in %s) OR "mrp_production"."state" IS NULL) | [('done', 'cancel')] -> after (("mrp_production"."state" in %s) OR "mrp_production"."state" IS NULL) | [('draft', 'confirmed', 'progress', 'to_close')]
<osv.Query: 'SELECT "mrp_production".id FROM "mrp_production" WHERE (((("mrp_production"."date_planned_start" < %s) AND ("mrp_production"."state" = %s)) AND (("mrp_production"."state" in %s) OR "mrp_production"."state" IS NULL)) AND ("mrp_production"."picking_type_id" in %s))' with params: ['2022-05-16 00:00:00', 'confirmed', ('draft', 'confirmed', 'progress', 'to_close'), (1, 5, 2, 6, 15, 1720, 1724, 1721, 1725, 1728, 1729, 1733, 1730, 1734, 1737, 1738, 1742, 1739, 1743, 1746, 1819, 1823, 1820, 1824, 1827, 1828, 1832, 1830, 1829, 1833, 1834, 1836, 1837, 1841, 1839, 1840, 1838, 1842, 1843, 1845, 1844, 1846, 1850, 1847, 1851, 1852, 1854, 1853, 1855, 1859, 1857, 1856, 1860, 1863, 1864, 1868, 1866, 1867, 1865, 1869, 1870, 1872, 1873, 1877, 1875, 1876, 1874, 1878, 1879, 1881, 1880, 1882, 1886, 1884, 1885, 1883, 1887, 1890, 1891, 1895)]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL))' with params: [(39, 38), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL)) AND ("stock_move"."state" in %s))' with params: [(39, 38), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned'), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL))' with params: [(39, 38), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL))' with params: [(76487, 75584, 71971, 72307, 75551, 72371, 73030, 73941, 72730, 75034, 74103, 75366, 76476, 71914, 72595, 76290, 71810, 75843, 72847, 75891, 75464, 74240, 72848, 76393, 72626, 73100), '0.00', True, '1/2447/%', True, '1/2447/%', ('waiting', 'confirmed', 'partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL)) AND ("stock_move"."state" in %s))' with params: [(76487, 75584, 71971, 72307, 75551, 72371, 73030, 73941, 72730, 75034, 74103, 75366, 76476, 71914, 72595, 76290, 71810, 75843, 72847, 75891, 75464, 74240, 72848, 76393, 72626, 73100), '0.00', True, '1/2447/%', True, '1/2447/%', ('waiting', 'confirmed', 'partially_available', 'assigned'), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL))' with params: [(76487, 75584, 71971, 72307, 75551, 72371, 73030, 73941, 72730, 75034, 74103, 75366, 76476, 71914, 72595, 76290, 71810, 75843, 72847, 75891, 75464, 74240, 72848, 76393, 72626, 73100), '0.00', True, '1/2447/%', True, '1/2447/%', ('waiting', 'confirmed', 'partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL))' with params: [(76462, 72421, 75536, 75000, 71494, 72811, 74001, 74031, 75086, 72543, 73362, 74038, 76241, 74807, 76437, 75876, 71602, 75109, 73551, 75567, 75443, 72267, 71675, 71671, 76145, 75371, 75848, 76481, 75056, 76061, 71893, 74158, 73715, 72309, 72453, 72124, 74757, 73747, 74332, 73696, 74235, 73211, 76139, 71634), '0.00', True, '1/2503/%', True, '1/2503/%', ('waiting', 'confirmed', 'partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL)) AND ("stock_move"."state" in %s))' with params: [(76462, 72421, 75536, 75000, 71494, 72811, 74001, 74031, 75086, 72543, 73362, 74038, 76241, 74807, 76437, 75876, 71602, 75109, 73551, 75567, 75443, 72267, 71675, 71671, 76145, 75371, 75848, 76481, 75056, 76061, 71893, 74158, 73715, 72309, 72453, 72124, 74757, 73747, 74332, 73696, 74235, 73211, 76139, 71634), '0.00', True, '1/2503/%', True, '1/2503/%', ('waiting', 'confirmed', 'partially_available', 'assigned'), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL))' with params: [(76462, 72421, 75536, 75000, 71494, 72811, 74001, 74031, 75086, 72543, 73362, 74038, 76241, 74807, 76437, 75876, 71602, 75109, 73551, 75567, 75443, 72267, 71675, 71671, 76145, 75371, 75848, 76481, 75056, 76061, 71893, 74158, 73715, 72309, 72453, 72124, 74757, 73747, 74332, 73696, 74235, 73211, 76139, 71634), '0.00', True, '1/2503/%', True, '1/2503/%', ('waiting', 'confirmed', 'partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL))' with params: [(74535, 73069, 74955, 71762, 74764, 76281, 71521, 74340, 72558, 75160, 75878), '0.00', True, '1/2319/%', True, '1/2319/%', ('waiting', 'confirmed', 'partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL)) AND ("stock_move"."state" in %s))' with params: [(74535, 73069, 74955, 71762, 74764, 76281, 71521, 74340, 72558, 75160, 75878), '0.00', True, '1/2319/%', True, '1/2319/%', ('waiting', 'confirmed', 'partially_available', 'assigned'), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL))' with params: [(74535, 73069, 74955, 71762, 74764, 76281, 71521, 74340, 72558, 75160, 75878), '0.00', True, '1/2319/%', True, '1/2319/%', ('waiting', 'confirmed', 'partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL))' with params: [(73482, 73134, 73564, 74780, 74264, 73228, 75584, 75261, 73473, 73731, 75273, 71825, 73262), '0.00', True, '1/2439/%', True, '1/2439/%', ('waiting', 'confirmed', 'partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL)) AND ("stock_move"."state" in %s))' with params: [(73482, 73134, 73564, 74780, 74264, 73228, 75584, 75261, 73473, 73731, 75273, 71825, 73262), '0.00', True, '1/2439/%', True, '1/2439/%', ('waiting', 'confirmed', 'partially_available', 'assigned'), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL))' with params: [(73482, 73134, 73564, 74780, 74264, 73228, 75584, 75261, 73473, 73731, 75273, 71825, 73262), '0.00', True, '1/2439/%', True, '1/2439/%', ('waiting', 'confirmed', 'partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL))' with params: [(73855, 73930, 74019, 76233, 75743, 76036, 74119, 75653, 71665, 71780, 74792, 71930, 72555, 76370, 74973, 73963), '0.00', True, '1/2415/%', True, '1/2415/%', ('waiting', 'confirmed', 'partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL)) AND ("stock_move"."state" in %s))' with params: [(73855, 73930, 74019, 76233, 75743, 76036, 74119, 75653, 71665, 71780, 74792, 71930, 72555, 76370, 74973, 73963), '0.00', True, '1/2415/%', True, '1/2415/%', ('waiting', 'confirmed', 'partially_available', 'assigned'), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL))' with params: [(73855, 73930, 74019, 76233, 75743, 76036, 74119, 75653, 71665, 71780, 74792, 71930, 72555, 76370, 74973, 73963), '0.00', True, '1/2415/%', True, '1/2415/%', ('waiting', 'confirmed', 'partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL))' with params: [(73288, 76041, 75860, 71766, 71954, 72258, 72042, 71984, 75884, 76012, 73090, 72646, 75721, 74411, 73212, 74349, 72174, 75085, 71549, 72171, 72128, 71913, 74889, 71821, 75620, 73740, 74695), '0.00', True, '1/2335/%', True, '1/2335/%', ('waiting', 'confirmed', 'partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL)) AND ("stock_move"."state" in %s))' with params: [(73288, 76041, 75860, 71766, 71954, 72258, 72042, 71984, 75884, 76012, 73090, 72646, 75721, 74411, 73212, 74349, 72174, 75085, 71549, 72171, 72128, 71913, 74889, 71821, 75620, 73740, 74695), '0.00', True, '1/2335/%', True, '1/2335/%', ('waiting', 'confirmed', 'partially_available', 'assigned'), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL))' with params: [(73288, 76041, 75860, 71766, 71954, 72258, 72042, 71984, 75884, 76012, 73090, 72646, 75721, 74411, 73212, 74349, 72174, 75085, 71549, 72171, 72128, 71913, 74889, 71821, 75620, 73740, 74695), '0.00', True, '1/2335/%', True, '1/2335/%', ('waiting', 'confirmed', 'partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL))' with params: [(75787, 73858, 73832, 71600, 74374, 71979, 75663, 72236, 75629, 76482, 73819, 72984, 72030, 74853, 72171), '0.00', True, '1/2479/%', True, '1/2479/%', ('waiting', 'confirmed', 'partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL)) AND ("stock_move"."state" in %s))' with params: [(75787, 73858, 73832, 71600, 74374, 71979, 75663, 72236, 75629, 76482, 73819, 72984, 72030, 74853, 72171), '0.00', True, '1/2479/%', True, '1/2479/%', ('waiting', 'confirmed', 'partially_available', 'assigned'), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL))' with params: [(75787, 73858, 73832, 71600, 74374, 71979, 75663, 72236, 75629, 76482, 73819, 72984, 72030, 74853, 72171), '0.00', True, '1/2479/%', True, '1/2479/%', ('waiting', 'confirmed', 'partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL))' with params: [(72312, 75830, 71781, 72520, 75114, 75749, 74909, 71514, 75161, 74948, 71919, 74323, 75919, 76228, 74235, 71653, 76333, 74301, 73549, 72733, 76321, 73724, 76311, 75640, 71581, 74599, 75273, 74897, 73075, 71810, 75277, 73579, 72843, 76061, 75038, 71838, 74443, 72158, 75791, 75565, 76012, 74987, 73772, 72242, 71680, 72490, 71979, 74796, 76233, 72675, 75123, 73455, 75505, 75605, 75554, 72709, 73383, 74246, 74589, 74300, 75574, 76369, 75918, 72761, 74975, 75103, 73944, 74303, 75233, 75865, 71937, 74401, 75652, 75465, 74851, 71832, 72623, 74062, 74254, 73740, 74883, 74915, 74332, 74976, 74208, 75227, 71880, 71682, 76202), '0.00', True, '1/2463/%', True, '1/2463/%', ('waiting', 'confirmed', 'partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL)) AND ("stock_move"."state" in %s))' with params: [(72312, 75830, 71781, 72520, 75114, 75749, 74909, 71514, 75161, 74948, 71919, 74323, 75919, 76228, 74235, 71653, 76333, 74301, 73549, 72733, 76321, 73724, 76311, 75640, 71581, 74599, 75273, 74897, 73075, 71810, 75277, 73579, 72843, 76061, 75038, 71838, 74443, 72158, 75791, 75565, 76012, 74987, 73772, 72242, 71680, 72490, 71979, 74796, 76233, 72675, 75123, 73455, 75505, 75605, 75554, 72709, 73383, 74246, 74589, 74300, 75574, 76369, 75918, 72761, 74975, 75103, 73944, 74303, 75233, 75865, 71937, 74401, 75652, 75465, 74851, 71832, 72623, 74062, 74254, 73740, 74883, 74915, 74332, 74976, 74208, 75227, 71880, 71682, 76202), '0.00', True, '1/2463/%', True, '1/2463/%', ('waiting', 'confirmed', 'partially_available', 'assigned'), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL))' with params: [(72312, 75830, 71781, 72520, 75114, 75749, 74909, 71514, 75161, 74948, 71919, 74323, 75919, 76228, 74235, 71653, 76333, 74301, 73549, 72733, 76321, 73724, 76311, 75640, 71581, 74599, 75273, 74897, 73075, 71810, 75277, 73579, 72843, 76061, 75038, 71838, 74443, 72158, 75791, 75565, 76012, 74987, 73772, 72242, 71680, 72490, 71979, 74796, 76233, 72675, 75123, 73455, 75505, 75605, 75554, 72709, 73383, 74246, 74589, 74300, 75574, 76369, 75918, 72761, 74975, 75103, 73944, 74303, 75233, 75865, 71937, 74401, 75652, 75465, 74851, 71832, 72623, 74062, 74254, 73740, 74883, 74915, 74332, 74976, 74208, 75227, 71880, 71682, 76202), '0.00', True, '1/2463/%', True, '1/2463/%', ('waiting', 'confirmed', 'partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL))' with params: [(75143, 72449, 72240, 75379), '0.00', True, '1/2423/%', True, '1/2423/%', ('waiting', 'confirmed', 'partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL)) AND ("stock_move"."state" in %s))' with params: [(75143, 72449, 72240, 75379), '0.00', True, '1/2423/%', True, '1/2423/%', ('waiting', 'confirmed', 'partially_available', 'assigned'), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL))' with params: [(75143, 72449, 72240, 75379), '0.00', True, '1/2423/%', True, '1/2423/%', ('waiting', 'confirmed', 'partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL))' with params: [(72267, 73562, 76367, 74014, 72758, 72626, 74244, 73584, 73976, 73473, 76392, 73090, 72132, 74869, 72780, 73929, 74843, 75055, 71591, 73483, 72675, 74763, 72801, 73040, 75028, 76494, 73000, 76486, 72727, 71896, 75787, 73564, 71838, 74600, 72591, 75736, 74888, 73859, 76072, 73547, 75005, 73166, 71769, 75023, 72456, 72015, 73749, 75083, 75776, 76249, 73456, 72999, 75449, 71514, 73606, 75029, 71550, 75760, 72255, 76228, 75681, 71707), '0.00', True, '1/2471/%', True, '1/2471/%', ('waiting', 'confirmed', 'partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL)) AND ("stock_move"."state" in %s))' with params: [(72267, 73562, 76367, 74014, 72758, 72626, 74244, 73584, 73976, 73473, 76392, 73090, 72132, 74869, 72780, 73929, 74843, 75055, 71591, 73483, 72675, 74763, 72801, 73040, 75028, 76494, 73000, 76486, 72727, 71896, 75787, 73564, 71838, 74600, 72591, 75736, 74888, 73859, 76072, 73547, 75005, 73166, 71769, 75023, 72456, 72015, 73749, 75083, 75776, 76249, 73456, 72999, 75449, 71514, 73606, 75029, 71550, 75760, 72255, 76228, 75681, 71707), '0.00', True, '1/2471/%', True, '1/2471/%', ('waiting', 'confirmed', 'partially_available', 'assigned'), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL))' with params: [(72267, 73562, 76367, 74014, 72758, 72626, 74244, 73584, 73976, 73473, 76392, 73090, 72132, 74869, 72780, 73929, 74843, 75055, 71591, 73483, 72675, 74763, 72801, 73040, 75028, 76494, 73000, 76486, 72727, 71896, 75787, 73564, 71838, 74600, 72591, 75736, 74888, 73859, 76072, 73547, 75005, 73166, 71769, 75023, 72456, 72015, 73749, 75083, 75776, 76249, 73456, 72999, 75449, 71514, 73606, 75029, 71550, 75760, 72255, 76228, 75681, 71707), '0.00', True, '1/2471/%', True, '1/2471/%', ('waiting', 'confirmed', 'partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL))' with params: [(71749, 73422, 75366, 74353, 72904, 72060, 73392, 73938, 76404, 76196, 75913, 74692, 75151, 74485, 75578, 76297, 76137, 75866, 75017, 72845, 73252, 76093, 71842, 73046, 76061, 73474, 72918, 71570, 75607, 73593, 72013, 73144, 73332, 76355, 72173, 75468, 73028, 71932, 76385, 74772, 76111, 72575, 75776, 74543, 75935, 72836, 75160, 73447, 76273, 75817), '0.00', True, '1/2495/%', True, '1/2495/%', ('waiting', 'confirmed', 'partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL)) AND ("stock_move"."state" in %s))' with params: [(71749, 73422, 75366, 74353, 72904, 72060, 73392, 73938, 76404, 76196, 75913, 74692, 75151, 74485, 75578, 76297, 76137, 75866, 75017, 72845, 73252, 76093, 71842, 73046, 76061, 73474, 72918, 71570, 75607, 73593, 72013, 73144, 73332, 76355, 72173, 75468, 73028, 71932, 76385, 74772, 76111, 72575, 75776, 74543, 75935, 72836, 75160, 73447, 76273, 75817), '0.00', True, '1/2495/%', True, '1/2495/%', ('waiting', 'confirmed', 'partially_available', 'assigned'), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL))' with params: [(71749, 73422, 75366, 74353, 72904, 72060, 73392, 73938, 76404, 76196, 75913, 74692, 75151, 74485, 75578, 76297, 76137, 75866, 75017, 72845, 73252, 76093, 71842, 73046, 76061, 73474, 72918, 71570, 75607, 73593, 72013, 73144, 73332, 76355, 72173, 75468, 73028, 71932, 76385, 74772, 76111, 72575, 75776, 74543, 75935, 72836, 75160, 73447, 76273, 75817), '0.00', True, '1/2495/%', True, '1/2495/%', ('waiting', 'confirmed', 'partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL))' with params: [(71937, 72985, 71682, 72186, 72785, 75765, 72336, 72723, 73076, 74165, 73581, 72190, 75012, 76072, 71636, 75091, 75160, 74424, 74539, 71585, 72481, 71781, 75735, 74463, 72544, 74062, 75656, 73594, 75477, 74938, 75888, 74763, 75613, 75848, 74314, 72780, 72132, 72933, 73442, 72227, 74387, 72137, 75105, 73966, 75671, 76208, 74979, 72950, 76344), '0.00', True, '1/2327/%', True, '1/2327/%', ('waiting', 'confirmed', 'partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL)) AND ("stock_move"."state" in %s))' with params: [(71937, 72985, 71682, 72186, 72785, 75765, 72336, 72723, 73076, 74165, 73581, 72190, 75012, 76072, 71636, 75091, 75160, 74424, 74539, 71585, 72481, 71781, 75735, 74463, 72544, 74062, 75656, 73594, 75477, 74938, 75888, 74763, 75613, 75848, 74314, 72780, 72132, 72933, 73442, 72227, 74387, 72137, 75105, 73966, 75671, 76208, 74979, 72950, 76344), '0.00', True, '1/2327/%', True, '1/2327/%', ('waiting', 'confirmed', 'partially_available', 'assigned'), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL))' with params: [(71937, 72985, 71682, 72186, 72785, 75765, 72336, 72723, 73076, 74165, 73581, 72190, 75012, 76072, 71636, 75091, 75160, 74424, 74539, 71585, 72481, 71781, 75735, 74463, 72544, 74062, 75656, 73594, 75477, 74938, 75888, 74763, 75613, 75848, 74314, 72780, 72132, 72933, 73442, 72227, 74387, 72137, 75105, 73966, 75671, 76208, 74979, 72950, 76344), '0.00', True, '1/2327/%', True, '1/2327/%', ('waiting', 'confirmed', 'partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL))' with params: [(73701, 71568, 74517, 72060, 72940, 73816, 73091, 75123, 76002, 72962, 74692, 72344, 73679, 71806, 75596, 73174, 75409, 72677, 76145, 72030, 72771, 75607, 75948, 75107, 72773, 73589, 76137, 72586, 75161, 72564), '0.00', True, '1/2455/%', True, '1/2455/%', ('waiting', 'confirmed', 'partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL)) AND ("stock_move"."state" in %s))' with params: [(73701, 71568, 74517, 72060, 72940, 73816, 73091, 75123, 76002, 72962, 74692, 72344, 73679, 71806, 75596, 73174, 75409, 72677, 76145, 72030, 72771, 75607, 75948, 75107, 72773, 73589, 76137, 72586, 75161, 72564), '0.00', True, '1/2455/%', True, '1/2455/%', ('waiting', 'confirmed', 'partially_available', 'assigned'), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL))' with params: [(73701, 71568, 74517, 72060, 72940, 73816, 73091, 75123, 76002, 72962, 74692, 72344, 73679, 71806, 75596, 73174, 75409, 72677, 76145, 72030, 72771, 75607, 75948, 75107, 72773, 73589, 76137, 72586, 75161, 72564), '0.00', True, '1/2455/%', True, '1/2455/%', ('waiting', 'confirmed', 'partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL))' with params: [(73917, 75468, 76346, 72421, 75241, 72013, 72024, 76426, 73198, 76434, 75710, 72205, 74246, 72987, 72174, 72463, 71777, 74031, 73944, 72713, 71782, 73964), '0.00', True, '1/2431/%', True, '1/2431/%', ('waiting', 'confirmed', 'partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL)) AND ("stock_move"."state" in %s))' with params: [(73917, 75468, 76346, 72421, 75241, 72013, 72024, 76426, 73198, 76434, 75710, 72205, 74246, 72987, 72174, 72463, 71777, 74031, 73944, 72713, 71782, 73964), '0.00', True, '1/2431/%', True, '1/2431/%', ('waiting', 'confirmed', 'partially_available', 'assigned'), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL))' with params: [(73917, 75468, 76346, 72421, 75241, 72013, 72024, 76426, 73198, 76434, 75710, 72205, 74246, 72987, 72174, 72463, 71777, 74031, 73944, 72713, 71782, 73964), '0.00', True, '1/2431/%', True, '1/2431/%', ('waiting', 'confirmed', 'partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL))' with params: [(73252, 72173, 71924, 74138, 71853, 72887, 74432, 72677, 75997, 74562, 71899, 76208, 71843, 73788, 74469, 72185, 74504, 74109, 75551, 71609, 73015, 75103, 73302, 73281), '0.00', True, '1/2487/%', True, '1/2487/%', ('waiting', 'confirmed', 'partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL)) AND ("stock_move"."state" in %s))' with params: [(73252, 72173, 71924, 74138, 71853, 72887, 74432, 72677, 75997, 74562, 71899, 76208, 71843, 73788, 74469, 72185, 74504, 74109, 75551, 71609, 73015, 75103, 73302, 73281), '0.00', True, '1/2487/%', True, '1/2487/%', ('waiting', 'confirmed', 'partially_available', 'assigned'), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL))' with params: [(73252, 72173, 71924, 74138, 71853, 72887, 74432, 72677, 75997, 74562, 71899, 76208, 71843, 73788, 74469, 72185, 74504, 74109, 75551, 71609, 73015, 75103, 73302, 73281), '0.00', True, '1/2487/%', True, '1/2487/%', ('waiting', 'confirmed', 'partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL))' with params: [(75445, 74491, 75917, 71884, 73711, 75935, 74587, 72948, 75411, 71555, 74798, 74732, 73040, 75637, 74216, 75971, 73198, 71685, 76393, 72308, 74249, 75480, 72354, 76370, 72646, 72911, 73695), '0.00', True, '1/2407/%', True, '1/2407/%', ('waiting', 'confirmed', 'partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL)) AND ("stock_move"."state" in %s))' with params: [(75445, 74491, 75917, 71884, 73711, 75935, 74587, 72948, 75411, 71555, 74798, 74732, 73040, 75637, 74216, 75971, 73198, 71685, 76393, 72308, 74249, 75480, 72354, 76370, 72646, 72911, 73695), '0.00', True, '1/2407/%', True, '1/2407/%', ('waiting', 'confirmed', 'partially_available', 'assigned'), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL))' with params: [(75445, 74491, 75917, 71884, 73711, 75935, 74587, 72948, 75411, 71555, 74798, 74732, 73040, 75637, 74216, 75971, 73198, 71685, 76393, 72308, 74249, 75480, 72354, 76370, 72646, 72911, 73695), '0.00', True, '1/2407/%', True, '1/2407/%', ('waiting', 'confirmed', 'partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL))' with params: [(39, 38), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL)) AND ("stock_move"."state" in %s))' with params: [(39, 38), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned'), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL))' with params: [(39, 38), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL))' with params: [(75200, 72452, 76375), '0.00', True, '1/2319/%', True, '1/2319/%', ('waiting', 'confirmed', 'partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL)) AND ("stock_move"."state" in %s))' with params: [(75200, 72452, 76375), '0.00', True, '1/2319/%', True, '1/2319/%', ('waiting', 'confirmed', 'partially_available', 'assigned'), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL))' with params: [(75200, 72452, 76375), '0.00', True, '1/2319/%', True, '1/2319/%', ('waiting', 'confirmed', 'partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL))' with params: [(72976, 72142, 76019, 75710, 72878), '0.00', True, '1/2487/%', True, '1/2487/%', ('waiting', 'confirmed', 'partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL)) AND ("stock_move"."state" in %s))' with params: [(72976, 72142, 76019, 75710, 72878), '0.00', True, '1/2487/%', True, '1/2487/%', ('waiting', 'confirmed', 'partially_available', 'assigned'), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL))' with params: [(72976, 72142, 76019, 75710, 72878), '0.00', True, '1/2487/%', True, '1/2487/%', ('waiting', 'confirmed', 'partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL))' with params: [(73343, 75997, 72950, 71636, 74368, 75121, 75888, 73120, 76302, 72086, 73803, 75000, 75023), '0.00', True, '1/2495/%', True, '1/2495/%', ('waiting', 'confirmed', 'partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL)) AND ("stock_move"."state" in %s))' with params: [(73343, 75997, 72950, 71636, 74368, 75121, 75888, 73120, 76302, 72086, 73803, 75000, 75023), '0.00', True, '1/2495/%', True, '1/2495/%', ('waiting', 'confirmed', 'partially_available', 'assigned'), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL))' with params: [(73343, 75997, 72950, 71636, 74368, 75121, 75888, 73120, 76302, 72086, 73803, 75000, 75023), '0.00', True, '1/2495/%', True, '1/2495/%', ('waiting', 'confirmed', 'partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL))' with params: [(73075, 72617, 75468, 73055, 72826, 72767, 74182, 72247, 75734, 73921, 76240, 73258, 73171, 74056, 73722, 76150, 73551, 72689, 72547, 74704), '0.00', True, '1/2447/%', True, '1/2447/%', ('waiting', 'confirmed', 'partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL)) AND ("stock_move"."state" in %s))' with params: [(73075, 72617, 75468, 73055, 72826, 72767, 74182, 72247, 75734, 73921, 76240, 73258, 73171, 74056, 73722, 76150, 73551, 72689, 72547, 74704), '0.00', True, '1/2447/%', True, '1/2447/%', ('waiting', 'confirmed', 'partially_available', 'assigned'), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL))' with params: [(73075, 72617, 75468, 73055, 72826, 72767, 74182, 72247, 75734, 73921, 76240, 73258, 73171, 74056, 73722, 76150, 73551, 72689, 72547, 74704), '0.00', True, '1/2447/%', True, '1/2447/%', ('waiting', 'confirmed', 'partially_available', 'assigned')]>

 --------------------------------
Inverse selection of mrp.production() / state: before (("mrp_production"."state" not in %s) OR "mrp_production"."state" IS NULL) | [('done', 'cancel')] -> after (("mrp_production"."state" in %s) OR "mrp_production"."state" IS NULL) | [('draft', 'confirmed', 'progress', 'to_close')]
<osv.Query: 'SELECT "mrp_production".id FROM "mrp_production" WHERE ((("mrp_production"."reservation_state" = %s) AND (("mrp_production"."state" in %s) OR "mrp_production"."state" IS NULL)) AND ("mrp_production"."picking_type_id" in %s))' with params: ['waiting', ('draft', 'confirmed', 'progress', 'to_close'), (1, 5, 2, 6, 15, 1720, 1724, 1721, 1725, 1728, 1729, 1733, 1730, 1734, 1737, 1738, 1742, 1739, 1743, 1746, 1819, 1823, 1820, 1824, 1827, 1828, 1832, 1830, 1829, 1833, 1834, 1836, 1837, 1841, 1839, 1840, 1838, 1842, 1843, 1845, 1844, 1846, 1850, 1847, 1851, 1852, 1854, 1853, 1855, 1859, 1857, 1856, 1860, 1863, 1864, 1868, 1866, 1867, 1865, 1869, 1870, 1872, 1873, 1877, 1875, 1876, 1874, 1878, 1879, 1881, 1880, 1882, 1886, 1884, 1885, 1883, 1887, 1890, 1891, 1895)]>

 --------------------------------
Inverse selection of mrp.production() / state: before (("mrp_production"."state" not in %s) OR "mrp_production"."state" IS NULL) | [('done', 'cancel')] -> after (("mrp_production"."state" in %s) OR "mrp_production"."state" IS NULL) | [('draft', 'confirmed', 'progress', 'to_close')]
<osv.Query: 'SELECT "mrp_production".id FROM "mrp_production" WHERE (((("mrp_production"."state" in %s) OR ("mrp_production"."is_planned" = %s)) AND (("mrp_production"."state" in %s) OR "mrp_production"."state" IS NULL)) AND ("mrp_production"."picking_type_id" in %s))' with params: [('confirmed', 'draft', 'progress', 'to_close'), True, ('draft', 'confirmed', 'progress', 'to_close'), (1, 5, 2, 6, 15, 1720, 1724, 1721, 1725, 1728, 1729, 1733, 1730, 1734, 1737, 1738, 1742, 1739, 1743, 1746, 1819, 1823, 1820, 1824, 1827, 1828, 1832, 1830, 1829, 1833, 1834, 1836, 1837, 1841, 1839, 1840, 1838, 1842, 1843, 1845, 1844, 1846, 1850, 1847, 1851, 1852, 1854, 1853, 1855, 1859, 1857, 1856, 1860, 1863, 1864, 1868, 1866, 1867, 1865, 1869, 1870, 1872, 1873, 1877, 1875, 1876, 1874, 1878, 1879, 1881, 1880, 1882, 1886, 1884, 1885, 1883, 1887, 1890, 1891, 1895)]>

 --------------------------------
Inverse selection of mrp.production() / state: before (("mrp_production"."state" not in %s) OR "mrp_production"."state" IS NULL) | [('done', 'cancel')] -> after (("mrp_production"."state" in %s) OR "mrp_production"."state" IS NULL) | [('draft', 'confirmed', 'progress', 'to_close')]
<osv.Query: 'SELECT "mrp_production".id FROM "mrp_production" WHERE (((("mrp_production"."date_planned_start" < %s) AND ("mrp_production"."state" = %s)) AND (("mrp_production"."state" in %s) OR "mrp_production"."state" IS NULL)) AND ("mrp_production"."picking_type_id" in %s))' with params: ['2022-05-16 00:00:00', 'confirmed', ('draft', 'confirmed', 'progress', 'to_close'), (1, 5, 2, 6, 15, 1720, 1724, 1721, 1725, 1728, 1729, 1733, 1730, 1734, 1737, 1738, 1742, 1739, 1743, 1746, 1819, 1823, 1820, 1824, 1827, 1828, 1832, 1830, 1829, 1833, 1834, 1836, 1837, 1841, 1839, 1840, 1838, 1842, 1843, 1845, 1844, 1846, 1850, 1847, 1851, 1852, 1854, 1853, 1855, 1859, 1857, 1856, 1860, 1863, 1864, 1868, 1866, 1867, 1865, 1869, 1870, 1872, 1873, 1877, 1875, 1876, 1874, 1878, 1879, 1881, 1880, 1882, 1886, 1884, 1885, 1883, 1887, 1890, 1891, 1895)]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL))' with params: [(74774, 76139, 76126, 75255, 72687, 72647, 72314, 72513, 74921, 76494, 74288, 75852, 73391, 76075, 73351, 73449, 74994), '0.00', True, '1/2495/%', True, '1/2495/%', ('waiting', 'confirmed', 'partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL)) AND ("stock_move"."state" in %s))' with params: [(74774, 76139, 76126, 75255, 72687, 72647, 72314, 72513, 74921, 76494, 74288, 75852, 73391, 76075, 73351, 73449, 74994), '0.00', True, '1/2495/%', True, '1/2495/%', ('waiting', 'confirmed', 'partially_available', 'assigned'), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL))' with params: [(74774, 76139, 76126, 75255, 72687, 72647, 72314, 72513, 74921, 76494, 74288, 75852, 73391, 76075, 73351, 73449, 74994), '0.00', True, '1/2495/%', True, '1/2495/%', ('waiting', 'confirmed', 'partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL))' with params: [(75760, 74277, 73930, 72780, 72887, 73359), '0.00', True, '1/2415/%', True, '1/2415/%', ('waiting', 'confirmed', 'partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL)) AND ("stock_move"."state" in %s))' with params: [(75760, 74277, 73930, 72780, 72887, 73359), '0.00', True, '1/2415/%', True, '1/2415/%', ('waiting', 'confirmed', 'partially_available', 'assigned'), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL))' with params: [(75760, 74277, 73930, 72780, 72887, 73359), '0.00', True, '1/2415/%', True, '1/2415/%', ('waiting', 'confirmed', 'partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL))' with params: [(75008, 72789), '0.00', True, '1/2503/%', True, '1/2503/%', ('waiting', 'confirmed', 'partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL)) AND ("stock_move"."state" in %s))' with params: [(75008, 72789), '0.00', True, '1/2503/%', True, '1/2503/%', ('waiting', 'confirmed', 'partially_available', 'assigned'), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL))' with params: [(75008, 72789), '0.00', True, '1/2503/%', True, '1/2503/%', ('waiting', 'confirmed', 'partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL))' with params: [(75997, 76396, 75700, 71707, 71535, 75723, 72558, 75535, 75565, 75366, 72929, 71509, 72212, 73441, 75726, 75895, 75972, 72242, 75349), '0.00', True, '1/2431/%', True, '1/2431/%', ('waiting', 'confirmed', 'partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL)) AND ("stock_move"."state" in %s))' with params: [(75997, 76396, 75700, 71707, 71535, 75723, 72558, 75535, 75565, 75366, 72929, 71509, 72212, 73441, 75726, 75895, 75972, 72242, 75349), '0.00', True, '1/2431/%', True, '1/2431/%', ('waiting', 'confirmed', 'partially_available', 'assigned'), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL))' with params: [(75997, 76396, 75700, 71707, 71535, 75723, 72558, 75535, 75565, 75366, 72929, 71509, 72212, 73441, 75726, 75895, 75972, 72242, 75349), '0.00', True, '1/2431/%', True, '1/2431/%', ('waiting', 'confirmed', 'partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL))' with params: [(74029, 71755, 73678, 72017, 75967, 75151, 72969, 74976, 73968, 72393), '0.00', True, '1/2479/%', True, '1/2479/%', ('waiting', 'confirmed', 'partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL)) AND ("stock_move"."state" in %s))' with params: [(74029, 71755, 73678, 72017, 75967, 75151, 72969, 74976, 73968, 72393), '0.00', True, '1/2479/%', True, '1/2479/%', ('waiting', 'confirmed', 'partially_available', 'assigned'), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL))' with params: [(74029, 71755, 73678, 72017, 75967, 75151, 72969, 74976, 73968, 72393), '0.00', True, '1/2479/%', True, '1/2479/%', ('waiting', 'confirmed', 'partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL))' with params: [(16, 31), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL)) AND ("stock_move"."state" in %s))' with params: [(16, 31), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned'), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL))' with params: [(16, 31), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL))' with params: [(22208, 13403, 21501, 26054, 62259, 64085, 30488, 7430, 3096, 64535, 7330, 47168, 24401, 20129, 66897, 47584, 23468, 72972, 65115, 71347, 39064, 45150, 69271, 55724, 63406, 18121, 39906, 23188, 56769, 63714, 21771, 11328, 34619, 16677, 15714, 52566, 65110, 3497, 20894, 61062, 55790, 7326, 1167, 47093, 26099, 60159, 33139, 1064, 53397, 52443, 41904, 63465, 18017, 62767, 26180, 10781, 63310, 73409, 54851, 73761, 13254, 76367, 52964, 20235, 21174, 49036, 11661, 10985, 76457, 63122, 38998, 1225, 21209, 49891, 34645, 47976, 44823, 18022, 39477, 46830, 36473, 65851, 29526, 39394, 30470, 55909, 47560, 60550, 40773, 1284, 75984, 22841, 36170, 42947, 63769, 4591, 1835, 33210, 22904, 16801, 68167, 23284, 23587, 23425, 43362, 1646, 34986, 40311, 20125, 47864, 69423, 32067, 15831, 40289, 43080, 63539, 66164, 39913, 5284, 44853, 29356, 6146, 42364, 66779, 9135, 52497, 37945, 55865, 47176, 42344, 46826, 39656, 65448, 28494, 15704, 37479, 63652, 12364, 22484, 60256, 2177, 9894, 35218, 62794, 16706, 22299, 65175, 75787, 73632, 34749, 44202, 42282, 22572, 895, 64848, 34673, 7451, 19348, 56765, 71448, 52459, 37674, 73579, 11460, 22744, 23416, 3530, 23684, 42331, 11307, 60963, 56317, 1572, 69320, 71261, 64827, 21156, 35455, 63252, 53544, 22047, 52511, 52307, 19979, 13388, 51857, 21857, 25354, 10893, 19594, 55333, 5811, 1941, 12847, 69232, 52400, 20930, 66316, 74611, 72967, 53817, 23449, 72727, 59362, 48921, 21858, 69290, 74487, 75727, 19275, 45240, 52586, 9094, 71767, 65710, 21193, 63339, 18837, 53631, 3065, 47442, 41840, 75286, 22996, 5792, 72190, 35170, 35382, 23805, 9056, 16629, 63837, 74739, 75920, 19921, 48991, 18636, 13862, 2346, 75791, 56813, 16039, 43805, 53279, 63550, 21270, 28163, 60236, 62716, 21076, 10070, 22735, 37298, 56398, 43027, 39872, 65233, 19012, 71511, 7377, 20092, 56366, 3331, 21201, 16489, 33374, 21055, 22871, 828, 63870, 20962, 52192, 68767, 18076, 53626, 32031, 72576, 13354, 55890, 59330, 20469, 69011, 58321, 41799, 1497, 35311, 42485, 13678, 23111, 66163, 56548, 18895, 26082, 65838, 47227, 56587, 60815, 12122, 56477, 7439, 65330, 35433, 41800, 17781, 13568, 28384, 67413, 56810, 63162, 12901, 42976, 2189, 34671, 23224, 25314, 39411, 45153, 66889, 23157, 49709, 10898, 2217, 5887, 27950, 10583, 21755, 74667, 25345, 27786, 49636, 73278, 72598, 36419, 19332, 28285, 63601, 23048, 47877, 44299, 15407, 68979, 52599, 71669, 2207, 44854, 76327, 953, 20922, 62826, 7446, 28164, 2455, 3024, 37141, 60378, 54679, 56851, 60079, 56278, 43054, 52248, 63210, 62237, 20138, 56322, 26169, 19897, 54879, 13838, 2873, 19068, 71842, 13536, 37159, 16735, 19515, 18451, 64531, 19904, 37586, 920, 17705, 26556, 66385, 18679, 41953, 3551, 9892, 20964, 4414, 2966, 22526, 22982, 3324, 74631, 65594, 63170, 49966, 55551, 54771, 63562, 61069, 35101, 1389, 60620, 26004, 28343, 65595, 34293, 11179, 49662, 3791, 44304, 74919, 39841, 63690, 18422, 32462, 37864, 22544, 59390, 42166, 75831, 74460, 22332, 15707, 15850, 24337, 41853, 39605, 22799, 4252, 3523, 4392, 72550, 18898, 74733, 59337, 49961, 10816, 36741, 55851, 48961, 64097, 19380, 76082, 28086, 49799, 10809, 19647, 20294, 2157, 22110, 55406, 44944, 66075, 22087, 52625, 47218, 60434, 63738, 24416, 65093, 43436, 22595, 18792, 22149, 46849, 28374, 29579, 67299, 23572, 16719, 63650, 37316, 60230, 5874, 53906, 68950, 33270, 29508, 56291, 53762, 1084, 66094, 53494, 64206, 10579, 29771, 3484, 64195, 32364, 75379, 1981, 39870, 17775, 66629, 68495, 48957, 49807, 75526, 40776, 23380, 36738, 53359, 19578, 35791, 20127, 13533, 63148, 74686, 34372, 18536, 55284, 76218, 32082, 25991, 46758, 73402, 53381, 74977, 18271, 855, 60799, 10493, 65625, 3385, 41598, 34156, 34119, 27441, 9664, 4301, 73389, 7347, 43801, 76391, 62790, 28173, 21267, 49601, 30452, 61051, 53301, 40091, 64541, 13830, 1801, 62713, 35229, 53551, 32027, 22067, 75612, 53743, 66319, 69040, 49790, 32170, 65976, 2901, 34724, 42186, 65151, 26150, 66405, 15894, 55841, 74077, 55634, 64766, 18383, 66985, 47915, 23658, 13711, 23176, 63966, 68729, 64372, 28529, 32452, 69195, 1416, 39017, 32075, 35087, 19383, 65424, 2846, 23609, 2248, 36809, 1598, 16499, 11141, 13088, 43414, 43736, 48987, 29440, 17974, 49748, 40280, 47984, 12967, 4449, 11305, 3495, 21208, 62730, 36465, 23780, 5351, 5280, 20101, 18280, 26116, 47939, 46791, 5906, 26030, 40079, 64720, 16715, 55749, 49620, 17893, 74381, 23585, 22372, 18348, 63807, 31600, 39842, 13393, 43191, 31911, 66718, 2334, 47187, 69233, 64756, 65828, 72408, 66364, 52271, 20949, 34969, 36484, 73742, 69114, 60462, 60578, 66136, 72157, 5359, 8294, 22797, 65836, 13466, 35000, 53933, 53297, 1667, 35447, 75567, 76386, 47228, 60403, 18888, 53923, 75914, 72626, 24351, 71318, 28574, 35349, 49089, 68520, 18736, 1722, 49707, 66574, 15211, 36763, 43735, 54494, 72782, 15914, 39645, 64216, 73798, 40771, 68795, 64364, 36044, 65296, 2206, 53835, 12279, 22822, 68749, 35173, 10612, 17772, 16814, 68710, 19418, 56666, 15844, 41841, 35003, 68447, 20371, 13391, 58431, 39148, 9577, 55304, 39359, 44954, 9799, 65840, 71380, 28366, 2108, 18373, 35393, 17753, 56604, 23127, 53984, 37608, 47393, 39452, 7429, 19030, 67197, 54858, 1381, 27897, 31962, 68721, 52176, 2889, 42986, 43537, 26216, 71528, 38032, 37312, 66428, 71691, 23467, 10941, 64946, 39003, 3178, 13174, 52305, 69277, 22301, 42397, 5868, 16710, 4700, 26543, 68709, 28314, 43583, 5885, 39767, 60179, 19455, 13164, 51851, 12287, 35164, 9126, 63759, 71875, 65321, 23337, 1286, 28187, 60402, 56409, 36050, 63614, 39084, 71678, 20227, 7283, 66523, 12836, 19532, 47923, 13741, 18374, 65626, 19075, 43138, 12603, 44930, 32962, 43182, 55384, 18961, 56729, 74165, 66667, 71992, 75108, 23260, 19946, 41846, 43569, 36228, 62847, 37542, 64810, 56475, 12227, 58178, 19438, 18041, 1173, 43482, 32127, 43750, 46828, 23649, 53576, 4271, 60647, 58454, 55708, 3535, 32096, 71695, 34919, 8733, 39352, 59096, 67345, 47502, 63171, 3492, 47036, 75328, 27975, 1500, 62215, 53401, 60338, 19882, 59347, 36070, 36211, 65195, 952, 39888, 55359, 76446, 42448, 43678, 42350, 73391, 52546, 2897, 37872, 39147, 69375, 35430, 13205, 65221, 36662, 35376, 39333, 49558, 65085, 1962, 39234, 19951, 53432, 12420, 36219, 34898, 69321, 66443, 37455, 26278, 2122, 16589, 24328, 22271, 66063, 21183, 2357, 21751, 22198, 43118, 36343, 63173, 36309, 22601, 43825, 22552, 34868, 50086, 39883, 34711, 42999, 72913, 15793, 55560, 36811, 22762, 35069, 55529, 55751, 22787, 74411, 19729, 21749, 18560, 20179, 26007, 54877, 46810, 56883, 43604, 41790, 10529, 10842, 21296, 53313, 28035, 26153, 3456, 55898, 43144, 53460, 37138, 53573, 15855, 65550, 60267, 22322, 10743, 65589, 17951, 28185, 15956, 39112, 74966, 28140, 15769, 69224, 2339, 47174, 56268, 76462, 33371, 17935, 3317, 18163, 44925, 66848, 13220, 17777, 54732, 35171, 12167, 64270, 23211, 40735, 73046, 2394, 43121, 68491, 13569, 22516, 19044, 54029, 75736, 44950, 3401, 20393, 43235, 15665, 13323, 13963, 12123, 18249, 63910, 49647, 35317, 1967, 45209, 36318, 49855, 75377, 16566, 58452, 55492, 18634, 6157, 21151, 2092, 20364, 44325, 25250, 16845, 63620, 34326, 61035, 65570, 19090, 22794, 62831, 43547, 53398, 47861, 28481, 41117, 76208, 63479, 1504, 55637, 41796, 60556, 72672, 15719, 23774, 39880, 52998, 69041, 43101, 34114, 22337, 1990, 11120, 65246, 37690, 43226, 64497, 34650, 62364, 35111, 10779, 52488, 39781, 18033, 63120, 20402, 13665, 18226, 2067, 20454, 35300, 55871, 53017, 40911, 55268, 68328, 13151, 34796, 54128, 34841, 43155, 60030, 16553, 54476, 56659, 20953, 41877, 65363, 19668, 35146, 18019, 73864, 29703, 39457, 6186, 23560, 18370, 2261, 10851, 63755, 62902, 23612, 26175, 38954, 1902, 28484, 75647, 34320, 28572, 47085, 15226, 63397, 65530, 60626, 53949, 37830, 7260, 47999, 68741, 75825, 7268, 12163, 69261, 69130, 58944, 72309, 28360, 44080, 52609, 3490, 43190, 39582, 29384, 16524, 34755, 21197, 75824), '0.00', True, '1/2327/%', True, '1/2327/%', ('waiting', 'confirmed', 'partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL)) AND ("stock_move"."state" in %s))' with params: [(22208, 13403, 21501, 26054, 62259, 64085, 30488, 7430, 3096, 64535, 7330, 47168, 24401, 20129, 66897, 47584, 23468, 72972, 65115, 71347, 39064, 45150, 69271, 55724, 63406, 18121, 39906, 23188, 56769, 63714, 21771, 11328, 34619, 16677, 15714, 52566, 65110, 3497, 20894, 61062, 55790, 7326, 1167, 47093, 26099, 60159, 33139, 1064, 53397, 52443, 41904, 63465, 18017, 62767, 26180, 10781, 63310, 73409, 54851, 73761, 13254, 76367, 52964, 20235, 21174, 49036, 11661, 10985, 76457, 63122, 38998, 1225, 21209, 49891, 34645, 47976, 44823, 18022, 39477, 46830, 36473, 65851, 29526, 39394, 30470, 55909, 47560, 60550, 40773, 1284, 75984, 22841, 36170, 42947, 63769, 4591, 1835, 33210, 22904, 16801, 68167, 23284, 23587, 23425, 43362, 1646, 34986, 40311, 20125, 47864, 69423, 32067, 15831, 40289, 43080, 63539, 66164, 39913, 5284, 44853, 29356, 6146, 42364, 66779, 9135, 52497, 37945, 55865, 47176, 42344, 46826, 39656, 65448, 28494, 15704, 37479, 63652, 12364, 22484, 60256, 2177, 9894, 35218, 62794, 16706, 22299, 65175, 75787, 73632, 34749, 44202, 42282, 22572, 895, 64848, 34673, 7451, 19348, 56765, 71448, 52459, 37674, 73579, 11460, 22744, 23416, 3530, 23684, 42331, 11307, 60963, 56317, 1572, 69320, 71261, 64827, 21156, 35455, 63252, 53544, 22047, 52511, 52307, 19979, 13388, 51857, 21857, 25354, 10893, 19594, 55333, 5811, 1941, 12847, 69232, 52400, 20930, 66316, 74611, 72967, 53817, 23449, 72727, 59362, 48921, 21858, 69290, 74487, 75727, 19275, 45240, 52586, 9094, 71767, 65710, 21193, 63339, 18837, 53631, 3065, 47442, 41840, 75286, 22996, 5792, 72190, 35170, 35382, 23805, 9056, 16629, 63837, 74739, 75920, 19921, 48991, 18636, 13862, 2346, 75791, 56813, 16039, 43805, 53279, 63550, 21270, 28163, 60236, 62716, 21076, 10070, 22735, 37298, 56398, 43027, 39872, 65233, 19012, 71511, 7377, 20092, 56366, 3331, 21201, 16489, 33374, 21055, 22871, 828, 63870, 20962, 52192, 68767, 18076, 53626, 32031, 72576, 13354, 55890, 59330, 20469, 69011, 58321, 41799, 1497, 35311, 42485, 13678, 23111, 66163, 56548, 18895, 26082, 65838, 47227, 56587, 60815, 12122, 56477, 7439, 65330, 35433, 41800, 17781, 13568, 28384, 67413, 56810, 63162, 12901, 42976, 2189, 34671, 23224, 25314, 39411, 45153, 66889, 23157, 49709, 10898, 2217, 5887, 27950, 10583, 21755, 74667, 25345, 27786, 49636, 73278, 72598, 36419, 19332, 28285, 63601, 23048, 47877, 44299, 15407, 68979, 52599, 71669, 2207, 44854, 76327, 953, 20922, 62826, 7446, 28164, 2455, 3024, 37141, 60378, 54679, 56851, 60079, 56278, 43054, 52248, 63210, 62237, 20138, 56322, 26169, 19897, 54879, 13838, 2873, 19068, 71842, 13536, 37159, 16735, 19515, 18451, 64531, 19904, 37586, 920, 17705, 26556, 66385, 18679, 41953, 3551, 9892, 20964, 4414, 2966, 22526, 22982, 3324, 74631, 65594, 63170, 49966, 55551, 54771, 63562, 61069, 35101, 1389, 60620, 26004, 28343, 65595, 34293, 11179, 49662, 3791, 44304, 74919, 39841, 63690, 18422, 32462, 37864, 22544, 59390, 42166, 75831, 74460, 22332, 15707, 15850, 24337, 41853, 39605, 22799, 4252, 3523, 4392, 72550, 18898, 74733, 59337, 49961, 10816, 36741, 55851, 48961, 64097, 19380, 76082, 28086, 49799, 10809, 19647, 20294, 2157, 22110, 55406, 44944, 66075, 22087, 52625, 47218, 60434, 63738, 24416, 65093, 43436, 22595, 18792, 22149, 46849, 28374, 29579, 67299, 23572, 16719, 63650, 37316, 60230, 5874, 53906, 68950, 33270, 29508, 56291, 53762, 1084, 66094, 53494, 64206, 10579, 29771, 3484, 64195, 32364, 75379, 1981, 39870, 17775, 66629, 68495, 48957, 49807, 75526, 40776, 23380, 36738, 53359, 19578, 35791, 20127, 13533, 63148, 74686, 34372, 18536, 55284, 76218, 32082, 25991, 46758, 73402, 53381, 74977, 18271, 855, 60799, 10493, 65625, 3385, 41598, 34156, 34119, 27441, 9664, 4301, 73389, 7347, 43801, 76391, 62790, 28173, 21267, 49601, 30452, 61051, 53301, 40091, 64541, 13830, 1801, 62713, 35229, 53551, 32027, 22067, 75612, 53743, 66319, 69040, 49790, 32170, 65976, 2901, 34724, 42186, 65151, 26150, 66405, 15894, 55841, 74077, 55634, 64766, 18383, 66985, 47915, 23658, 13711, 23176, 63966, 68729, 64372, 28529, 32452, 69195, 1416, 39017, 32075, 35087, 19383, 65424, 2846, 23609, 2248, 36809, 1598, 16499, 11141, 13088, 43414, 43736, 48987, 29440, 17974, 49748, 40280, 47984, 12967, 4449, 11305, 3495, 21208, 62730, 36465, 23780, 5351, 5280, 20101, 18280, 26116, 47939, 46791, 5906, 26030, 40079, 64720, 16715, 55749, 49620, 17893, 74381, 23585, 22372, 18348, 63807, 31600, 39842, 13393, 43191, 31911, 66718, 2334, 47187, 69233, 64756, 65828, 72408, 66364, 52271, 20949, 34969, 36484, 73742, 69114, 60462, 60578, 66136, 72157, 5359, 8294, 22797, 65836, 13466, 35000, 53933, 53297, 1667, 35447, 75567, 76386, 47228, 60403, 18888, 53923, 75914, 72626, 24351, 71318, 28574, 35349, 49089, 68520, 18736, 1722, 49707, 66574, 15211, 36763, 43735, 54494, 72782, 15914, 39645, 64216, 73798, 40771, 68795, 64364, 36044, 65296, 2206, 53835, 12279, 22822, 68749, 35173, 10612, 17772, 16814, 68710, 19418, 56666, 15844, 41841, 35003, 68447, 20371, 13391, 58431, 39148, 9577, 55304, 39359, 44954, 9799, 65840, 71380, 28366, 2108, 18373, 35393, 17753, 56604, 23127, 53984, 37608, 47393, 39452, 7429, 19030, 67197, 54858, 1381, 27897, 31962, 68721, 52176, 2889, 42986, 43537, 26216, 71528, 38032, 37312, 66428, 71691, 23467, 10941, 64946, 39003, 3178, 13174, 52305, 69277, 22301, 42397, 5868, 16710, 4700, 26543, 68709, 28314, 43583, 5885, 39767, 60179, 19455, 13164, 51851, 12287, 35164, 9126, 63759, 71875, 65321, 23337, 1286, 28187, 60402, 56409, 36050, 63614, 39084, 71678, 20227, 7283, 66523, 12836, 19532, 47923, 13741, 18374, 65626, 19075, 43138, 12603, 44930, 32962, 43182, 55384, 18961, 56729, 74165, 66667, 71992, 75108, 23260, 19946, 41846, 43569, 36228, 62847, 37542, 64810, 56475, 12227, 58178, 19438, 18041, 1173, 43482, 32127, 43750, 46828, 23649, 53576, 4271, 60647, 58454, 55708, 3535, 32096, 71695, 34919, 8733, 39352, 59096, 67345, 47502, 63171, 3492, 47036, 75328, 27975, 1500, 62215, 53401, 60338, 19882, 59347, 36070, 36211, 65195, 952, 39888, 55359, 76446, 42448, 43678, 42350, 73391, 52546, 2897, 37872, 39147, 69375, 35430, 13205, 65221, 36662, 35376, 39333, 49558, 65085, 1962, 39234, 19951, 53432, 12420, 36219, 34898, 69321, 66443, 37455, 26278, 2122, 16589, 24328, 22271, 66063, 21183, 2357, 21751, 22198, 43118, 36343, 63173, 36309, 22601, 43825, 22552, 34868, 50086, 39883, 34711, 42999, 72913, 15793, 55560, 36811, 22762, 35069, 55529, 55751, 22787, 74411, 19729, 21749, 18560, 20179, 26007, 54877, 46810, 56883, 43604, 41790, 10529, 10842, 21296, 53313, 28035, 26153, 3456, 55898, 43144, 53460, 37138, 53573, 15855, 65550, 60267, 22322, 10743, 65589, 17951, 28185, 15956, 39112, 74966, 28140, 15769, 69224, 2339, 47174, 56268, 76462, 33371, 17935, 3317, 18163, 44925, 66848, 13220, 17777, 54732, 35171, 12167, 64270, 23211, 40735, 73046, 2394, 43121, 68491, 13569, 22516, 19044, 54029, 75736, 44950, 3401, 20393, 43235, 15665, 13323, 13963, 12123, 18249, 63910, 49647, 35317, 1967, 45209, 36318, 49855, 75377, 16566, 58452, 55492, 18634, 6157, 21151, 2092, 20364, 44325, 25250, 16845, 63620, 34326, 61035, 65570, 19090, 22794, 62831, 43547, 53398, 47861, 28481, 41117, 76208, 63479, 1504, 55637, 41796, 60556, 72672, 15719, 23774, 39880, 52998, 69041, 43101, 34114, 22337, 1990, 11120, 65246, 37690, 43226, 64497, 34650, 62364, 35111, 10779, 52488, 39781, 18033, 63120, 20402, 13665, 18226, 2067, 20454, 35300, 55871, 53017, 40911, 55268, 68328, 13151, 34796, 54128, 34841, 43155, 60030, 16553, 54476, 56659, 20953, 41877, 65363, 19668, 35146, 18019, 73864, 29703, 39457, 6186, 23560, 18370, 2261, 10851, 63755, 62902, 23612, 26175, 38954, 1902, 28484, 75647, 34320, 28572, 47085, 15226, 63397, 65530, 60626, 53949, 37830, 7260, 47999, 68741, 75825, 7268, 12163, 69261, 69130, 58944, 72309, 28360, 44080, 52609, 3490, 43190, 39582, 29384, 16524, 34755, 21197, 75824), '0.00', True, '1/2327/%', True, '1/2327/%', ('waiting', 'confirmed', 'partially_available', 'assigned'), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL))' with params: [(22208, 13403, 21501, 26054, 62259, 64085, 30488, 7430, 3096, 64535, 7330, 47168, 24401, 20129, 66897, 47584, 23468, 72972, 65115, 71347, 39064, 45150, 69271, 55724, 63406, 18121, 39906, 23188, 56769, 63714, 21771, 11328, 34619, 16677, 15714, 52566, 65110, 3497, 20894, 61062, 55790, 7326, 1167, 47093, 26099, 60159, 33139, 1064, 53397, 52443, 41904, 63465, 18017, 62767, 26180, 10781, 63310, 73409, 54851, 73761, 13254, 76367, 52964, 20235, 21174, 49036, 11661, 10985, 76457, 63122, 38998, 1225, 21209, 49891, 34645, 47976, 44823, 18022, 39477, 46830, 36473, 65851, 29526, 39394, 30470, 55909, 47560, 60550, 40773, 1284, 75984, 22841, 36170, 42947, 63769, 4591, 1835, 33210, 22904, 16801, 68167, 23284, 23587, 23425, 43362, 1646, 34986, 40311, 20125, 47864, 69423, 32067, 15831, 40289, 43080, 63539, 66164, 39913, 5284, 44853, 29356, 6146, 42364, 66779, 9135, 52497, 37945, 55865, 47176, 42344, 46826, 39656, 65448, 28494, 15704, 37479, 63652, 12364, 22484, 60256, 2177, 9894, 35218, 62794, 16706, 22299, 65175, 75787, 73632, 34749, 44202, 42282, 22572, 895, 64848, 34673, 7451, 19348, 56765, 71448, 52459, 37674, 73579, 11460, 22744, 23416, 3530, 23684, 42331, 11307, 60963, 56317, 1572, 69320, 71261, 64827, 21156, 35455, 63252, 53544, 22047, 52511, 52307, 19979, 13388, 51857, 21857, 25354, 10893, 19594, 55333, 5811, 1941, 12847, 69232, 52400, 20930, 66316, 74611, 72967, 53817, 23449, 72727, 59362, 48921, 21858, 69290, 74487, 75727, 19275, 45240, 52586, 9094, 71767, 65710, 21193, 63339, 18837, 53631, 3065, 47442, 41840, 75286, 22996, 5792, 72190, 35170, 35382, 23805, 9056, 16629, 63837, 74739, 75920, 19921, 48991, 18636, 13862, 2346, 75791, 56813, 16039, 43805, 53279, 63550, 21270, 28163, 60236, 62716, 21076, 10070, 22735, 37298, 56398, 43027, 39872, 65233, 19012, 71511, 7377, 20092, 56366, 3331, 21201, 16489, 33374, 21055, 22871, 828, 63870, 20962, 52192, 68767, 18076, 53626, 32031, 72576, 13354, 55890, 59330, 20469, 69011, 58321, 41799, 1497, 35311, 42485, 13678, 23111, 66163, 56548, 18895, 26082, 65838, 47227, 56587, 60815, 12122, 56477, 7439, 65330, 35433, 41800, 17781, 13568, 28384, 67413, 56810, 63162, 12901, 42976, 2189, 34671, 23224, 25314, 39411, 45153, 66889, 23157, 49709, 10898, 2217, 5887, 27950, 10583, 21755, 74667, 25345, 27786, 49636, 73278, 72598, 36419, 19332, 28285, 63601, 23048, 47877, 44299, 15407, 68979, 52599, 71669, 2207, 44854, 76327, 953, 20922, 62826, 7446, 28164, 2455, 3024, 37141, 60378, 54679, 56851, 60079, 56278, 43054, 52248, 63210, 62237, 20138, 56322, 26169, 19897, 54879, 13838, 2873, 19068, 71842, 13536, 37159, 16735, 19515, 18451, 64531, 19904, 37586, 920, 17705, 26556, 66385, 18679, 41953, 3551, 9892, 20964, 4414, 2966, 22526, 22982, 3324, 74631, 65594, 63170, 49966, 55551, 54771, 63562, 61069, 35101, 1389, 60620, 26004, 28343, 65595, 34293, 11179, 49662, 3791, 44304, 74919, 39841, 63690, 18422, 32462, 37864, 22544, 59390, 42166, 75831, 74460, 22332, 15707, 15850, 24337, 41853, 39605, 22799, 4252, 3523, 4392, 72550, 18898, 74733, 59337, 49961, 10816, 36741, 55851, 48961, 64097, 19380, 76082, 28086, 49799, 10809, 19647, 20294, 2157, 22110, 55406, 44944, 66075, 22087, 52625, 47218, 60434, 63738, 24416, 65093, 43436, 22595, 18792, 22149, 46849, 28374, 29579, 67299, 23572, 16719, 63650, 37316, 60230, 5874, 53906, 68950, 33270, 29508, 56291, 53762, 1084, 66094, 53494, 64206, 10579, 29771, 3484, 64195, 32364, 75379, 1981, 39870, 17775, 66629, 68495, 48957, 49807, 75526, 40776, 23380, 36738, 53359, 19578, 35791, 20127, 13533, 63148, 74686, 34372, 18536, 55284, 76218, 32082, 25991, 46758, 73402, 53381, 74977, 18271, 855, 60799, 10493, 65625, 3385, 41598, 34156, 34119, 27441, 9664, 4301, 73389, 7347, 43801, 76391, 62790, 28173, 21267, 49601, 30452, 61051, 53301, 40091, 64541, 13830, 1801, 62713, 35229, 53551, 32027, 22067, 75612, 53743, 66319, 69040, 49790, 32170, 65976, 2901, 34724, 42186, 65151, 26150, 66405, 15894, 55841, 74077, 55634, 64766, 18383, 66985, 47915, 23658, 13711, 23176, 63966, 68729, 64372, 28529, 32452, 69195, 1416, 39017, 32075, 35087, 19383, 65424, 2846, 23609, 2248, 36809, 1598, 16499, 11141, 13088, 43414, 43736, 48987, 29440, 17974, 49748, 40280, 47984, 12967, 4449, 11305, 3495, 21208, 62730, 36465, 23780, 5351, 5280, 20101, 18280, 26116, 47939, 46791, 5906, 26030, 40079, 64720, 16715, 55749, 49620, 17893, 74381, 23585, 22372, 18348, 63807, 31600, 39842, 13393, 43191, 31911, 66718, 2334, 47187, 69233, 64756, 65828, 72408, 66364, 52271, 20949, 34969, 36484, 73742, 69114, 60462, 60578, 66136, 72157, 5359, 8294, 22797, 65836, 13466, 35000, 53933, 53297, 1667, 35447, 75567, 76386, 47228, 60403, 18888, 53923, 75914, 72626, 24351, 71318, 28574, 35349, 49089, 68520, 18736, 1722, 49707, 66574, 15211, 36763, 43735, 54494, 72782, 15914, 39645, 64216, 73798, 40771, 68795, 64364, 36044, 65296, 2206, 53835, 12279, 22822, 68749, 35173, 10612, 17772, 16814, 68710, 19418, 56666, 15844, 41841, 35003, 68447, 20371, 13391, 58431, 39148, 9577, 55304, 39359, 44954, 9799, 65840, 71380, 28366, 2108, 18373, 35393, 17753, 56604, 23127, 53984, 37608, 47393, 39452, 7429, 19030, 67197, 54858, 1381, 27897, 31962, 68721, 52176, 2889, 42986, 43537, 26216, 71528, 38032, 37312, 66428, 71691, 23467, 10941, 64946, 39003, 3178, 13174, 52305, 69277, 22301, 42397, 5868, 16710, 4700, 26543, 68709, 28314, 43583, 5885, 39767, 60179, 19455, 13164, 51851, 12287, 35164, 9126, 63759, 71875, 65321, 23337, 1286, 28187, 60402, 56409, 36050, 63614, 39084, 71678, 20227, 7283, 66523, 12836, 19532, 47923, 13741, 18374, 65626, 19075, 43138, 12603, 44930, 32962, 43182, 55384, 18961, 56729, 74165, 66667, 71992, 75108, 23260, 19946, 41846, 43569, 36228, 62847, 37542, 64810, 56475, 12227, 58178, 19438, 18041, 1173, 43482, 32127, 43750, 46828, 23649, 53576, 4271, 60647, 58454, 55708, 3535, 32096, 71695, 34919, 8733, 39352, 59096, 67345, 47502, 63171, 3492, 47036, 75328, 27975, 1500, 62215, 53401, 60338, 19882, 59347, 36070, 36211, 65195, 952, 39888, 55359, 76446, 42448, 43678, 42350, 73391, 52546, 2897, 37872, 39147, 69375, 35430, 13205, 65221, 36662, 35376, 39333, 49558, 65085, 1962, 39234, 19951, 53432, 12420, 36219, 34898, 69321, 66443, 37455, 26278, 2122, 16589, 24328, 22271, 66063, 21183, 2357, 21751, 22198, 43118, 36343, 63173, 36309, 22601, 43825, 22552, 34868, 50086, 39883, 34711, 42999, 72913, 15793, 55560, 36811, 22762, 35069, 55529, 55751, 22787, 74411, 19729, 21749, 18560, 20179, 26007, 54877, 46810, 56883, 43604, 41790, 10529, 10842, 21296, 53313, 28035, 26153, 3456, 55898, 43144, 53460, 37138, 53573, 15855, 65550, 60267, 22322, 10743, 65589, 17951, 28185, 15956, 39112, 74966, 28140, 15769, 69224, 2339, 47174, 56268, 76462, 33371, 17935, 3317, 18163, 44925, 66848, 13220, 17777, 54732, 35171, 12167, 64270, 23211, 40735, 73046, 2394, 43121, 68491, 13569, 22516, 19044, 54029, 75736, 44950, 3401, 20393, 43235, 15665, 13323, 13963, 12123, 18249, 63910, 49647, 35317, 1967, 45209, 36318, 49855, 75377, 16566, 58452, 55492, 18634, 6157, 21151, 2092, 20364, 44325, 25250, 16845, 63620, 34326, 61035, 65570, 19090, 22794, 62831, 43547, 53398, 47861, 28481, 41117, 76208, 63479, 1504, 55637, 41796, 60556, 72672, 15719, 23774, 39880, 52998, 69041, 43101, 34114, 22337, 1990, 11120, 65246, 37690, 43226, 64497, 34650, 62364, 35111, 10779, 52488, 39781, 18033, 63120, 20402, 13665, 18226, 2067, 20454, 35300, 55871, 53017, 40911, 55268, 68328, 13151, 34796, 54128, 34841, 43155, 60030, 16553, 54476, 56659, 20953, 41877, 65363, 19668, 35146, 18019, 73864, 29703, 39457, 6186, 23560, 18370, 2261, 10851, 63755, 62902, 23612, 26175, 38954, 1902, 28484, 75647, 34320, 28572, 47085, 15226, 63397, 65530, 60626, 53949, 37830, 7260, 47999, 68741, 75825, 7268, 12163, 69261, 69130, 58944, 72309, 28360, 44080, 52609, 3490, 43190, 39582, 29384, 16524, 34755, 21197, 75824), '0.00', True, '1/2327/%', True, '1/2327/%', ('waiting', 'confirmed', 'partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL))' with params: [(12843, 18843, 47764, 53001, 30440, 61044, 19834, 40279, 76252, 56875, 64349, 1948, 65839, 38498, 68785, 39411, 67005, 16666, 37657, 8771, 53769, 56664, 28355, 53839, 6099, 19645, 23628, 75750, 63263, 63558, 60626, 8792, 69087, 17993, 63821, 69001, 20070, 7321, 75370, 56849, 17603, 43859, 75924, 2221, 52179, 38962, 21153, 54024, 6227, 12242, 3382, 4575, 52982, 42275, 32181, 64109, 70396, 8672, 9636, 66421, 24383, 44742, 53555, 37624, 22854, 34155, 24425, 19578, 26052, 34974, 39220, 65507, 40131, 47898, 73009, 36309, 47841, 71372, 4564, 56480, 34945, 39926, 66072, 39665, 69176, 49001, 52079, 24249, 62266, 2375, 6079, 2090, 12115, 74131, 13497, 18952, 8799, 74126, 1877, 32066, 40117, 8695, 66556, 45211, 63146, 65164, 36131, 55548, 37352, 44228, 12220, 18472, 9138, 39576, 23087, 10630, 60357, 49579, 1934, 1838, 7313, 53412, 3788, 39845, 23760, 7344, 22532, 17955, 18266, 43099, 63764, 54485, 54116, 56312, 43208, 22617, 38946, 23818, 51883, 35008, 20203, 65408, 24157, 38248, 72586, 34847, 53994, 19029, 1071, 12880, 20083, 36212, 54446, 62903, 52195, 42322, 54085, 34591, 3216, 39015, 22179, 5910, 71861, 76015, 1717, 43371, 13871, 53525, 37384, 22207, 64233, 13788, 12391, 62792, 22183, 65295, 44233, 33156, 22160, 10478, 42099, 63006, 68752, 40033, 10838, 12241, 30485, 37921, 67374, 47468, 37267, 65495, 49626, 75636, 68318, 59145, 7441, 19493, 12591, 13901, 44973, 3499, 71701, 15828, 71831, 74121, 63914, 59413, 34678, 75288, 4461, 69378, 65208, 12967, 9661, 64243, 52313, 75871, 2276, 73097, 12299, 4543, 24243, 58427, 75510, 25970, 26129, 47042, 22064, 1606, 19414, 45152, 56620, 43121, 53462, 34882, 64785, 36369, 34748, 41767, 71943, 22266, 52142, 43529, 7406, 41587, 27954, 18419, 12213, 22347, 43464, 64068, 34613, 37563, 15851, 29245, 9664, 66169, 22442, 40185, 42462, 52934, 1745, 74357, 55414, 38965, 19298, 26522, 34794, 18958, 1454, 43572, 68331, 55757, 52393, 19542, 42978, 2180, 72272, 68497, 34773, 17872, 53574, 18072, 35297, 15125, 75514, 23301, 63141, 47546, 34679, 44917, 23669, 6175, 20279, 20204, 62212, 62942, 73990, 31590, 73817, 21859, 74238, 22518, 75063, 12332, 73866, 37902, 63777, 3074, 62302, 55609, 1886, 888, 56805, 53604, 72186, 35379, 54782, 66789, 19462, 43830, 13305, 39534, 20679, 43190, 38993, 7364, 19730, 34148, 52589, 75182, 35471, 43314, 23600, 76257, 43553, 55762, 45147, 18130, 20928, 3277, 3018, 39399, 22544, 2343, 35260, 73625, 69178, 43497, 3506, 23124, 63657, 22365, 47950, 54727, 43068, 35056, 20039, 37548, 1854, 62354, 13035, 36431, 26290, 53480, 65497, 39405, 18725, 6100, 13307, 72530, 58434, 43010, 75709, 1673, 22026, 63023, 20266, 3366, 44951, 3066, 2146, 5814, 68200, 7383, 72804, 66661, 18948, 66176, 29722, 55829, 53030, 35123, 13220, 20269, 48978, 66560, 41969, 56612, 48996, 23431, 63963, 13172, 15904, 42357, 47892, 8260, 8263, 60800, 63565, 43076, 23204, 75404, 63840, 43238, 37448, 49879, 6168, 63009, 39871, 33207, 32065, 43478, 16717, 5350, 4252, 7306, 65082, 60158, 71785, 29378, 75491, 76256, 23005, 39873, 64025, 71790, 71707, 13617, 43539, 59029, 33255, 36476, 18726, 35184, 23532, 33189, 15622, 37691, 47955, 52390, 16545, 22849, 22214, 69261, 38948, 65141, 13500, 19262, 3254, 21183, 65083, 2293, 4496, 32001, 28231, 38956, 60559, 7289, 74494, 12315, 36423, 16504, 55944, 56412, 41821, 58433, 63139, 52329, 72730, 56469, 34688, 32097, 54534, 63800, 39305, 9070, 23813, 47540, 55648, 35396, 54051, 47223, 30401, 72606, 47741, 12556, 47449, 56438, 63885, 15211, 52416, 39114, 68833, 16034, 52631, 9911, 53177, 2188, 36066, 6137, 15898, 43666, 2207, 49887, 41606, 12314, 23335, 47993, 1942, 43551, 3764, 21218, 13314, 44142, 12927, 60239, 62293, 22684, 59088, 16739, 39566, 43672, 37356, 60294, 2857, 47871, 8644, 39408, 64815, 13126, 69350, 76444, 17816, 74177, 65168, 46854, 27457, 1487, 42021, 2011, 64183, 28009, 47253, 19988, 3481, 54125, 2069, 56365, 9119, 24210, 50118, 49684, 75885, 72999, 12523, 55470, 37577, 34713, 56912, 49839, 30384, 22549, 37845, 53430, 72074, 23396, 18080, 3789, 40321, 47098, 59147, 52145, 31992, 13129, 18776, 20209, 1726, 63167, 22354, 63978, 68322, 51831, 32032, 39217, 29522, 75974, 22472, 49666, 63137, 60351, 19551, 53573, 53490, 44238, 23762, 4581, 13098, 55525, 71304, 24181, 5859, 10984, 15892, 74288, 39829, 34564, 58435, 21747, 49007, 18491, 47953, 60431, 59059, 13203, 35063, 52321, 18301, 37639, 68203, 4351, 22408, 39116, 52316, 44891, 71857, 43341, 56375, 39372, 56444, 12123, 66699, 75371, 40118, 18502, 67187, 16493, 18568, 34805, 47936, 26104, 46873, 12406, 47074, 49577, 46783, 3769, 66869, 1116, 47909, 28360, 13187, 31597, 18575, 3558, 74042, 60423, 39451, 49861, 37538, 23093, 23392, 72892, 65542, 15417, 33185, 6225, 45182, 3447, 38963, 23318, 36325, 65723, 62982, 58986, 945, 49060, 52626, 21241, 37844, 64710, 35796, 32979, 34424, 47386, 54134, 26000, 2117, 23527, 1539, 37861, 17839, 36128, 65611, 55692, 34877, 54513, 49042, 53024, 42980, 37539, 10885, 23810, 68169, 67284, 37831, 64990, 56559, 68517, 36705, 69007, 71278, 58485, 34652, 66596, 74023, 22456, 34619, 59356, 64372, 63643, 23340, 22776, 73027, 70426, 6219, 26568, 44942, 66738, 19276, 7350, 33200, 54889, 19925, 34880, 48965, 34388, 3353, 27426, 24369, 15483, 19024, 32169, 52938, 52368, 53602, 60649, 23173, 49033, 34792, 53534, 9654, 58836, 22632, 10615, 43486, 22319, 31601, 20476, 43290, 37469, 24191, 1850, 22369, 1792, 26585, 21088, 63754, 12321, 37612, 18620, 64304, 26534, 22022, 2083, 23235, 5309, 68286, 55833, 18865, 31602, 3173, 60652, 47263, 15722, 2093, 63611, 11168, 43985, 75687, 19090, 7429, 33127, 75127, 41982, 10850, 10576, 41109, 40223, 22735, 13205, 8635, 43973, 48945, 69071, 7345, 34647, 9631, 70393, 46655, 17891, 38024, 66667, 65798, 18163, 9898, 22360, 16796, 22683, 68816, 26710, 49793, 73543, 24344, 23486, 75714, 9628, 37338, 9928, 19680, 65195, 64055, 46846, 13895, 2420, 49673, 55546, 56554, 53122, 43595, 48952, 56688, 41911, 4476, 42004, 61476, 20938, 12957, 1605, 29555, 69287, 34906, 10522, 52460, 8690, 39157, 32152, 19325, 76462, 41013, 39994, 64977, 12969, 19604, 13309, 22370, 46746, 47488, 1727, 56683, 7284, 36703, 53017, 28218, 47986, 32954, 37339, 19832, 17762, 47251, 40907, 49741, 38758, 33294, 63584, 56910, 52447, 36201, 63419, 8732, 65159, 66985, 43967, 18136, 67298, 37597, 58428, 22051, 20251, 55839, 39308, 42305, 3776, 29451, 54870, 52110, 65007, 71781, 855, 22691, 67334, 49644, 53864, 60550, 22824, 36446, 65487, 23828, 16812, 59178, 23710, 4693, 2887, 8265, 75781, 68559, 67211, 26070, 71912, 15740, 65048, 18251, 41944, 62345, 48918, 19018, 42287, 44829, 19873, 45245, 21737, 13244, 7285, 29412, 12339, 19458, 49685, 66803, 55474, 6058, 19858, 75347, 47225, 67082, 19001, 23679, 60599, 63681, 29763, 24235, 64902, 43522, 74195, 1899, 13654, 74669, 74179, 18833, 37412, 72129, 22301, 65026, 23168, 9090, 41017, 68509, 13252, 71596, 73830, 2064, 10717, 3126, 44111, 28330, 31959, 36113, 10815, 52227, 63877, 18884, 55695, 3581, 65341, 27804, 54854, 65089, 10942, 39791, 56874, 52948, 19281, 56675, 60302, 53473, 28297, 23775, 1547, 64066, 12061, 22205, 64206, 23127, 47411, 66093, 40220, 36263, 6215, 65148, 19877, 66976, 66735, 67351, 4358, 10461, 22196, 35054, 56421, 65435, 22359, 28070, 29373, 18800, 62796, 65599, 39651, 29454, 13354, 2031, 3171, 70422, 26613, 26075, 12255, 39290, 43385, 21147, 60693, 36147, 23285, 52202, 63649, 60402, 11299, 22055, 37785, 74968, 32177, 40201, 50097, 17937, 13124, 2910, 45077, 962, 55485, 19391, 3642, 52957, 63843, 76476, 1600, 64759, 73694, 43601, 55529, 71759, 42328, 62246, 29170, 65472, 41949, 22614, 18652, 13570, 53280, 68998, 22202, 2944, 53289, 3370, 7166, 47923, 39670, 42071, 49814, 72322, 25815, 34872, 3188, 39266, 64740, 7271, 43027, 76349, 39937, 52408, 30376, 6212, 21150, 18418, 25270, 44322, 13721, 64394, 62725, 4493, 36111, 52146, 74135, 21505), '0.00', True, '1/2319/%', True, '1/2319/%', ('waiting', 'confirmed', 'partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL)) AND ("stock_move"."state" in %s))' with params: [(12843, 18843, 47764, 53001, 30440, 61044, 19834, 40279, 76252, 56875, 64349, 1948, 65839, 38498, 68785, 39411, 67005, 16666, 37657, 8771, 53769, 56664, 28355, 53839, 6099, 19645, 23628, 75750, 63263, 63558, 60626, 8792, 69087, 17993, 63821, 69001, 20070, 7321, 75370, 56849, 17603, 43859, 75924, 2221, 52179, 38962, 21153, 54024, 6227, 12242, 3382, 4575, 52982, 42275, 32181, 64109, 70396, 8672, 9636, 66421, 24383, 44742, 53555, 37624, 22854, 34155, 24425, 19578, 26052, 34974, 39220, 65507, 40131, 47898, 73009, 36309, 47841, 71372, 4564, 56480, 34945, 39926, 66072, 39665, 69176, 49001, 52079, 24249, 62266, 2375, 6079, 2090, 12115, 74131, 13497, 18952, 8799, 74126, 1877, 32066, 40117, 8695, 66556, 45211, 63146, 65164, 36131, 55548, 37352, 44228, 12220, 18472, 9138, 39576, 23087, 10630, 60357, 49579, 1934, 1838, 7313, 53412, 3788, 39845, 23760, 7344, 22532, 17955, 18266, 43099, 63764, 54485, 54116, 56312, 43208, 22617, 38946, 23818, 51883, 35008, 20203, 65408, 24157, 38248, 72586, 34847, 53994, 19029, 1071, 12880, 20083, 36212, 54446, 62903, 52195, 42322, 54085, 34591, 3216, 39015, 22179, 5910, 71861, 76015, 1717, 43371, 13871, 53525, 37384, 22207, 64233, 13788, 12391, 62792, 22183, 65295, 44233, 33156, 22160, 10478, 42099, 63006, 68752, 40033, 10838, 12241, 30485, 37921, 67374, 47468, 37267, 65495, 49626, 75636, 68318, 59145, 7441, 19493, 12591, 13901, 44973, 3499, 71701, 15828, 71831, 74121, 63914, 59413, 34678, 75288, 4461, 69378, 65208, 12967, 9661, 64243, 52313, 75871, 2276, 73097, 12299, 4543, 24243, 58427, 75510, 25970, 26129, 47042, 22064, 1606, 19414, 45152, 56620, 43121, 53462, 34882, 64785, 36369, 34748, 41767, 71943, 22266, 52142, 43529, 7406, 41587, 27954, 18419, 12213, 22347, 43464, 64068, 34613, 37563, 15851, 29245, 9664, 66169, 22442, 40185, 42462, 52934, 1745, 74357, 55414, 38965, 19298, 26522, 34794, 18958, 1454, 43572, 68331, 55757, 52393, 19542, 42978, 2180, 72272, 68497, 34773, 17872, 53574, 18072, 35297, 15125, 75514, 23301, 63141, 47546, 34679, 44917, 23669, 6175, 20279, 20204, 62212, 62942, 73990, 31590, 73817, 21859, 74238, 22518, 75063, 12332, 73866, 37902, 63777, 3074, 62302, 55609, 1886, 888, 56805, 53604, 72186, 35379, 54782, 66789, 19462, 43830, 13305, 39534, 20679, 43190, 38993, 7364, 19730, 34148, 52589, 75182, 35471, 43314, 23600, 76257, 43553, 55762, 45147, 18130, 20928, 3277, 3018, 39399, 22544, 2343, 35260, 73625, 69178, 43497, 3506, 23124, 63657, 22365, 47950, 54727, 43068, 35056, 20039, 37548, 1854, 62354, 13035, 36431, 26290, 53480, 65497, 39405, 18725, 6100, 13307, 72530, 58434, 43010, 75709, 1673, 22026, 63023, 20266, 3366, 44951, 3066, 2146, 5814, 68200, 7383, 72804, 66661, 18948, 66176, 29722, 55829, 53030, 35123, 13220, 20269, 48978, 66560, 41969, 56612, 48996, 23431, 63963, 13172, 15904, 42357, 47892, 8260, 8263, 60800, 63565, 43076, 23204, 75404, 63840, 43238, 37448, 49879, 6168, 63009, 39871, 33207, 32065, 43478, 16717, 5350, 4252, 7306, 65082, 60158, 71785, 29378, 75491, 76256, 23005, 39873, 64025, 71790, 71707, 13617, 43539, 59029, 33255, 36476, 18726, 35184, 23532, 33189, 15622, 37691, 47955, 52390, 16545, 22849, 22214, 69261, 38948, 65141, 13500, 19262, 3254, 21183, 65083, 2293, 4496, 32001, 28231, 38956, 60559, 7289, 74494, 12315, 36423, 16504, 55944, 56412, 41821, 58433, 63139, 52329, 72730, 56469, 34688, 32097, 54534, 63800, 39305, 9070, 23813, 47540, 55648, 35396, 54051, 47223, 30401, 72606, 47741, 12556, 47449, 56438, 63885, 15211, 52416, 39114, 68833, 16034, 52631, 9911, 53177, 2188, 36066, 6137, 15898, 43666, 2207, 49887, 41606, 12314, 23335, 47993, 1942, 43551, 3764, 21218, 13314, 44142, 12927, 60239, 62293, 22684, 59088, 16739, 39566, 43672, 37356, 60294, 2857, 47871, 8644, 39408, 64815, 13126, 69350, 76444, 17816, 74177, 65168, 46854, 27457, 1487, 42021, 2011, 64183, 28009, 47253, 19988, 3481, 54125, 2069, 56365, 9119, 24210, 50118, 49684, 75885, 72999, 12523, 55470, 37577, 34713, 56912, 49839, 30384, 22549, 37845, 53430, 72074, 23396, 18080, 3789, 40321, 47098, 59147, 52145, 31992, 13129, 18776, 20209, 1726, 63167, 22354, 63978, 68322, 51831, 32032, 39217, 29522, 75974, 22472, 49666, 63137, 60351, 19551, 53573, 53490, 44238, 23762, 4581, 13098, 55525, 71304, 24181, 5859, 10984, 15892, 74288, 39829, 34564, 58435, 21747, 49007, 18491, 47953, 60431, 59059, 13203, 35063, 52321, 18301, 37639, 68203, 4351, 22408, 39116, 52316, 44891, 71857, 43341, 56375, 39372, 56444, 12123, 66699, 75371, 40118, 18502, 67187, 16493, 18568, 34805, 47936, 26104, 46873, 12406, 47074, 49577, 46783, 3769, 66869, 1116, 47909, 28360, 13187, 31597, 18575, 3558, 74042, 60423, 39451, 49861, 37538, 23093, 23392, 72892, 65542, 15417, 33185, 6225, 45182, 3447, 38963, 23318, 36325, 65723, 62982, 58986, 945, 49060, 52626, 21241, 37844, 64710, 35796, 32979, 34424, 47386, 54134, 26000, 2117, 23527, 1539, 37861, 17839, 36128, 65611, 55692, 34877, 54513, 49042, 53024, 42980, 37539, 10885, 23810, 68169, 67284, 37831, 64990, 56559, 68517, 36705, 69007, 71278, 58485, 34652, 66596, 74023, 22456, 34619, 59356, 64372, 63643, 23340, 22776, 73027, 70426, 6219, 26568, 44942, 66738, 19276, 7350, 33200, 54889, 19925, 34880, 48965, 34388, 3353, 27426, 24369, 15483, 19024, 32169, 52938, 52368, 53602, 60649, 23173, 49033, 34792, 53534, 9654, 58836, 22632, 10615, 43486, 22319, 31601, 20476, 43290, 37469, 24191, 1850, 22369, 1792, 26585, 21088, 63754, 12321, 37612, 18620, 64304, 26534, 22022, 2083, 23235, 5309, 68286, 55833, 18865, 31602, 3173, 60652, 47263, 15722, 2093, 63611, 11168, 43985, 75687, 19090, 7429, 33127, 75127, 41982, 10850, 10576, 41109, 40223, 22735, 13205, 8635, 43973, 48945, 69071, 7345, 34647, 9631, 70393, 46655, 17891, 38024, 66667, 65798, 18163, 9898, 22360, 16796, 22683, 68816, 26710, 49793, 73543, 24344, 23486, 75714, 9628, 37338, 9928, 19680, 65195, 64055, 46846, 13895, 2420, 49673, 55546, 56554, 53122, 43595, 48952, 56688, 41911, 4476, 42004, 61476, 20938, 12957, 1605, 29555, 69287, 34906, 10522, 52460, 8690, 39157, 32152, 19325, 76462, 41013, 39994, 64977, 12969, 19604, 13309, 22370, 46746, 47488, 1727, 56683, 7284, 36703, 53017, 28218, 47986, 32954, 37339, 19832, 17762, 47251, 40907, 49741, 38758, 33294, 63584, 56910, 52447, 36201, 63419, 8732, 65159, 66985, 43967, 18136, 67298, 37597, 58428, 22051, 20251, 55839, 39308, 42305, 3776, 29451, 54870, 52110, 65007, 71781, 855, 22691, 67334, 49644, 53864, 60550, 22824, 36446, 65487, 23828, 16812, 59178, 23710, 4693, 2887, 8265, 75781, 68559, 67211, 26070, 71912, 15740, 65048, 18251, 41944, 62345, 48918, 19018, 42287, 44829, 19873, 45245, 21737, 13244, 7285, 29412, 12339, 19458, 49685, 66803, 55474, 6058, 19858, 75347, 47225, 67082, 19001, 23679, 60599, 63681, 29763, 24235, 64902, 43522, 74195, 1899, 13654, 74669, 74179, 18833, 37412, 72129, 22301, 65026, 23168, 9090, 41017, 68509, 13252, 71596, 73830, 2064, 10717, 3126, 44111, 28330, 31959, 36113, 10815, 52227, 63877, 18884, 55695, 3581, 65341, 27804, 54854, 65089, 10942, 39791, 56874, 52948, 19281, 56675, 60302, 53473, 28297, 23775, 1547, 64066, 12061, 22205, 64206, 23127, 47411, 66093, 40220, 36263, 6215, 65148, 19877, 66976, 66735, 67351, 4358, 10461, 22196, 35054, 56421, 65435, 22359, 28070, 29373, 18800, 62796, 65599, 39651, 29454, 13354, 2031, 3171, 70422, 26613, 26075, 12255, 39290, 43385, 21147, 60693, 36147, 23285, 52202, 63649, 60402, 11299, 22055, 37785, 74968, 32177, 40201, 50097, 17937, 13124, 2910, 45077, 962, 55485, 19391, 3642, 52957, 63843, 76476, 1600, 64759, 73694, 43601, 55529, 71759, 42328, 62246, 29170, 65472, 41949, 22614, 18652, 13570, 53280, 68998, 22202, 2944, 53289, 3370, 7166, 47923, 39670, 42071, 49814, 72322, 25815, 34872, 3188, 39266, 64740, 7271, 43027, 76349, 39937, 52408, 30376, 6212, 21150, 18418, 25270, 44322, 13721, 64394, 62725, 4493, 36111, 52146, 74135, 21505), '0.00', True, '1/2319/%', True, '1/2319/%', ('waiting', 'confirmed', 'partially_available', 'assigned'), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL))' with params: [(12843, 18843, 47764, 53001, 30440, 61044, 19834, 40279, 76252, 56875, 64349, 1948, 65839, 38498, 68785, 39411, 67005, 16666, 37657, 8771, 53769, 56664, 28355, 53839, 6099, 19645, 23628, 75750, 63263, 63558, 60626, 8792, 69087, 17993, 63821, 69001, 20070, 7321, 75370, 56849, 17603, 43859, 75924, 2221, 52179, 38962, 21153, 54024, 6227, 12242, 3382, 4575, 52982, 42275, 32181, 64109, 70396, 8672, 9636, 66421, 24383, 44742, 53555, 37624, 22854, 34155, 24425, 19578, 26052, 34974, 39220, 65507, 40131, 47898, 73009, 36309, 47841, 71372, 4564, 56480, 34945, 39926, 66072, 39665, 69176, 49001, 52079, 24249, 62266, 2375, 6079, 2090, 12115, 74131, 13497, 18952, 8799, 74126, 1877, 32066, 40117, 8695, 66556, 45211, 63146, 65164, 36131, 55548, 37352, 44228, 12220, 18472, 9138, 39576, 23087, 10630, 60357, 49579, 1934, 1838, 7313, 53412, 3788, 39845, 23760, 7344, 22532, 17955, 18266, 43099, 63764, 54485, 54116, 56312, 43208, 22617, 38946, 23818, 51883, 35008, 20203, 65408, 24157, 38248, 72586, 34847, 53994, 19029, 1071, 12880, 20083, 36212, 54446, 62903, 52195, 42322, 54085, 34591, 3216, 39015, 22179, 5910, 71861, 76015, 1717, 43371, 13871, 53525, 37384, 22207, 64233, 13788, 12391, 62792, 22183, 65295, 44233, 33156, 22160, 10478, 42099, 63006, 68752, 40033, 10838, 12241, 30485, 37921, 67374, 47468, 37267, 65495, 49626, 75636, 68318, 59145, 7441, 19493, 12591, 13901, 44973, 3499, 71701, 15828, 71831, 74121, 63914, 59413, 34678, 75288, 4461, 69378, 65208, 12967, 9661, 64243, 52313, 75871, 2276, 73097, 12299, 4543, 24243, 58427, 75510, 25970, 26129, 47042, 22064, 1606, 19414, 45152, 56620, 43121, 53462, 34882, 64785, 36369, 34748, 41767, 71943, 22266, 52142, 43529, 7406, 41587, 27954, 18419, 12213, 22347, 43464, 64068, 34613, 37563, 15851, 29245, 9664, 66169, 22442, 40185, 42462, 52934, 1745, 74357, 55414, 38965, 19298, 26522, 34794, 18958, 1454, 43572, 68331, 55757, 52393, 19542, 42978, 2180, 72272, 68497, 34773, 17872, 53574, 18072, 35297, 15125, 75514, 23301, 63141, 47546, 34679, 44917, 23669, 6175, 20279, 20204, 62212, 62942, 73990, 31590, 73817, 21859, 74238, 22518, 75063, 12332, 73866, 37902, 63777, 3074, 62302, 55609, 1886, 888, 56805, 53604, 72186, 35379, 54782, 66789, 19462, 43830, 13305, 39534, 20679, 43190, 38993, 7364, 19730, 34148, 52589, 75182, 35471, 43314, 23600, 76257, 43553, 55762, 45147, 18130, 20928, 3277, 3018, 39399, 22544, 2343, 35260, 73625, 69178, 43497, 3506, 23124, 63657, 22365, 47950, 54727, 43068, 35056, 20039, 37548, 1854, 62354, 13035, 36431, 26290, 53480, 65497, 39405, 18725, 6100, 13307, 72530, 58434, 43010, 75709, 1673, 22026, 63023, 20266, 3366, 44951, 3066, 2146, 5814, 68200, 7383, 72804, 66661, 18948, 66176, 29722, 55829, 53030, 35123, 13220, 20269, 48978, 66560, 41969, 56612, 48996, 23431, 63963, 13172, 15904, 42357, 47892, 8260, 8263, 60800, 63565, 43076, 23204, 75404, 63840, 43238, 37448, 49879, 6168, 63009, 39871, 33207, 32065, 43478, 16717, 5350, 4252, 7306, 65082, 60158, 71785, 29378, 75491, 76256, 23005, 39873, 64025, 71790, 71707, 13617, 43539, 59029, 33255, 36476, 18726, 35184, 23532, 33189, 15622, 37691, 47955, 52390, 16545, 22849, 22214, 69261, 38948, 65141, 13500, 19262, 3254, 21183, 65083, 2293, 4496, 32001, 28231, 38956, 60559, 7289, 74494, 12315, 36423, 16504, 55944, 56412, 41821, 58433, 63139, 52329, 72730, 56469, 34688, 32097, 54534, 63800, 39305, 9070, 23813, 47540, 55648, 35396, 54051, 47223, 30401, 72606, 47741, 12556, 47449, 56438, 63885, 15211, 52416, 39114, 68833, 16034, 52631, 9911, 53177, 2188, 36066, 6137, 15898, 43666, 2207, 49887, 41606, 12314, 23335, 47993, 1942, 43551, 3764, 21218, 13314, 44142, 12927, 60239, 62293, 22684, 59088, 16739, 39566, 43672, 37356, 60294, 2857, 47871, 8644, 39408, 64815, 13126, 69350, 76444, 17816, 74177, 65168, 46854, 27457, 1487, 42021, 2011, 64183, 28009, 47253, 19988, 3481, 54125, 2069, 56365, 9119, 24210, 50118, 49684, 75885, 72999, 12523, 55470, 37577, 34713, 56912, 49839, 30384, 22549, 37845, 53430, 72074, 23396, 18080, 3789, 40321, 47098, 59147, 52145, 31992, 13129, 18776, 20209, 1726, 63167, 22354, 63978, 68322, 51831, 32032, 39217, 29522, 75974, 22472, 49666, 63137, 60351, 19551, 53573, 53490, 44238, 23762, 4581, 13098, 55525, 71304, 24181, 5859, 10984, 15892, 74288, 39829, 34564, 58435, 21747, 49007, 18491, 47953, 60431, 59059, 13203, 35063, 52321, 18301, 37639, 68203, 4351, 22408, 39116, 52316, 44891, 71857, 43341, 56375, 39372, 56444, 12123, 66699, 75371, 40118, 18502, 67187, 16493, 18568, 34805, 47936, 26104, 46873, 12406, 47074, 49577, 46783, 3769, 66869, 1116, 47909, 28360, 13187, 31597, 18575, 3558, 74042, 60423, 39451, 49861, 37538, 23093, 23392, 72892, 65542, 15417, 33185, 6225, 45182, 3447, 38963, 23318, 36325, 65723, 62982, 58986, 945, 49060, 52626, 21241, 37844, 64710, 35796, 32979, 34424, 47386, 54134, 26000, 2117, 23527, 1539, 37861, 17839, 36128, 65611, 55692, 34877, 54513, 49042, 53024, 42980, 37539, 10885, 23810, 68169, 67284, 37831, 64990, 56559, 68517, 36705, 69007, 71278, 58485, 34652, 66596, 74023, 22456, 34619, 59356, 64372, 63643, 23340, 22776, 73027, 70426, 6219, 26568, 44942, 66738, 19276, 7350, 33200, 54889, 19925, 34880, 48965, 34388, 3353, 27426, 24369, 15483, 19024, 32169, 52938, 52368, 53602, 60649, 23173, 49033, 34792, 53534, 9654, 58836, 22632, 10615, 43486, 22319, 31601, 20476, 43290, 37469, 24191, 1850, 22369, 1792, 26585, 21088, 63754, 12321, 37612, 18620, 64304, 26534, 22022, 2083, 23235, 5309, 68286, 55833, 18865, 31602, 3173, 60652, 47263, 15722, 2093, 63611, 11168, 43985, 75687, 19090, 7429, 33127, 75127, 41982, 10850, 10576, 41109, 40223, 22735, 13205, 8635, 43973, 48945, 69071, 7345, 34647, 9631, 70393, 46655, 17891, 38024, 66667, 65798, 18163, 9898, 22360, 16796, 22683, 68816, 26710, 49793, 73543, 24344, 23486, 75714, 9628, 37338, 9928, 19680, 65195, 64055, 46846, 13895, 2420, 49673, 55546, 56554, 53122, 43595, 48952, 56688, 41911, 4476, 42004, 61476, 20938, 12957, 1605, 29555, 69287, 34906, 10522, 52460, 8690, 39157, 32152, 19325, 76462, 41013, 39994, 64977, 12969, 19604, 13309, 22370, 46746, 47488, 1727, 56683, 7284, 36703, 53017, 28218, 47986, 32954, 37339, 19832, 17762, 47251, 40907, 49741, 38758, 33294, 63584, 56910, 52447, 36201, 63419, 8732, 65159, 66985, 43967, 18136, 67298, 37597, 58428, 22051, 20251, 55839, 39308, 42305, 3776, 29451, 54870, 52110, 65007, 71781, 855, 22691, 67334, 49644, 53864, 60550, 22824, 36446, 65487, 23828, 16812, 59178, 23710, 4693, 2887, 8265, 75781, 68559, 67211, 26070, 71912, 15740, 65048, 18251, 41944, 62345, 48918, 19018, 42287, 44829, 19873, 45245, 21737, 13244, 7285, 29412, 12339, 19458, 49685, 66803, 55474, 6058, 19858, 75347, 47225, 67082, 19001, 23679, 60599, 63681, 29763, 24235, 64902, 43522, 74195, 1899, 13654, 74669, 74179, 18833, 37412, 72129, 22301, 65026, 23168, 9090, 41017, 68509, 13252, 71596, 73830, 2064, 10717, 3126, 44111, 28330, 31959, 36113, 10815, 52227, 63877, 18884, 55695, 3581, 65341, 27804, 54854, 65089, 10942, 39791, 56874, 52948, 19281, 56675, 60302, 53473, 28297, 23775, 1547, 64066, 12061, 22205, 64206, 23127, 47411, 66093, 40220, 36263, 6215, 65148, 19877, 66976, 66735, 67351, 4358, 10461, 22196, 35054, 56421, 65435, 22359, 28070, 29373, 18800, 62796, 65599, 39651, 29454, 13354, 2031, 3171, 70422, 26613, 26075, 12255, 39290, 43385, 21147, 60693, 36147, 23285, 52202, 63649, 60402, 11299, 22055, 37785, 74968, 32177, 40201, 50097, 17937, 13124, 2910, 45077, 962, 55485, 19391, 3642, 52957, 63843, 76476, 1600, 64759, 73694, 43601, 55529, 71759, 42328, 62246, 29170, 65472, 41949, 22614, 18652, 13570, 53280, 68998, 22202, 2944, 53289, 3370, 7166, 47923, 39670, 42071, 49814, 72322, 25815, 34872, 3188, 39266, 64740, 7271, 43027, 76349, 39937, 52408, 30376, 6212, 21150, 18418, 25270, 44322, 13721, 64394, 62725, 4493, 36111, 52146, 74135, 21505), '0.00', True, '1/2319/%', True, '1/2319/%', ('waiting', 'confirmed', 'partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL))' with params: [(74724, 44817, 22882, 22235, 63278, 18893, 32120, 41201, 76162, 55518, 26639, 66532, 45073, 47222, 63684, 68779, 20085, 2324, 74103, 3175, 39528, 22955, 69392, 59357, 69313, 23820, 56565, 53824, 53410, 64060, 71596, 62219, 58379, 49551, 23790, 34678, 22738, 22604, 43163, 18434, 63247, 21254, 52114, 5797, 64095, 56359, 3597, 10932, 60286, 67055, 23480, 23745, 73275, 30433, 37884, 53442, 54839, 7448, 13298, 22518, 18102, 20278, 68446, 9093, 22276, 75518, 69207, 13157, 43260, 1703, 16509, 28370, 47454, 44902, 18172, 28055, 34583, 36081, 19400, 40897, 34850, 65851, 32158, 16488, 19637, 24307, 64970, 46770, 18302, 63319, 18042, 20089, 62947, 23318, 43519, 58437, 13327, 22989, 22792, 68944, 9913, 68731, 10558, 62217, 60034, 10757, 58429, 16035, 27912, 55279, 13417, 54537, 20975, 75344, 54132, 21720, 72356, 73320, 21144, 36763, 18456, 40157, 34909, 33067, 64389, 34588, 7374, 63481, 50084, 10508, 39583, 39861, 2875, 13840, 39141, 65051, 69075, 11545, 55694, 55574, 21121, 18030, 65114, 49745, 12079, 2935, 64835, 21147, 23751, 53270, 13160, 72346, 52389, 39340, 63755, 26291, 47408, 56810, 53370, 52595, 52499, 65161, 40902, 47965, 58921, 62974, 23355, 13322, 26580, 23499, 35194, 29758, 15129, 12393, 27944, 59002, 64711, 8774, 29417, 9586, 35296, 53264, 15894, 42197, 5902, 68230, 38991, 5322, 20423, 22783, 2890, 53463, 13898, 1746, 52677, 40293, 64773, 67196, 75388, 66366, 63052, 49627, 47361, 65789, 71752, 33199, 16672, 33084, 56380, 13852, 75449, 41917, 47713, 39366, 26193, 52475, 49566, 15930, 66631, 39078, 73444, 64233, 63772, 5819, 29560, 74002, 13763, 9061, 1090, 60307, 37882, 76275, 68892, 74517, 45184, 47476, 18604, 18949, 18279, 58275, 21077, 29701, 39209, 14739, 22415, 19281, 62902, 17855, 49762, 56402, 35290, 36430, 15847, 21257, 43927, 8285, 55625, 26182, 23203, 4594, 56923, 47191, 9137, 24138, 37396, 58301, 3642, 28220, 43285, 21752, 72595, 72766, 43714, 75676, 19966, 20079, 12503, 29456, 23726, 63974, 63911, 64379, 12428, 12173, 20952, 1242, 65748, 34417, 18692, 41999, 1849, 49562, 68745, 66415, 29540, 53505, 3162, 11111, 36057, 20087, 56947, 68273, 28027, 28067, 47840, 71884, 63430, 55798, 19493, 10742, 54731, 22581, 42347, 62345, 65558, 74092, 34894, 3284, 19032, 3425, 16680, 17811, 53915, 66500, 60263, 63462, 45215, 3372, 52655, 11160, 34804, 36476, 12287, 19346, 10967, 3785, 26234, 4324, 12308, 10810, 39413, 64375, 18532, 73936, 45034, 1477, 65649, 45070, 43563, 18793, 52934, 23091, 22221, 58354, 42302, 26575, 15744, 52557, 22550, 23237, 55472, 60579, 43226, 60053, 28061, 2211, 69218, 66352, 9798, 63163, 26205, 69147, 8747, 39344, 22625, 63951, 23354, 10467, 64873, 52634, 15624, 29386, 55516, 35377, 75480, 37584, 3182, 58321, 15883, 3405, 60249, 53569, 42106, 13722, 64673, 20300, 13611, 3514, 64944, 11648, 20299, 74739, 63680, 67357, 10663, 35396, 75477, 34935, 23384, 12194, 36308, 4527, 72526, 71650, 71775, 5402, 63109, 11728, 13668, 73917, 32049, 47473, 8642, 1516, 49062, 34624, 71308, 40180, 73428, 63606, 31577, 53110, 10637, 2058, 73941, 38252, 20399, 65678, 1442, 47838, 35105, 5397, 43203, 28116, 72398, 59342, 64757, 74247, 23294, 13255, 23238, 72499, 19256, 46634, 37343, 47190, 1706, 62725, 65653, 53034, 53664, 22728, 65277, 66446, 55615, 15951, 73546, 49033, 75803, 4506, 36054, 19854, 72543, 37507, 71398, 40189, 65410, 39166, 13234, 2229, 27964, 68242, 37763, 16846, 49041, 59033, 52477, 74932, 19799, 26597, 22374, 58400, 37335, 52362, 11162, 61063, 22501, 62936, 18696, 66785, 40172, 3199, 27943, 2340, 72549, 34592, 42950, 24137, 10783, 63382, 21591, 17756, 929, 12245, 31601, 53424, 36159, 34660, 23493, 52447, 65426, 23114, 44129, 53331, 71694, 13207, 74682, 28659, 18976, 43732, 10975, 65631, 62755, 58940, 17786, 38951, 41941, 18874, 35019, 1445, 42160, 27837, 1220, 63295, 64059, 39751, 3599, 29375, 11173, 32018, 10753, 55544, 73663, 5903, 4693, 13267, 65575, 53435, 22781, 34867, 2228, 28071, 75629, 1879, 42509, 6147, 18636, 71281, 65692, 75008, 19320, 35069, 36184, 65394, 43407, 12300, 21236, 8687, 29319, 7258, 13771, 19905, 1764, 63585, 63936, 4429, 38024, 44231, 65460, 44843, 24230, 74655, 55272, 66600, 9125, 17922, 71955, 52184, 65461, 13163, 68267, 64010, 22521, 39385, 29452, 23415, 15793, 68316, 21729, 43253, 42377, 40119, 66598, 19260, 72988, 2183, 65082, 60635, 75238, 13032, 55589, 23754, 56949, 44229, 9032, 54065, 60228, 1224, 44737, 55337, 10269, 6246, 23268, 19418, 62970, 55508, 34683, 4578, 42231, 42493, 23609, 56689, 26114, 3084, 9135, 60962, 53658, 60439, 53741, 26162, 54758, 34309, 73660, 55573, 41750, 10991, 44282, 56750, 72127, 39909, 60169, 53363, 53663, 36453, 60670, 60697, 34612, 35006, 69238, 1769, 22808, 24390, 75446, 64939, 37446, 3603, 71445, 18394, 19015, 35083, 16610, 13911, 56659, 49665, 65122, 55311, 55511, 72321, 16012, 55882, 56677, 53768, 23352, 10787, 72896, 41614, 75812, 65056, 59086, 15904, 23229, 1211, 18265, 39103, 36150, 22283, 3024, 68697, 33234, 62748, 36495, 63410, 73026, 10785, 9087, 20458, 21162, 18899, 73873, 20414, 76492, 52264, 47545, 23486, 19401, 40252, 67253, 66722, 10727, 68829, 28148, 1774, 68471, 72223, 22566, 59404, 7221, 63861, 68299, 42953, 39045, 1390, 3218, 47546, 8723, 76236, 55726, 22962, 29347, 22326, 65471, 63408, 76421, 49808, 36688, 18391, 75777, 10632, 41815, 1106, 10073, 65498, 36383, 9891, 53403, 18408, 68264, 28249, 65005, 54778, 1527, 64397, 10648, 66605, 10859, 22320, 52582, 47539, 45228, 55651, 1507, 36428, 29344, 66177, 67159, 33245, 33208, 52560, 10846, 49791, 44906, 64065, 66340, 43282, 2949, 44143, 24384, 22649, 28328, 59083, 75324, 62809, 20202, 66615, 39934, 34143, 64395, 20213, 43162, 44845, 43569, 28601, 3167, 19002, 49587, 74863, 18055, 2835, 37803, 71441, 66804, 49461, 39252, 41788, 53577, 39859, 18498, 41914, 52187, 52571, 29373, 68746, 47753, 65723, 23360, 19405, 13842, 65133, 7408, 73075, 42978, 71549, 68193, 56362, 8297, 74488, 3474, 43473, 39308, 19375, 23472, 18122, 19477, 1823, 56567, 10491, 34961, 18569, 22760, 74778, 13311, 63823, 1152, 47057, 64969, 24402, 75814, 65610, 2019, 60500, 20225, 34736, 46625, 23222, 49087, 58427, 22335, 29213, 1376, 58365, 1418, 16487, 27869, 15952, 15707, 41868, 56877, 41920, 19365, 16691, 32441, 76489, 41582, 39217, 42051, 73446, 56288, 74973, 47254, 42176, 6079, 75669, 3534, 52353, 75084, 65407, 39179, 56678, 19013, 31984, 55049, 66769, 25822, 16541, 27946, 23539, 43455, 912, 63149, 4487, 56798, 19463, 17807, 45016, 52272, 22902, 10565, 31873, 26243, 58405, 20157, 12846, 59417, 28520, 1702, 20016, 66546, 47517, 67177, 34127, 58869, 37465, 63562, 945, 1535, 64367, 36416, 17955, 27856, 13801, 65440, 26165, 45078, 1413, 13164, 42018, 55746, 46790, 23144, 10754, 52580, 41125, 20139, 66996, 74357, 1895, 10697, 9646, 4427, 74686, 71692, 34769, 52382, 21171, 18107, 26063, 33235, 63246, 3369, 16573, 18459, 40033, 28381, 58479, 71256, 43454, 1884, 64190, 44200, 10640, 49609, 22976, 43543, 2373, 74303, 73432, 73579, 23799, 35160, 47085, 17856, 26712, 60658, 64732, 17925, 9580, 66686, 42020, 49632, 3450, 22190, 21145, 23290, 1435, 1258, 68749, 12234, 3132, 1676, 22942), '0.00', True, '1/2335/%', True, '1/2335/%', ('waiting', 'confirmed', 'partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL)) AND ("stock_move"."state" in %s))' with params: [(74724, 44817, 22882, 22235, 63278, 18893, 32120, 41201, 76162, 55518, 26639, 66532, 45073, 47222, 63684, 68779, 20085, 2324, 74103, 3175, 39528, 22955, 69392, 59357, 69313, 23820, 56565, 53824, 53410, 64060, 71596, 62219, 58379, 49551, 23790, 34678, 22738, 22604, 43163, 18434, 63247, 21254, 52114, 5797, 64095, 56359, 3597, 10932, 60286, 67055, 23480, 23745, 73275, 30433, 37884, 53442, 54839, 7448, 13298, 22518, 18102, 20278, 68446, 9093, 22276, 75518, 69207, 13157, 43260, 1703, 16509, 28370, 47454, 44902, 18172, 28055, 34583, 36081, 19400, 40897, 34850, 65851, 32158, 16488, 19637, 24307, 64970, 46770, 18302, 63319, 18042, 20089, 62947, 23318, 43519, 58437, 13327, 22989, 22792, 68944, 9913, 68731, 10558, 62217, 60034, 10757, 58429, 16035, 27912, 55279, 13417, 54537, 20975, 75344, 54132, 21720, 72356, 73320, 21144, 36763, 18456, 40157, 34909, 33067, 64389, 34588, 7374, 63481, 50084, 10508, 39583, 39861, 2875, 13840, 39141, 65051, 69075, 11545, 55694, 55574, 21121, 18030, 65114, 49745, 12079, 2935, 64835, 21147, 23751, 53270, 13160, 72346, 52389, 39340, 63755, 26291, 47408, 56810, 53370, 52595, 52499, 65161, 40902, 47965, 58921, 62974, 23355, 13322, 26580, 23499, 35194, 29758, 15129, 12393, 27944, 59002, 64711, 8774, 29417, 9586, 35296, 53264, 15894, 42197, 5902, 68230, 38991, 5322, 20423, 22783, 2890, 53463, 13898, 1746, 52677, 40293, 64773, 67196, 75388, 66366, 63052, 49627, 47361, 65789, 71752, 33199, 16672, 33084, 56380, 13852, 75449, 41917, 47713, 39366, 26193, 52475, 49566, 15930, 66631, 39078, 73444, 64233, 63772, 5819, 29560, 74002, 13763, 9061, 1090, 60307, 37882, 76275, 68892, 74517, 45184, 47476, 18604, 18949, 18279, 58275, 21077, 29701, 39209, 14739, 22415, 19281, 62902, 17855, 49762, 56402, 35290, 36430, 15847, 21257, 43927, 8285, 55625, 26182, 23203, 4594, 56923, 47191, 9137, 24138, 37396, 58301, 3642, 28220, 43285, 21752, 72595, 72766, 43714, 75676, 19966, 20079, 12503, 29456, 23726, 63974, 63911, 64379, 12428, 12173, 20952, 1242, 65748, 34417, 18692, 41999, 1849, 49562, 68745, 66415, 29540, 53505, 3162, 11111, 36057, 20087, 56947, 68273, 28027, 28067, 47840, 71884, 63430, 55798, 19493, 10742, 54731, 22581, 42347, 62345, 65558, 74092, 34894, 3284, 19032, 3425, 16680, 17811, 53915, 66500, 60263, 63462, 45215, 3372, 52655, 11160, 34804, 36476, 12287, 19346, 10967, 3785, 26234, 4324, 12308, 10810, 39413, 64375, 18532, 73936, 45034, 1477, 65649, 45070, 43563, 18793, 52934, 23091, 22221, 58354, 42302, 26575, 15744, 52557, 22550, 23237, 55472, 60579, 43226, 60053, 28061, 2211, 69218, 66352, 9798, 63163, 26205, 69147, 8747, 39344, 22625, 63951, 23354, 10467, 64873, 52634, 15624, 29386, 55516, 35377, 75480, 37584, 3182, 58321, 15883, 3405, 60249, 53569, 42106, 13722, 64673, 20300, 13611, 3514, 64944, 11648, 20299, 74739, 63680, 67357, 10663, 35396, 75477, 34935, 23384, 12194, 36308, 4527, 72526, 71650, 71775, 5402, 63109, 11728, 13668, 73917, 32049, 47473, 8642, 1516, 49062, 34624, 71308, 40180, 73428, 63606, 31577, 53110, 10637, 2058, 73941, 38252, 20399, 65678, 1442, 47838, 35105, 5397, 43203, 28116, 72398, 59342, 64757, 74247, 23294, 13255, 23238, 72499, 19256, 46634, 37343, 47190, 1706, 62725, 65653, 53034, 53664, 22728, 65277, 66446, 55615, 15951, 73546, 49033, 75803, 4506, 36054, 19854, 72543, 37507, 71398, 40189, 65410, 39166, 13234, 2229, 27964, 68242, 37763, 16846, 49041, 59033, 52477, 74932, 19799, 26597, 22374, 58400, 37335, 52362, 11162, 61063, 22501, 62936, 18696, 66785, 40172, 3199, 27943, 2340, 72549, 34592, 42950, 24137, 10783, 63382, 21591, 17756, 929, 12245, 31601, 53424, 36159, 34660, 23493, 52447, 65426, 23114, 44129, 53331, 71694, 13207, 74682, 28659, 18976, 43732, 10975, 65631, 62755, 58940, 17786, 38951, 41941, 18874, 35019, 1445, 42160, 27837, 1220, 63295, 64059, 39751, 3599, 29375, 11173, 32018, 10753, 55544, 73663, 5903, 4693, 13267, 65575, 53435, 22781, 34867, 2228, 28071, 75629, 1879, 42509, 6147, 18636, 71281, 65692, 75008, 19320, 35069, 36184, 65394, 43407, 12300, 21236, 8687, 29319, 7258, 13771, 19905, 1764, 63585, 63936, 4429, 38024, 44231, 65460, 44843, 24230, 74655, 55272, 66600, 9125, 17922, 71955, 52184, 65461, 13163, 68267, 64010, 22521, 39385, 29452, 23415, 15793, 68316, 21729, 43253, 42377, 40119, 66598, 19260, 72988, 2183, 65082, 60635, 75238, 13032, 55589, 23754, 56949, 44229, 9032, 54065, 60228, 1224, 44737, 55337, 10269, 6246, 23268, 19418, 62970, 55508, 34683, 4578, 42231, 42493, 23609, 56689, 26114, 3084, 9135, 60962, 53658, 60439, 53741, 26162, 54758, 34309, 73660, 55573, 41750, 10991, 44282, 56750, 72127, 39909, 60169, 53363, 53663, 36453, 60670, 60697, 34612, 35006, 69238, 1769, 22808, 24390, 75446, 64939, 37446, 3603, 71445, 18394, 19015, 35083, 16610, 13911, 56659, 49665, 65122, 55311, 55511, 72321, 16012, 55882, 56677, 53768, 23352, 10787, 72896, 41614, 75812, 65056, 59086, 15904, 23229, 1211, 18265, 39103, 36150, 22283, 3024, 68697, 33234, 62748, 36495, 63410, 73026, 10785, 9087, 20458, 21162, 18899, 73873, 20414, 76492, 52264, 47545, 23486, 19401, 40252, 67253, 66722, 10727, 68829, 28148, 1774, 68471, 72223, 22566, 59404, 7221, 63861, 68299, 42953, 39045, 1390, 3218, 47546, 8723, 76236, 55726, 22962, 29347, 22326, 65471, 63408, 76421, 49808, 36688, 18391, 75777, 10632, 41815, 1106, 10073, 65498, 36383, 9891, 53403, 18408, 68264, 28249, 65005, 54778, 1527, 64397, 10648, 66605, 10859, 22320, 52582, 47539, 45228, 55651, 1507, 36428, 29344, 66177, 67159, 33245, 33208, 52560, 10846, 49791, 44906, 64065, 66340, 43282, 2949, 44143, 24384, 22649, 28328, 59083, 75324, 62809, 20202, 66615, 39934, 34143, 64395, 20213, 43162, 44845, 43569, 28601, 3167, 19002, 49587, 74863, 18055, 2835, 37803, 71441, 66804, 49461, 39252, 41788, 53577, 39859, 18498, 41914, 52187, 52571, 29373, 68746, 47753, 65723, 23360, 19405, 13842, 65133, 7408, 73075, 42978, 71549, 68193, 56362, 8297, 74488, 3474, 43473, 39308, 19375, 23472, 18122, 19477, 1823, 56567, 10491, 34961, 18569, 22760, 74778, 13311, 63823, 1152, 47057, 64969, 24402, 75814, 65610, 2019, 60500, 20225, 34736, 46625, 23222, 49087, 58427, 22335, 29213, 1376, 58365, 1418, 16487, 27869, 15952, 15707, 41868, 56877, 41920, 19365, 16691, 32441, 76489, 41582, 39217, 42051, 73446, 56288, 74973, 47254, 42176, 6079, 75669, 3534, 52353, 75084, 65407, 39179, 56678, 19013, 31984, 55049, 66769, 25822, 16541, 27946, 23539, 43455, 912, 63149, 4487, 56798, 19463, 17807, 45016, 52272, 22902, 10565, 31873, 26243, 58405, 20157, 12846, 59417, 28520, 1702, 20016, 66546, 47517, 67177, 34127, 58869, 37465, 63562, 945, 1535, 64367, 36416, 17955, 27856, 13801, 65440, 26165, 45078, 1413, 13164, 42018, 55746, 46790, 23144, 10754, 52580, 41125, 20139, 66996, 74357, 1895, 10697, 9646, 4427, 74686, 71692, 34769, 52382, 21171, 18107, 26063, 33235, 63246, 3369, 16573, 18459, 40033, 28381, 58479, 71256, 43454, 1884, 64190, 44200, 10640, 49609, 22976, 43543, 2373, 74303, 73432, 73579, 23799, 35160, 47085, 17856, 26712, 60658, 64732, 17925, 9580, 66686, 42020, 49632, 3450, 22190, 21145, 23290, 1435, 1258, 68749, 12234, 3132, 1676, 22942), '0.00', True, '1/2335/%', True, '1/2335/%', ('waiting', 'confirmed', 'partially_available', 'assigned'), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL))' with params: [(74724, 44817, 22882, 22235, 63278, 18893, 32120, 41201, 76162, 55518, 26639, 66532, 45073, 47222, 63684, 68779, 20085, 2324, 74103, 3175, 39528, 22955, 69392, 59357, 69313, 23820, 56565, 53824, 53410, 64060, 71596, 62219, 58379, 49551, 23790, 34678, 22738, 22604, 43163, 18434, 63247, 21254, 52114, 5797, 64095, 56359, 3597, 10932, 60286, 67055, 23480, 23745, 73275, 30433, 37884, 53442, 54839, 7448, 13298, 22518, 18102, 20278, 68446, 9093, 22276, 75518, 69207, 13157, 43260, 1703, 16509, 28370, 47454, 44902, 18172, 28055, 34583, 36081, 19400, 40897, 34850, 65851, 32158, 16488, 19637, 24307, 64970, 46770, 18302, 63319, 18042, 20089, 62947, 23318, 43519, 58437, 13327, 22989, 22792, 68944, 9913, 68731, 10558, 62217, 60034, 10757, 58429, 16035, 27912, 55279, 13417, 54537, 20975, 75344, 54132, 21720, 72356, 73320, 21144, 36763, 18456, 40157, 34909, 33067, 64389, 34588, 7374, 63481, 50084, 10508, 39583, 39861, 2875, 13840, 39141, 65051, 69075, 11545, 55694, 55574, 21121, 18030, 65114, 49745, 12079, 2935, 64835, 21147, 23751, 53270, 13160, 72346, 52389, 39340, 63755, 26291, 47408, 56810, 53370, 52595, 52499, 65161, 40902, 47965, 58921, 62974, 23355, 13322, 26580, 23499, 35194, 29758, 15129, 12393, 27944, 59002, 64711, 8774, 29417, 9586, 35296, 53264, 15894, 42197, 5902, 68230, 38991, 5322, 20423, 22783, 2890, 53463, 13898, 1746, 52677, 40293, 64773, 67196, 75388, 66366, 63052, 49627, 47361, 65789, 71752, 33199, 16672, 33084, 56380, 13852, 75449, 41917, 47713, 39366, 26193, 52475, 49566, 15930, 66631, 39078, 73444, 64233, 63772, 5819, 29560, 74002, 13763, 9061, 1090, 60307, 37882, 76275, 68892, 74517, 45184, 47476, 18604, 18949, 18279, 58275, 21077, 29701, 39209, 14739, 22415, 19281, 62902, 17855, 49762, 56402, 35290, 36430, 15847, 21257, 43927, 8285, 55625, 26182, 23203, 4594, 56923, 47191, 9137, 24138, 37396, 58301, 3642, 28220, 43285, 21752, 72595, 72766, 43714, 75676, 19966, 20079, 12503, 29456, 23726, 63974, 63911, 64379, 12428, 12173, 20952, 1242, 65748, 34417, 18692, 41999, 1849, 49562, 68745, 66415, 29540, 53505, 3162, 11111, 36057, 20087, 56947, 68273, 28027, 28067, 47840, 71884, 63430, 55798, 19493, 10742, 54731, 22581, 42347, 62345, 65558, 74092, 34894, 3284, 19032, 3425, 16680, 17811, 53915, 66500, 60263, 63462, 45215, 3372, 52655, 11160, 34804, 36476, 12287, 19346, 10967, 3785, 26234, 4324, 12308, 10810, 39413, 64375, 18532, 73936, 45034, 1477, 65649, 45070, 43563, 18793, 52934, 23091, 22221, 58354, 42302, 26575, 15744, 52557, 22550, 23237, 55472, 60579, 43226, 60053, 28061, 2211, 69218, 66352, 9798, 63163, 26205, 69147, 8747, 39344, 22625, 63951, 23354, 10467, 64873, 52634, 15624, 29386, 55516, 35377, 75480, 37584, 3182, 58321, 15883, 3405, 60249, 53569, 42106, 13722, 64673, 20300, 13611, 3514, 64944, 11648, 20299, 74739, 63680, 67357, 10663, 35396, 75477, 34935, 23384, 12194, 36308, 4527, 72526, 71650, 71775, 5402, 63109, 11728, 13668, 73917, 32049, 47473, 8642, 1516, 49062, 34624, 71308, 40180, 73428, 63606, 31577, 53110, 10637, 2058, 73941, 38252, 20399, 65678, 1442, 47838, 35105, 5397, 43203, 28116, 72398, 59342, 64757, 74247, 23294, 13255, 23238, 72499, 19256, 46634, 37343, 47190, 1706, 62725, 65653, 53034, 53664, 22728, 65277, 66446, 55615, 15951, 73546, 49033, 75803, 4506, 36054, 19854, 72543, 37507, 71398, 40189, 65410, 39166, 13234, 2229, 27964, 68242, 37763, 16846, 49041, 59033, 52477, 74932, 19799, 26597, 22374, 58400, 37335, 52362, 11162, 61063, 22501, 62936, 18696, 66785, 40172, 3199, 27943, 2340, 72549, 34592, 42950, 24137, 10783, 63382, 21591, 17756, 929, 12245, 31601, 53424, 36159, 34660, 23493, 52447, 65426, 23114, 44129, 53331, 71694, 13207, 74682, 28659, 18976, 43732, 10975, 65631, 62755, 58940, 17786, 38951, 41941, 18874, 35019, 1445, 42160, 27837, 1220, 63295, 64059, 39751, 3599, 29375, 11173, 32018, 10753, 55544, 73663, 5903, 4693, 13267, 65575, 53435, 22781, 34867, 2228, 28071, 75629, 1879, 42509, 6147, 18636, 71281, 65692, 75008, 19320, 35069, 36184, 65394, 43407, 12300, 21236, 8687, 29319, 7258, 13771, 19905, 1764, 63585, 63936, 4429, 38024, 44231, 65460, 44843, 24230, 74655, 55272, 66600, 9125, 17922, 71955, 52184, 65461, 13163, 68267, 64010, 22521, 39385, 29452, 23415, 15793, 68316, 21729, 43253, 42377, 40119, 66598, 19260, 72988, 2183, 65082, 60635, 75238, 13032, 55589, 23754, 56949, 44229, 9032, 54065, 60228, 1224, 44737, 55337, 10269, 6246, 23268, 19418, 62970, 55508, 34683, 4578, 42231, 42493, 23609, 56689, 26114, 3084, 9135, 60962, 53658, 60439, 53741, 26162, 54758, 34309, 73660, 55573, 41750, 10991, 44282, 56750, 72127, 39909, 60169, 53363, 53663, 36453, 60670, 60697, 34612, 35006, 69238, 1769, 22808, 24390, 75446, 64939, 37446, 3603, 71445, 18394, 19015, 35083, 16610, 13911, 56659, 49665, 65122, 55311, 55511, 72321, 16012, 55882, 56677, 53768, 23352, 10787, 72896, 41614, 75812, 65056, 59086, 15904, 23229, 1211, 18265, 39103, 36150, 22283, 3024, 68697, 33234, 62748, 36495, 63410, 73026, 10785, 9087, 20458, 21162, 18899, 73873, 20414, 76492, 52264, 47545, 23486, 19401, 40252, 67253, 66722, 10727, 68829, 28148, 1774, 68471, 72223, 22566, 59404, 7221, 63861, 68299, 42953, 39045, 1390, 3218, 47546, 8723, 76236, 55726, 22962, 29347, 22326, 65471, 63408, 76421, 49808, 36688, 18391, 75777, 10632, 41815, 1106, 10073, 65498, 36383, 9891, 53403, 18408, 68264, 28249, 65005, 54778, 1527, 64397, 10648, 66605, 10859, 22320, 52582, 47539, 45228, 55651, 1507, 36428, 29344, 66177, 67159, 33245, 33208, 52560, 10846, 49791, 44906, 64065, 66340, 43282, 2949, 44143, 24384, 22649, 28328, 59083, 75324, 62809, 20202, 66615, 39934, 34143, 64395, 20213, 43162, 44845, 43569, 28601, 3167, 19002, 49587, 74863, 18055, 2835, 37803, 71441, 66804, 49461, 39252, 41788, 53577, 39859, 18498, 41914, 52187, 52571, 29373, 68746, 47753, 65723, 23360, 19405, 13842, 65133, 7408, 73075, 42978, 71549, 68193, 56362, 8297, 74488, 3474, 43473, 39308, 19375, 23472, 18122, 19477, 1823, 56567, 10491, 34961, 18569, 22760, 74778, 13311, 63823, 1152, 47057, 64969, 24402, 75814, 65610, 2019, 60500, 20225, 34736, 46625, 23222, 49087, 58427, 22335, 29213, 1376, 58365, 1418, 16487, 27869, 15952, 15707, 41868, 56877, 41920, 19365, 16691, 32441, 76489, 41582, 39217, 42051, 73446, 56288, 74973, 47254, 42176, 6079, 75669, 3534, 52353, 75084, 65407, 39179, 56678, 19013, 31984, 55049, 66769, 25822, 16541, 27946, 23539, 43455, 912, 63149, 4487, 56798, 19463, 17807, 45016, 52272, 22902, 10565, 31873, 26243, 58405, 20157, 12846, 59417, 28520, 1702, 20016, 66546, 47517, 67177, 34127, 58869, 37465, 63562, 945, 1535, 64367, 36416, 17955, 27856, 13801, 65440, 26165, 45078, 1413, 13164, 42018, 55746, 46790, 23144, 10754, 52580, 41125, 20139, 66996, 74357, 1895, 10697, 9646, 4427, 74686, 71692, 34769, 52382, 21171, 18107, 26063, 33235, 63246, 3369, 16573, 18459, 40033, 28381, 58479, 71256, 43454, 1884, 64190, 44200, 10640, 49609, 22976, 43543, 2373, 74303, 73432, 73579, 23799, 35160, 47085, 17856, 26712, 60658, 64732, 17925, 9580, 66686, 42020, 49632, 3450, 22190, 21145, 23290, 1435, 1258, 68749, 12234, 3132, 1676, 22942), '0.00', True, '1/2335/%', True, '1/2335/%', ('waiting', 'confirmed', 'partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL))' with params: [(74774, 76139, 76126, 75255, 72687, 72647, 72314, 72513, 74921, 76494, 74288, 75852, 73391, 76075, 73351, 73449, 74994), '0.00', True, '1/2495/%', True, '1/2495/%', ('waiting', 'confirmed', 'partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL)) AND ("stock_move"."state" in %s))' with params: [(74774, 76139, 76126, 75255, 72687, 72647, 72314, 72513, 74921, 76494, 74288, 75852, 73391, 76075, 73351, 73449, 74994), '0.00', True, '1/2495/%', True, '1/2495/%', ('waiting', 'confirmed', 'partially_available', 'assigned'), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL))' with params: [(74774, 76139, 76126, 75255, 72687, 72647, 72314, 72513, 74921, 76494, 74288, 75852, 73391, 76075, 73351, 73449, 74994), '0.00', True, '1/2495/%', True, '1/2495/%', ('waiting', 'confirmed', 'partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL))' with params: [(75760, 74277, 73930, 72780, 72887, 73359), '0.00', True, '1/2415/%', True, '1/2415/%', ('waiting', 'confirmed', 'partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL)) AND ("stock_move"."state" in %s))' with params: [(75760, 74277, 73930, 72780, 72887, 73359), '0.00', True, '1/2415/%', True, '1/2415/%', ('waiting', 'confirmed', 'partially_available', 'assigned'), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL))' with params: [(75760, 74277, 73930, 72780, 72887, 73359), '0.00', True, '1/2415/%', True, '1/2415/%', ('waiting', 'confirmed', 'partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL))' with params: [(75008, 72789), '0.00', True, '1/2503/%', True, '1/2503/%', ('waiting', 'confirmed', 'partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL)) AND ("stock_move"."state" in %s))' with params: [(75008, 72789), '0.00', True, '1/2503/%', True, '1/2503/%', ('waiting', 'confirmed', 'partially_available', 'assigned'), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL))' with params: [(75008, 72789), '0.00', True, '1/2503/%', True, '1/2503/%', ('waiting', 'confirmed', 'partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL))' with params: [(75997, 76396, 75700, 71707, 71535, 75723, 72558, 75535, 75565, 75366, 72929, 71509, 72212, 73441, 75726, 75895, 75972, 72242, 75349), '0.00', True, '1/2431/%', True, '1/2431/%', ('waiting', 'confirmed', 'partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL)) AND ("stock_move"."state" in %s))' with params: [(75997, 76396, 75700, 71707, 71535, 75723, 72558, 75535, 75565, 75366, 72929, 71509, 72212, 73441, 75726, 75895, 75972, 72242, 75349), '0.00', True, '1/2431/%', True, '1/2431/%', ('waiting', 'confirmed', 'partially_available', 'assigned'), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL))' with params: [(75997, 76396, 75700, 71707, 71535, 75723, 72558, 75535, 75565, 75366, 72929, 71509, 72212, 73441, 75726, 75895, 75972, 72242, 75349), '0.00', True, '1/2431/%', True, '1/2431/%', ('waiting', 'confirmed', 'partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL))' with params: [(74029, 71755, 73678, 72017, 75967, 75151, 72969, 74976, 73968, 72393), '0.00', True, '1/2479/%', True, '1/2479/%', ('waiting', 'confirmed', 'partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL)) AND ("stock_move"."state" in %s))' with params: [(74029, 71755, 73678, 72017, 75967, 75151, 72969, 74976, 73968, 72393), '0.00', True, '1/2479/%', True, '1/2479/%', ('waiting', 'confirmed', 'partially_available', 'assigned'), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL))' with params: [(74029, 71755, 73678, 72017, 75967, 75151, 72969, 74976, 73968, 72393), '0.00', True, '1/2479/%', True, '1/2479/%', ('waiting', 'confirmed', 'partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL))' with params: [(16, 31), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL)) AND ("stock_move"."state" in %s))' with params: [(16, 31), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned'), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL))' with params: [(16, 31), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL))' with params: [(22208, 13403, 21501, 26054, 62259, 64085, 30488, 7430, 3096, 64535, 7330, 47168, 24401, 20129, 66897, 47584, 23468, 72972, 65115, 71347, 39064, 45150, 69271, 55724, 63406, 18121, 39906, 23188, 56769, 63714, 21771, 11328, 34619, 16677, 15714, 52566, 65110, 3497, 20894, 61062, 55790, 7326, 1167, 47093, 26099, 60159, 33139, 1064, 53397, 52443, 41904, 63465, 18017, 62767, 26180, 10781, 63310, 73409, 54851, 73761, 13254, 76367, 52964, 20235, 21174, 49036, 11661, 10985, 76457, 63122, 38998, 1225, 21209, 49891, 34645, 47976, 44823, 18022, 39477, 46830, 36473, 65851, 29526, 39394, 30470, 55909, 47560, 60550, 40773, 1284, 75984, 22841, 36170, 42947, 63769, 4591, 1835, 33210, 22904, 16801, 68167, 23284, 23587, 23425, 43362, 1646, 34986, 40311, 20125, 47864, 69423, 32067, 15831, 40289, 43080, 63539, 66164, 39913, 5284, 44853, 29356, 6146, 42364, 66779, 9135, 52497, 37945, 55865, 47176, 42344, 46826, 39656, 65448, 28494, 15704, 37479, 63652, 12364, 22484, 60256, 2177, 9894, 35218, 62794, 16706, 22299, 65175, 75787, 73632, 34749, 44202, 42282, 22572, 895, 64848, 34673, 7451, 19348, 56765, 71448, 52459, 37674, 73579, 11460, 22744, 23416, 3530, 23684, 42331, 11307, 60963, 56317, 1572, 69320, 71261, 64827, 21156, 35455, 63252, 53544, 22047, 52511, 52307, 19979, 13388, 51857, 21857, 25354, 10893, 19594, 55333, 5811, 1941, 12847, 69232, 52400, 20930, 66316, 74611, 72967, 53817, 23449, 72727, 59362, 48921, 21858, 69290, 74487, 75727, 19275, 45240, 52586, 9094, 71767, 65710, 21193, 63339, 18837, 53631, 3065, 47442, 41840, 75286, 22996, 5792, 72190, 35170, 35382, 23805, 9056, 16629, 63837, 74739, 75920, 19921, 48991, 18636, 13862, 2346, 75791, 56813, 16039, 43805, 53279, 63550, 21270, 28163, 60236, 62716, 21076, 10070, 22735, 37298, 56398, 43027, 39872, 65233, 19012, 71511, 7377, 20092, 56366, 3331, 21201, 16489, 33374, 21055, 22871, 828, 63870, 20962, 52192, 68767, 18076, 53626, 32031, 72576, 13354, 55890, 59330, 20469, 69011, 58321, 41799, 1497, 35311, 42485, 13678, 23111, 66163, 56548, 18895, 26082, 65838, 47227, 56587, 60815, 12122, 56477, 7439, 65330, 35433, 41800, 17781, 13568, 28384, 67413, 56810, 63162, 12901, 42976, 2189, 34671, 23224, 25314, 39411, 45153, 66889, 23157, 49709, 10898, 2217, 5887, 27950, 10583, 21755, 74667, 25345, 27786, 49636, 73278, 72598, 36419, 19332, 28285, 63601, 23048, 47877, 44299, 15407, 68979, 52599, 71669, 2207, 44854, 76327, 953, 20922, 62826, 7446, 28164, 2455, 3024, 37141, 60378, 54679, 56851, 60079, 56278, 43054, 52248, 63210, 62237, 20138, 56322, 26169, 19897, 54879, 13838, 2873, 19068, 71842, 13536, 37159, 16735, 19515, 18451, 64531, 19904, 37586, 920, 17705, 26556, 66385, 18679, 41953, 3551, 9892, 20964, 4414, 2966, 22526, 22982, 3324, 74631, 65594, 63170, 49966, 55551, 54771, 63562, 61069, 35101, 1389, 60620, 26004, 28343, 65595, 34293, 11179, 49662, 3791, 44304, 74919, 39841, 63690, 18422, 32462, 37864, 22544, 59390, 42166, 75831, 74460, 22332, 15707, 15850, 24337, 41853, 39605, 22799, 4252, 3523, 4392, 72550, 18898, 74733, 59337, 49961, 10816, 36741, 55851, 48961, 64097, 19380, 76082, 28086, 49799, 10809, 19647, 20294, 2157, 22110, 55406, 44944, 66075, 22087, 52625, 47218, 60434, 63738, 24416, 65093, 43436, 22595, 18792, 22149, 46849, 28374, 29579, 67299, 23572, 16719, 63650, 37316, 60230, 5874, 53906, 68950, 33270, 29508, 56291, 53762, 1084, 66094, 53494, 64206, 10579, 29771, 3484, 64195, 32364, 75379, 1981, 39870, 17775, 66629, 68495, 48957, 49807, 75526, 40776, 23380, 36738, 53359, 19578, 35791, 20127, 13533, 63148, 74686, 34372, 18536, 55284, 76218, 32082, 25991, 46758, 73402, 53381, 74977, 18271, 855, 60799, 10493, 65625, 3385, 41598, 34156, 34119, 27441, 9664, 4301, 73389, 7347, 43801, 76391, 62790, 28173, 21267, 49601, 30452, 61051, 53301, 40091, 64541, 13830, 1801, 62713, 35229, 53551, 32027, 22067, 75612, 53743, 66319, 69040, 49790, 32170, 65976, 2901, 34724, 42186, 65151, 26150, 66405, 15894, 55841, 74077, 55634, 64766, 18383, 66985, 47915, 23658, 13711, 23176, 63966, 68729, 64372, 28529, 32452, 69195, 1416, 39017, 32075, 35087, 19383, 65424, 2846, 23609, 2248, 36809, 1598, 16499, 11141, 13088, 43414, 43736, 48987, 29440, 17974, 49748, 40280, 47984, 12967, 4449, 11305, 3495, 21208, 62730, 36465, 23780, 5351, 5280, 20101, 18280, 26116, 47939, 46791, 5906, 26030, 40079, 64720, 16715, 55749, 49620, 17893, 74381, 23585, 22372, 18348, 63807, 31600, 39842, 13393, 43191, 31911, 66718, 2334, 47187, 69233, 64756, 65828, 72408, 66364, 52271, 20949, 34969, 36484, 73742, 69114, 60462, 60578, 66136, 72157, 5359, 8294, 22797, 65836, 13466, 35000, 53933, 53297, 1667, 35447, 75567, 76386, 47228, 60403, 18888, 53923, 75914, 72626, 24351, 71318, 28574, 35349, 49089, 68520, 18736, 1722, 49707, 66574, 15211, 36763, 43735, 54494, 72782, 15914, 39645, 64216, 73798, 40771, 68795, 64364, 36044, 65296, 2206, 53835, 12279, 22822, 68749, 35173, 10612, 17772, 16814, 68710, 19418, 56666, 15844, 41841, 35003, 68447, 20371, 13391, 58431, 39148, 9577, 55304, 39359, 44954, 9799, 65840, 71380, 28366, 2108, 18373, 35393, 17753, 56604, 23127, 53984, 37608, 47393, 39452, 7429, 19030, 67197, 54858, 1381, 27897, 31962, 68721, 52176, 2889, 42986, 43537, 26216, 71528, 38032, 37312, 66428, 71691, 23467, 10941, 64946, 39003, 3178, 13174, 52305, 69277, 22301, 42397, 5868, 16710, 4700, 26543, 68709, 28314, 43583, 5885, 39767, 60179, 19455, 13164, 51851, 12287, 35164, 9126, 63759, 71875, 65321, 23337, 1286, 28187, 60402, 56409, 36050, 63614, 39084, 71678, 20227, 7283, 66523, 12836, 19532, 47923, 13741, 18374, 65626, 19075, 43138, 12603, 44930, 32962, 43182, 55384, 18961, 56729, 74165, 66667, 71992, 75108, 23260, 19946, 41846, 43569, 36228, 62847, 37542, 64810, 56475, 12227, 58178, 19438, 18041, 1173, 43482, 32127, 43750, 46828, 23649, 53576, 4271, 60647, 58454, 55708, 3535, 32096, 71695, 34919, 8733, 39352, 59096, 67345, 47502, 63171, 3492, 47036, 75328, 27975, 1500, 62215, 53401, 60338, 19882, 59347, 36070, 36211, 65195, 952, 39888, 55359, 76446, 42448, 43678, 42350, 73391, 52546, 2897, 37872, 39147, 69375, 35430, 13205, 65221, 36662, 35376, 39333, 49558, 65085, 1962, 39234, 19951, 53432, 12420, 36219, 34898, 69321, 66443, 37455, 26278, 2122, 16589, 24328, 22271, 66063, 21183, 2357, 21751, 22198, 43118, 36343, 63173, 36309, 22601, 43825, 22552, 34868, 50086, 39883, 34711, 42999, 72913, 15793, 55560, 36811, 22762, 35069, 55529, 55751, 22787, 74411, 19729, 21749, 18560, 20179, 26007, 54877, 46810, 56883, 43604, 41790, 10529, 10842, 21296, 53313, 28035, 26153, 3456, 55898, 43144, 53460, 37138, 53573, 15855, 65550, 60267, 22322, 10743, 65589, 17951, 28185, 15956, 39112, 74966, 28140, 15769, 69224, 2339, 47174, 56268, 76462, 33371, 17935, 3317, 18163, 44925, 66848, 13220, 17777, 54732, 35171, 12167, 64270, 23211, 40735, 73046, 2394, 43121, 68491, 13569, 22516, 19044, 54029, 75736, 44950, 3401, 20393, 43235, 15665, 13323, 13963, 12123, 18249, 63910, 49647, 35317, 1967, 45209, 36318, 49855, 75377, 16566, 58452, 55492, 18634, 6157, 21151, 2092, 20364, 44325, 25250, 16845, 63620, 34326, 61035, 65570, 19090, 22794, 62831, 43547, 53398, 47861, 28481, 41117, 76208, 63479, 1504, 55637, 41796, 60556, 72672, 15719, 23774, 39880, 52998, 69041, 43101, 34114, 22337, 1990, 11120, 65246, 37690, 43226, 64497, 34650, 62364, 35111, 10779, 52488, 39781, 18033, 63120, 20402, 13665, 18226, 2067, 20454, 35300, 55871, 53017, 40911, 55268, 68328, 13151, 34796, 54128, 34841, 43155, 60030, 16553, 54476, 56659, 20953, 41877, 65363, 19668, 35146, 18019, 73864, 29703, 39457, 6186, 23560, 18370, 2261, 10851, 63755, 62902, 23612, 26175, 38954, 1902, 28484, 75647, 34320, 28572, 47085, 15226, 63397, 65530, 60626, 53949, 37830, 7260, 47999, 68741, 75825, 7268, 12163, 69261, 69130, 58944, 72309, 28360, 44080, 52609, 3490, 43190, 39582, 29384, 16524, 34755, 21197, 75824), '0.00', True, '1/2327/%', True, '1/2327/%', ('waiting', 'confirmed', 'partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL)) AND ("stock_move"."state" in %s))' with params: [(22208, 13403, 21501, 26054, 62259, 64085, 30488, 7430, 3096, 64535, 7330, 47168, 24401, 20129, 66897, 47584, 23468, 72972, 65115, 71347, 39064, 45150, 69271, 55724, 63406, 18121, 39906, 23188, 56769, 63714, 21771, 11328, 34619, 16677, 15714, 52566, 65110, 3497, 20894, 61062, 55790, 7326, 1167, 47093, 26099, 60159, 33139, 1064, 53397, 52443, 41904, 63465, 18017, 62767, 26180, 10781, 63310, 73409, 54851, 73761, 13254, 76367, 52964, 20235, 21174, 49036, 11661, 10985, 76457, 63122, 38998, 1225, 21209, 49891, 34645, 47976, 44823, 18022, 39477, 46830, 36473, 65851, 29526, 39394, 30470, 55909, 47560, 60550, 40773, 1284, 75984, 22841, 36170, 42947, 63769, 4591, 1835, 33210, 22904, 16801, 68167, 23284, 23587, 23425, 43362, 1646, 34986, 40311, 20125, 47864, 69423, 32067, 15831, 40289, 43080, 63539, 66164, 39913, 5284, 44853, 29356, 6146, 42364, 66779, 9135, 52497, 37945, 55865, 47176, 42344, 46826, 39656, 65448, 28494, 15704, 37479, 63652, 12364, 22484, 60256, 2177, 9894, 35218, 62794, 16706, 22299, 65175, 75787, 73632, 34749, 44202, 42282, 22572, 895, 64848, 34673, 7451, 19348, 56765, 71448, 52459, 37674, 73579, 11460, 22744, 23416, 3530, 23684, 42331, 11307, 60963, 56317, 1572, 69320, 71261, 64827, 21156, 35455, 63252, 53544, 22047, 52511, 52307, 19979, 13388, 51857, 21857, 25354, 10893, 19594, 55333, 5811, 1941, 12847, 69232, 52400, 20930, 66316, 74611, 72967, 53817, 23449, 72727, 59362, 48921, 21858, 69290, 74487, 75727, 19275, 45240, 52586, 9094, 71767, 65710, 21193, 63339, 18837, 53631, 3065, 47442, 41840, 75286, 22996, 5792, 72190, 35170, 35382, 23805, 9056, 16629, 63837, 74739, 75920, 19921, 48991, 18636, 13862, 2346, 75791, 56813, 16039, 43805, 53279, 63550, 21270, 28163, 60236, 62716, 21076, 10070, 22735, 37298, 56398, 43027, 39872, 65233, 19012, 71511, 7377, 20092, 56366, 3331, 21201, 16489, 33374, 21055, 22871, 828, 63870, 20962, 52192, 68767, 18076, 53626, 32031, 72576, 13354, 55890, 59330, 20469, 69011, 58321, 41799, 1497, 35311, 42485, 13678, 23111, 66163, 56548, 18895, 26082, 65838, 47227, 56587, 60815, 12122, 56477, 7439, 65330, 35433, 41800, 17781, 13568, 28384, 67413, 56810, 63162, 12901, 42976, 2189, 34671, 23224, 25314, 39411, 45153, 66889, 23157, 49709, 10898, 2217, 5887, 27950, 10583, 21755, 74667, 25345, 27786, 49636, 73278, 72598, 36419, 19332, 28285, 63601, 23048, 47877, 44299, 15407, 68979, 52599, 71669, 2207, 44854, 76327, 953, 20922, 62826, 7446, 28164, 2455, 3024, 37141, 60378, 54679, 56851, 60079, 56278, 43054, 52248, 63210, 62237, 20138, 56322, 26169, 19897, 54879, 13838, 2873, 19068, 71842, 13536, 37159, 16735, 19515, 18451, 64531, 19904, 37586, 920, 17705, 26556, 66385, 18679, 41953, 3551, 9892, 20964, 4414, 2966, 22526, 22982, 3324, 74631, 65594, 63170, 49966, 55551, 54771, 63562, 61069, 35101, 1389, 60620, 26004, 28343, 65595, 34293, 11179, 49662, 3791, 44304, 74919, 39841, 63690, 18422, 32462, 37864, 22544, 59390, 42166, 75831, 74460, 22332, 15707, 15850, 24337, 41853, 39605, 22799, 4252, 3523, 4392, 72550, 18898, 74733, 59337, 49961, 10816, 36741, 55851, 48961, 64097, 19380, 76082, 28086, 49799, 10809, 19647, 20294, 2157, 22110, 55406, 44944, 66075, 22087, 52625, 47218, 60434, 63738, 24416, 65093, 43436, 22595, 18792, 22149, 46849, 28374, 29579, 67299, 23572, 16719, 63650, 37316, 60230, 5874, 53906, 68950, 33270, 29508, 56291, 53762, 1084, 66094, 53494, 64206, 10579, 29771, 3484, 64195, 32364, 75379, 1981, 39870, 17775, 66629, 68495, 48957, 49807, 75526, 40776, 23380, 36738, 53359, 19578, 35791, 20127, 13533, 63148, 74686, 34372, 18536, 55284, 76218, 32082, 25991, 46758, 73402, 53381, 74977, 18271, 855, 60799, 10493, 65625, 3385, 41598, 34156, 34119, 27441, 9664, 4301, 73389, 7347, 43801, 76391, 62790, 28173, 21267, 49601, 30452, 61051, 53301, 40091, 64541, 13830, 1801, 62713, 35229, 53551, 32027, 22067, 75612, 53743, 66319, 69040, 49790, 32170, 65976, 2901, 34724, 42186, 65151, 26150, 66405, 15894, 55841, 74077, 55634, 64766, 18383, 66985, 47915, 23658, 13711, 23176, 63966, 68729, 64372, 28529, 32452, 69195, 1416, 39017, 32075, 35087, 19383, 65424, 2846, 23609, 2248, 36809, 1598, 16499, 11141, 13088, 43414, 43736, 48987, 29440, 17974, 49748, 40280, 47984, 12967, 4449, 11305, 3495, 21208, 62730, 36465, 23780, 5351, 5280, 20101, 18280, 26116, 47939, 46791, 5906, 26030, 40079, 64720, 16715, 55749, 49620, 17893, 74381, 23585, 22372, 18348, 63807, 31600, 39842, 13393, 43191, 31911, 66718, 2334, 47187, 69233, 64756, 65828, 72408, 66364, 52271, 20949, 34969, 36484, 73742, 69114, 60462, 60578, 66136, 72157, 5359, 8294, 22797, 65836, 13466, 35000, 53933, 53297, 1667, 35447, 75567, 76386, 47228, 60403, 18888, 53923, 75914, 72626, 24351, 71318, 28574, 35349, 49089, 68520, 18736, 1722, 49707, 66574, 15211, 36763, 43735, 54494, 72782, 15914, 39645, 64216, 73798, 40771, 68795, 64364, 36044, 65296, 2206, 53835, 12279, 22822, 68749, 35173, 10612, 17772, 16814, 68710, 19418, 56666, 15844, 41841, 35003, 68447, 20371, 13391, 58431, 39148, 9577, 55304, 39359, 44954, 9799, 65840, 71380, 28366, 2108, 18373, 35393, 17753, 56604, 23127, 53984, 37608, 47393, 39452, 7429, 19030, 67197, 54858, 1381, 27897, 31962, 68721, 52176, 2889, 42986, 43537, 26216, 71528, 38032, 37312, 66428, 71691, 23467, 10941, 64946, 39003, 3178, 13174, 52305, 69277, 22301, 42397, 5868, 16710, 4700, 26543, 68709, 28314, 43583, 5885, 39767, 60179, 19455, 13164, 51851, 12287, 35164, 9126, 63759, 71875, 65321, 23337, 1286, 28187, 60402, 56409, 36050, 63614, 39084, 71678, 20227, 7283, 66523, 12836, 19532, 47923, 13741, 18374, 65626, 19075, 43138, 12603, 44930, 32962, 43182, 55384, 18961, 56729, 74165, 66667, 71992, 75108, 23260, 19946, 41846, 43569, 36228, 62847, 37542, 64810, 56475, 12227, 58178, 19438, 18041, 1173, 43482, 32127, 43750, 46828, 23649, 53576, 4271, 60647, 58454, 55708, 3535, 32096, 71695, 34919, 8733, 39352, 59096, 67345, 47502, 63171, 3492, 47036, 75328, 27975, 1500, 62215, 53401, 60338, 19882, 59347, 36070, 36211, 65195, 952, 39888, 55359, 76446, 42448, 43678, 42350, 73391, 52546, 2897, 37872, 39147, 69375, 35430, 13205, 65221, 36662, 35376, 39333, 49558, 65085, 1962, 39234, 19951, 53432, 12420, 36219, 34898, 69321, 66443, 37455, 26278, 2122, 16589, 24328, 22271, 66063, 21183, 2357, 21751, 22198, 43118, 36343, 63173, 36309, 22601, 43825, 22552, 34868, 50086, 39883, 34711, 42999, 72913, 15793, 55560, 36811, 22762, 35069, 55529, 55751, 22787, 74411, 19729, 21749, 18560, 20179, 26007, 54877, 46810, 56883, 43604, 41790, 10529, 10842, 21296, 53313, 28035, 26153, 3456, 55898, 43144, 53460, 37138, 53573, 15855, 65550, 60267, 22322, 10743, 65589, 17951, 28185, 15956, 39112, 74966, 28140, 15769, 69224, 2339, 47174, 56268, 76462, 33371, 17935, 3317, 18163, 44925, 66848, 13220, 17777, 54732, 35171, 12167, 64270, 23211, 40735, 73046, 2394, 43121, 68491, 13569, 22516, 19044, 54029, 75736, 44950, 3401, 20393, 43235, 15665, 13323, 13963, 12123, 18249, 63910, 49647, 35317, 1967, 45209, 36318, 49855, 75377, 16566, 58452, 55492, 18634, 6157, 21151, 2092, 20364, 44325, 25250, 16845, 63620, 34326, 61035, 65570, 19090, 22794, 62831, 43547, 53398, 47861, 28481, 41117, 76208, 63479, 1504, 55637, 41796, 60556, 72672, 15719, 23774, 39880, 52998, 69041, 43101, 34114, 22337, 1990, 11120, 65246, 37690, 43226, 64497, 34650, 62364, 35111, 10779, 52488, 39781, 18033, 63120, 20402, 13665, 18226, 2067, 20454, 35300, 55871, 53017, 40911, 55268, 68328, 13151, 34796, 54128, 34841, 43155, 60030, 16553, 54476, 56659, 20953, 41877, 65363, 19668, 35146, 18019, 73864, 29703, 39457, 6186, 23560, 18370, 2261, 10851, 63755, 62902, 23612, 26175, 38954, 1902, 28484, 75647, 34320, 28572, 47085, 15226, 63397, 65530, 60626, 53949, 37830, 7260, 47999, 68741, 75825, 7268, 12163, 69261, 69130, 58944, 72309, 28360, 44080, 52609, 3490, 43190, 39582, 29384, 16524, 34755, 21197, 75824), '0.00', True, '1/2327/%', True, '1/2327/%', ('waiting', 'confirmed', 'partially_available', 'assigned'), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL))' with params: [(22208, 13403, 21501, 26054, 62259, 64085, 30488, 7430, 3096, 64535, 7330, 47168, 24401, 20129, 66897, 47584, 23468, 72972, 65115, 71347, 39064, 45150, 69271, 55724, 63406, 18121, 39906, 23188, 56769, 63714, 21771, 11328, 34619, 16677, 15714, 52566, 65110, 3497, 20894, 61062, 55790, 7326, 1167, 47093, 26099, 60159, 33139, 1064, 53397, 52443, 41904, 63465, 18017, 62767, 26180, 10781, 63310, 73409, 54851, 73761, 13254, 76367, 52964, 20235, 21174, 49036, 11661, 10985, 76457, 63122, 38998, 1225, 21209, 49891, 34645, 47976, 44823, 18022, 39477, 46830, 36473, 65851, 29526, 39394, 30470, 55909, 47560, 60550, 40773, 1284, 75984, 22841, 36170, 42947, 63769, 4591, 1835, 33210, 22904, 16801, 68167, 23284, 23587, 23425, 43362, 1646, 34986, 40311, 20125, 47864, 69423, 32067, 15831, 40289, 43080, 63539, 66164, 39913, 5284, 44853, 29356, 6146, 42364, 66779, 9135, 52497, 37945, 55865, 47176, 42344, 46826, 39656, 65448, 28494, 15704, 37479, 63652, 12364, 22484, 60256, 2177, 9894, 35218, 62794, 16706, 22299, 65175, 75787, 73632, 34749, 44202, 42282, 22572, 895, 64848, 34673, 7451, 19348, 56765, 71448, 52459, 37674, 73579, 11460, 22744, 23416, 3530, 23684, 42331, 11307, 60963, 56317, 1572, 69320, 71261, 64827, 21156, 35455, 63252, 53544, 22047, 52511, 52307, 19979, 13388, 51857, 21857, 25354, 10893, 19594, 55333, 5811, 1941, 12847, 69232, 52400, 20930, 66316, 74611, 72967, 53817, 23449, 72727, 59362, 48921, 21858, 69290, 74487, 75727, 19275, 45240, 52586, 9094, 71767, 65710, 21193, 63339, 18837, 53631, 3065, 47442, 41840, 75286, 22996, 5792, 72190, 35170, 35382, 23805, 9056, 16629, 63837, 74739, 75920, 19921, 48991, 18636, 13862, 2346, 75791, 56813, 16039, 43805, 53279, 63550, 21270, 28163, 60236, 62716, 21076, 10070, 22735, 37298, 56398, 43027, 39872, 65233, 19012, 71511, 7377, 20092, 56366, 3331, 21201, 16489, 33374, 21055, 22871, 828, 63870, 20962, 52192, 68767, 18076, 53626, 32031, 72576, 13354, 55890, 59330, 20469, 69011, 58321, 41799, 1497, 35311, 42485, 13678, 23111, 66163, 56548, 18895, 26082, 65838, 47227, 56587, 60815, 12122, 56477, 7439, 65330, 35433, 41800, 17781, 13568, 28384, 67413, 56810, 63162, 12901, 42976, 2189, 34671, 23224, 25314, 39411, 45153, 66889, 23157, 49709, 10898, 2217, 5887, 27950, 10583, 21755, 74667, 25345, 27786, 49636, 73278, 72598, 36419, 19332, 28285, 63601, 23048, 47877, 44299, 15407, 68979, 52599, 71669, 2207, 44854, 76327, 953, 20922, 62826, 7446, 28164, 2455, 3024, 37141, 60378, 54679, 56851, 60079, 56278, 43054, 52248, 63210, 62237, 20138, 56322, 26169, 19897, 54879, 13838, 2873, 19068, 71842, 13536, 37159, 16735, 19515, 18451, 64531, 19904, 37586, 920, 17705, 26556, 66385, 18679, 41953, 3551, 9892, 20964, 4414, 2966, 22526, 22982, 3324, 74631, 65594, 63170, 49966, 55551, 54771, 63562, 61069, 35101, 1389, 60620, 26004, 28343, 65595, 34293, 11179, 49662, 3791, 44304, 74919, 39841, 63690, 18422, 32462, 37864, 22544, 59390, 42166, 75831, 74460, 22332, 15707, 15850, 24337, 41853, 39605, 22799, 4252, 3523, 4392, 72550, 18898, 74733, 59337, 49961, 10816, 36741, 55851, 48961, 64097, 19380, 76082, 28086, 49799, 10809, 19647, 20294, 2157, 22110, 55406, 44944, 66075, 22087, 52625, 47218, 60434, 63738, 24416, 65093, 43436, 22595, 18792, 22149, 46849, 28374, 29579, 67299, 23572, 16719, 63650, 37316, 60230, 5874, 53906, 68950, 33270, 29508, 56291, 53762, 1084, 66094, 53494, 64206, 10579, 29771, 3484, 64195, 32364, 75379, 1981, 39870, 17775, 66629, 68495, 48957, 49807, 75526, 40776, 23380, 36738, 53359, 19578, 35791, 20127, 13533, 63148, 74686, 34372, 18536, 55284, 76218, 32082, 25991, 46758, 73402, 53381, 74977, 18271, 855, 60799, 10493, 65625, 3385, 41598, 34156, 34119, 27441, 9664, 4301, 73389, 7347, 43801, 76391, 62790, 28173, 21267, 49601, 30452, 61051, 53301, 40091, 64541, 13830, 1801, 62713, 35229, 53551, 32027, 22067, 75612, 53743, 66319, 69040, 49790, 32170, 65976, 2901, 34724, 42186, 65151, 26150, 66405, 15894, 55841, 74077, 55634, 64766, 18383, 66985, 47915, 23658, 13711, 23176, 63966, 68729, 64372, 28529, 32452, 69195, 1416, 39017, 32075, 35087, 19383, 65424, 2846, 23609, 2248, 36809, 1598, 16499, 11141, 13088, 43414, 43736, 48987, 29440, 17974, 49748, 40280, 47984, 12967, 4449, 11305, 3495, 21208, 62730, 36465, 23780, 5351, 5280, 20101, 18280, 26116, 47939, 46791, 5906, 26030, 40079, 64720, 16715, 55749, 49620, 17893, 74381, 23585, 22372, 18348, 63807, 31600, 39842, 13393, 43191, 31911, 66718, 2334, 47187, 69233, 64756, 65828, 72408, 66364, 52271, 20949, 34969, 36484, 73742, 69114, 60462, 60578, 66136, 72157, 5359, 8294, 22797, 65836, 13466, 35000, 53933, 53297, 1667, 35447, 75567, 76386, 47228, 60403, 18888, 53923, 75914, 72626, 24351, 71318, 28574, 35349, 49089, 68520, 18736, 1722, 49707, 66574, 15211, 36763, 43735, 54494, 72782, 15914, 39645, 64216, 73798, 40771, 68795, 64364, 36044, 65296, 2206, 53835, 12279, 22822, 68749, 35173, 10612, 17772, 16814, 68710, 19418, 56666, 15844, 41841, 35003, 68447, 20371, 13391, 58431, 39148, 9577, 55304, 39359, 44954, 9799, 65840, 71380, 28366, 2108, 18373, 35393, 17753, 56604, 23127, 53984, 37608, 47393, 39452, 7429, 19030, 67197, 54858, 1381, 27897, 31962, 68721, 52176, 2889, 42986, 43537, 26216, 71528, 38032, 37312, 66428, 71691, 23467, 10941, 64946, 39003, 3178, 13174, 52305, 69277, 22301, 42397, 5868, 16710, 4700, 26543, 68709, 28314, 43583, 5885, 39767, 60179, 19455, 13164, 51851, 12287, 35164, 9126, 63759, 71875, 65321, 23337, 1286, 28187, 60402, 56409, 36050, 63614, 39084, 71678, 20227, 7283, 66523, 12836, 19532, 47923, 13741, 18374, 65626, 19075, 43138, 12603, 44930, 32962, 43182, 55384, 18961, 56729, 74165, 66667, 71992, 75108, 23260, 19946, 41846, 43569, 36228, 62847, 37542, 64810, 56475, 12227, 58178, 19438, 18041, 1173, 43482, 32127, 43750, 46828, 23649, 53576, 4271, 60647, 58454, 55708, 3535, 32096, 71695, 34919, 8733, 39352, 59096, 67345, 47502, 63171, 3492, 47036, 75328, 27975, 1500, 62215, 53401, 60338, 19882, 59347, 36070, 36211, 65195, 952, 39888, 55359, 76446, 42448, 43678, 42350, 73391, 52546, 2897, 37872, 39147, 69375, 35430, 13205, 65221, 36662, 35376, 39333, 49558, 65085, 1962, 39234, 19951, 53432, 12420, 36219, 34898, 69321, 66443, 37455, 26278, 2122, 16589, 24328, 22271, 66063, 21183, 2357, 21751, 22198, 43118, 36343, 63173, 36309, 22601, 43825, 22552, 34868, 50086, 39883, 34711, 42999, 72913, 15793, 55560, 36811, 22762, 35069, 55529, 55751, 22787, 74411, 19729, 21749, 18560, 20179, 26007, 54877, 46810, 56883, 43604, 41790, 10529, 10842, 21296, 53313, 28035, 26153, 3456, 55898, 43144, 53460, 37138, 53573, 15855, 65550, 60267, 22322, 10743, 65589, 17951, 28185, 15956, 39112, 74966, 28140, 15769, 69224, 2339, 47174, 56268, 76462, 33371, 17935, 3317, 18163, 44925, 66848, 13220, 17777, 54732, 35171, 12167, 64270, 23211, 40735, 73046, 2394, 43121, 68491, 13569, 22516, 19044, 54029, 75736, 44950, 3401, 20393, 43235, 15665, 13323, 13963, 12123, 18249, 63910, 49647, 35317, 1967, 45209, 36318, 49855, 75377, 16566, 58452, 55492, 18634, 6157, 21151, 2092, 20364, 44325, 25250, 16845, 63620, 34326, 61035, 65570, 19090, 22794, 62831, 43547, 53398, 47861, 28481, 41117, 76208, 63479, 1504, 55637, 41796, 60556, 72672, 15719, 23774, 39880, 52998, 69041, 43101, 34114, 22337, 1990, 11120, 65246, 37690, 43226, 64497, 34650, 62364, 35111, 10779, 52488, 39781, 18033, 63120, 20402, 13665, 18226, 2067, 20454, 35300, 55871, 53017, 40911, 55268, 68328, 13151, 34796, 54128, 34841, 43155, 60030, 16553, 54476, 56659, 20953, 41877, 65363, 19668, 35146, 18019, 73864, 29703, 39457, 6186, 23560, 18370, 2261, 10851, 63755, 62902, 23612, 26175, 38954, 1902, 28484, 75647, 34320, 28572, 47085, 15226, 63397, 65530, 60626, 53949, 37830, 7260, 47999, 68741, 75825, 7268, 12163, 69261, 69130, 58944, 72309, 28360, 44080, 52609, 3490, 43190, 39582, 29384, 16524, 34755, 21197, 75824), '0.00', True, '1/2327/%', True, '1/2327/%', ('waiting', 'confirmed', 'partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL))' with params: [(12843, 18843, 47764, 53001, 30440, 61044, 19834, 40279, 76252, 56875, 64349, 1948, 65839, 38498, 68785, 39411, 67005, 16666, 37657, 8771, 53769, 56664, 28355, 53839, 6099, 19645, 23628, 75750, 63263, 63558, 60626, 8792, 69087, 17993, 63821, 69001, 20070, 7321, 75370, 56849, 17603, 43859, 75924, 2221, 52179, 38962, 21153, 54024, 6227, 12242, 3382, 4575, 52982, 42275, 32181, 64109, 70396, 8672, 9636, 66421, 24383, 44742, 53555, 37624, 22854, 34155, 24425, 19578, 26052, 34974, 39220, 65507, 40131, 47898, 73009, 36309, 47841, 71372, 4564, 56480, 34945, 39926, 66072, 39665, 69176, 49001, 52079, 24249, 62266, 2375, 6079, 2090, 12115, 74131, 13497, 18952, 8799, 74126, 1877, 32066, 40117, 8695, 66556, 45211, 63146, 65164, 36131, 55548, 37352, 44228, 12220, 18472, 9138, 39576, 23087, 10630, 60357, 49579, 1934, 1838, 7313, 53412, 3788, 39845, 23760, 7344, 22532, 17955, 18266, 43099, 63764, 54485, 54116, 56312, 43208, 22617, 38946, 23818, 51883, 35008, 20203, 65408, 24157, 38248, 72586, 34847, 53994, 19029, 1071, 12880, 20083, 36212, 54446, 62903, 52195, 42322, 54085, 34591, 3216, 39015, 22179, 5910, 71861, 76015, 1717, 43371, 13871, 53525, 37384, 22207, 64233, 13788, 12391, 62792, 22183, 65295, 44233, 33156, 22160, 10478, 42099, 63006, 68752, 40033, 10838, 12241, 30485, 37921, 67374, 47468, 37267, 65495, 49626, 75636, 68318, 59145, 7441, 19493, 12591, 13901, 44973, 3499, 71701, 15828, 71831, 74121, 63914, 59413, 34678, 75288, 4461, 69378, 65208, 12967, 9661, 64243, 52313, 75871, 2276, 73097, 12299, 4543, 24243, 58427, 75510, 25970, 26129, 47042, 22064, 1606, 19414, 45152, 56620, 43121, 53462, 34882, 64785, 36369, 34748, 41767, 71943, 22266, 52142, 43529, 7406, 41587, 27954, 18419, 12213, 22347, 43464, 64068, 34613, 37563, 15851, 29245, 9664, 66169, 22442, 40185, 42462, 52934, 1745, 74357, 55414, 38965, 19298, 26522, 34794, 18958, 1454, 43572, 68331, 55757, 52393, 19542, 42978, 2180, 72272, 68497, 34773, 17872, 53574, 18072, 35297, 15125, 75514, 23301, 63141, 47546, 34679, 44917, 23669, 6175, 20279, 20204, 62212, 62942, 73990, 31590, 73817, 21859, 74238, 22518, 75063, 12332, 73866, 37902, 63777, 3074, 62302, 55609, 1886, 888, 56805, 53604, 72186, 35379, 54782, 66789, 19462, 43830, 13305, 39534, 20679, 43190, 38993, 7364, 19730, 34148, 52589, 75182, 35471, 43314, 23600, 76257, 43553, 55762, 45147, 18130, 20928, 3277, 3018, 39399, 22544, 2343, 35260, 73625, 69178, 43497, 3506, 23124, 63657, 22365, 47950, 54727, 43068, 35056, 20039, 37548, 1854, 62354, 13035, 36431, 26290, 53480, 65497, 39405, 18725, 6100, 13307, 72530, 58434, 43010, 75709, 1673, 22026, 63023, 20266, 3366, 44951, 3066, 2146, 5814, 68200, 7383, 72804, 66661, 18948, 66176, 29722, 55829, 53030, 35123, 13220, 20269, 48978, 66560, 41969, 56612, 48996, 23431, 63963, 13172, 15904, 42357, 47892, 8260, 8263, 60800, 63565, 43076, 23204, 75404, 63840, 43238, 37448, 49879, 6168, 63009, 39871, 33207, 32065, 43478, 16717, 5350, 4252, 7306, 65082, 60158, 71785, 29378, 75491, 76256, 23005, 39873, 64025, 71790, 71707, 13617, 43539, 59029, 33255, 36476, 18726, 35184, 23532, 33189, 15622, 37691, 47955, 52390, 16545, 22849, 22214, 69261, 38948, 65141, 13500, 19262, 3254, 21183, 65083, 2293, 4496, 32001, 28231, 38956, 60559, 7289, 74494, 12315, 36423, 16504, 55944, 56412, 41821, 58433, 63139, 52329, 72730, 56469, 34688, 32097, 54534, 63800, 39305, 9070, 23813, 47540, 55648, 35396, 54051, 47223, 30401, 72606, 47741, 12556, 47449, 56438, 63885, 15211, 52416, 39114, 68833, 16034, 52631, 9911, 53177, 2188, 36066, 6137, 15898, 43666, 2207, 49887, 41606, 12314, 23335, 47993, 1942, 43551, 3764, 21218, 13314, 44142, 12927, 60239, 62293, 22684, 59088, 16739, 39566, 43672, 37356, 60294, 2857, 47871, 8644, 39408, 64815, 13126, 69350, 76444, 17816, 74177, 65168, 46854, 27457, 1487, 42021, 2011, 64183, 28009, 47253, 19988, 3481, 54125, 2069, 56365, 9119, 24210, 50118, 49684, 75885, 72999, 12523, 55470, 37577, 34713, 56912, 49839, 30384, 22549, 37845, 53430, 72074, 23396, 18080, 3789, 40321, 47098, 59147, 52145, 31992, 13129, 18776, 20209, 1726, 63167, 22354, 63978, 68322, 51831, 32032, 39217, 29522, 75974, 22472, 49666, 63137, 60351, 19551, 53573, 53490, 44238, 23762, 4581, 13098, 55525, 71304, 24181, 5859, 10984, 15892, 74288, 39829, 34564, 58435, 21747, 49007, 18491, 47953, 60431, 59059, 13203, 35063, 52321, 18301, 37639, 68203, 4351, 22408, 39116, 52316, 44891, 71857, 43341, 56375, 39372, 56444, 12123, 66699, 75371, 40118, 18502, 67187, 16493, 18568, 34805, 47936, 26104, 46873, 12406, 47074, 49577, 46783, 3769, 66869, 1116, 47909, 28360, 13187, 31597, 18575, 3558, 74042, 60423, 39451, 49861, 37538, 23093, 23392, 72892, 65542, 15417, 33185, 6225, 45182, 3447, 38963, 23318, 36325, 65723, 62982, 58986, 945, 49060, 52626, 21241, 37844, 64710, 35796, 32979, 34424, 47386, 54134, 26000, 2117, 23527, 1539, 37861, 17839, 36128, 65611, 55692, 34877, 54513, 49042, 53024, 42980, 37539, 10885, 23810, 68169, 67284, 37831, 64990, 56559, 68517, 36705, 69007, 71278, 58485, 34652, 66596, 74023, 22456, 34619, 59356, 64372, 63643, 23340, 22776, 73027, 70426, 6219, 26568, 44942, 66738, 19276, 7350, 33200, 54889, 19925, 34880, 48965, 34388, 3353, 27426, 24369, 15483, 19024, 32169, 52938, 52368, 53602, 60649, 23173, 49033, 34792, 53534, 9654, 58836, 22632, 10615, 43486, 22319, 31601, 20476, 43290, 37469, 24191, 1850, 22369, 1792, 26585, 21088, 63754, 12321, 37612, 18620, 64304, 26534, 22022, 2083, 23235, 5309, 68286, 55833, 18865, 31602, 3173, 60652, 47263, 15722, 2093, 63611, 11168, 43985, 75687, 19090, 7429, 33127, 75127, 41982, 10850, 10576, 41109, 40223, 22735, 13205, 8635, 43973, 48945, 69071, 7345, 34647, 9631, 70393, 46655, 17891, 38024, 66667, 65798, 18163, 9898, 22360, 16796, 22683, 68816, 26710, 49793, 73543, 24344, 23486, 75714, 9628, 37338, 9928, 19680, 65195, 64055, 46846, 13895, 2420, 49673, 55546, 56554, 53122, 43595, 48952, 56688, 41911, 4476, 42004, 61476, 20938, 12957, 1605, 29555, 69287, 34906, 10522, 52460, 8690, 39157, 32152, 19325, 76462, 41013, 39994, 64977, 12969, 19604, 13309, 22370, 46746, 47488, 1727, 56683, 7284, 36703, 53017, 28218, 47986, 32954, 37339, 19832, 17762, 47251, 40907, 49741, 38758, 33294, 63584, 56910, 52447, 36201, 63419, 8732, 65159, 66985, 43967, 18136, 67298, 37597, 58428, 22051, 20251, 55839, 39308, 42305, 3776, 29451, 54870, 52110, 65007, 71781, 855, 22691, 67334, 49644, 53864, 60550, 22824, 36446, 65487, 23828, 16812, 59178, 23710, 4693, 2887, 8265, 75781, 68559, 67211, 26070, 71912, 15740, 65048, 18251, 41944, 62345, 48918, 19018, 42287, 44829, 19873, 45245, 21737, 13244, 7285, 29412, 12339, 19458, 49685, 66803, 55474, 6058, 19858, 75347, 47225, 67082, 19001, 23679, 60599, 63681, 29763, 24235, 64902, 43522, 74195, 1899, 13654, 74669, 74179, 18833, 37412, 72129, 22301, 65026, 23168, 9090, 41017, 68509, 13252, 71596, 73830, 2064, 10717, 3126, 44111, 28330, 31959, 36113, 10815, 52227, 63877, 18884, 55695, 3581, 65341, 27804, 54854, 65089, 10942, 39791, 56874, 52948, 19281, 56675, 60302, 53473, 28297, 23775, 1547, 64066, 12061, 22205, 64206, 23127, 47411, 66093, 40220, 36263, 6215, 65148, 19877, 66976, 66735, 67351, 4358, 10461, 22196, 35054, 56421, 65435, 22359, 28070, 29373, 18800, 62796, 65599, 39651, 29454, 13354, 2031, 3171, 70422, 26613, 26075, 12255, 39290, 43385, 21147, 60693, 36147, 23285, 52202, 63649, 60402, 11299, 22055, 37785, 74968, 32177, 40201, 50097, 17937, 13124, 2910, 45077, 962, 55485, 19391, 3642, 52957, 63843, 76476, 1600, 64759, 73694, 43601, 55529, 71759, 42328, 62246, 29170, 65472, 41949, 22614, 18652, 13570, 53280, 68998, 22202, 2944, 53289, 3370, 7166, 47923, 39670, 42071, 49814, 72322, 25815, 34872, 3188, 39266, 64740, 7271, 43027, 76349, 39937, 52408, 30376, 6212, 21150, 18418, 25270, 44322, 13721, 64394, 62725, 4493, 36111, 52146, 74135, 21505), '0.00', True, '1/2319/%', True, '1/2319/%', ('waiting', 'confirmed', 'partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL)) AND ("stock_move"."state" in %s))' with params: [(12843, 18843, 47764, 53001, 30440, 61044, 19834, 40279, 76252, 56875, 64349, 1948, 65839, 38498, 68785, 39411, 67005, 16666, 37657, 8771, 53769, 56664, 28355, 53839, 6099, 19645, 23628, 75750, 63263, 63558, 60626, 8792, 69087, 17993, 63821, 69001, 20070, 7321, 75370, 56849, 17603, 43859, 75924, 2221, 52179, 38962, 21153, 54024, 6227, 12242, 3382, 4575, 52982, 42275, 32181, 64109, 70396, 8672, 9636, 66421, 24383, 44742, 53555, 37624, 22854, 34155, 24425, 19578, 26052, 34974, 39220, 65507, 40131, 47898, 73009, 36309, 47841, 71372, 4564, 56480, 34945, 39926, 66072, 39665, 69176, 49001, 52079, 24249, 62266, 2375, 6079, 2090, 12115, 74131, 13497, 18952, 8799, 74126, 1877, 32066, 40117, 8695, 66556, 45211, 63146, 65164, 36131, 55548, 37352, 44228, 12220, 18472, 9138, 39576, 23087, 10630, 60357, 49579, 1934, 1838, 7313, 53412, 3788, 39845, 23760, 7344, 22532, 17955, 18266, 43099, 63764, 54485, 54116, 56312, 43208, 22617, 38946, 23818, 51883, 35008, 20203, 65408, 24157, 38248, 72586, 34847, 53994, 19029, 1071, 12880, 20083, 36212, 54446, 62903, 52195, 42322, 54085, 34591, 3216, 39015, 22179, 5910, 71861, 76015, 1717, 43371, 13871, 53525, 37384, 22207, 64233, 13788, 12391, 62792, 22183, 65295, 44233, 33156, 22160, 10478, 42099, 63006, 68752, 40033, 10838, 12241, 30485, 37921, 67374, 47468, 37267, 65495, 49626, 75636, 68318, 59145, 7441, 19493, 12591, 13901, 44973, 3499, 71701, 15828, 71831, 74121, 63914, 59413, 34678, 75288, 4461, 69378, 65208, 12967, 9661, 64243, 52313, 75871, 2276, 73097, 12299, 4543, 24243, 58427, 75510, 25970, 26129, 47042, 22064, 1606, 19414, 45152, 56620, 43121, 53462, 34882, 64785, 36369, 34748, 41767, 71943, 22266, 52142, 43529, 7406, 41587, 27954, 18419, 12213, 22347, 43464, 64068, 34613, 37563, 15851, 29245, 9664, 66169, 22442, 40185, 42462, 52934, 1745, 74357, 55414, 38965, 19298, 26522, 34794, 18958, 1454, 43572, 68331, 55757, 52393, 19542, 42978, 2180, 72272, 68497, 34773, 17872, 53574, 18072, 35297, 15125, 75514, 23301, 63141, 47546, 34679, 44917, 23669, 6175, 20279, 20204, 62212, 62942, 73990, 31590, 73817, 21859, 74238, 22518, 75063, 12332, 73866, 37902, 63777, 3074, 62302, 55609, 1886, 888, 56805, 53604, 72186, 35379, 54782, 66789, 19462, 43830, 13305, 39534, 20679, 43190, 38993, 7364, 19730, 34148, 52589, 75182, 35471, 43314, 23600, 76257, 43553, 55762, 45147, 18130, 20928, 3277, 3018, 39399, 22544, 2343, 35260, 73625, 69178, 43497, 3506, 23124, 63657, 22365, 47950, 54727, 43068, 35056, 20039, 37548, 1854, 62354, 13035, 36431, 26290, 53480, 65497, 39405, 18725, 6100, 13307, 72530, 58434, 43010, 75709, 1673, 22026, 63023, 20266, 3366, 44951, 3066, 2146, 5814, 68200, 7383, 72804, 66661, 18948, 66176, 29722, 55829, 53030, 35123, 13220, 20269, 48978, 66560, 41969, 56612, 48996, 23431, 63963, 13172, 15904, 42357, 47892, 8260, 8263, 60800, 63565, 43076, 23204, 75404, 63840, 43238, 37448, 49879, 6168, 63009, 39871, 33207, 32065, 43478, 16717, 5350, 4252, 7306, 65082, 60158, 71785, 29378, 75491, 76256, 23005, 39873, 64025, 71790, 71707, 13617, 43539, 59029, 33255, 36476, 18726, 35184, 23532, 33189, 15622, 37691, 47955, 52390, 16545, 22849, 22214, 69261, 38948, 65141, 13500, 19262, 3254, 21183, 65083, 2293, 4496, 32001, 28231, 38956, 60559, 7289, 74494, 12315, 36423, 16504, 55944, 56412, 41821, 58433, 63139, 52329, 72730, 56469, 34688, 32097, 54534, 63800, 39305, 9070, 23813, 47540, 55648, 35396, 54051, 47223, 30401, 72606, 47741, 12556, 47449, 56438, 63885, 15211, 52416, 39114, 68833, 16034, 52631, 9911, 53177, 2188, 36066, 6137, 15898, 43666, 2207, 49887, 41606, 12314, 23335, 47993, 1942, 43551, 3764, 21218, 13314, 44142, 12927, 60239, 62293, 22684, 59088, 16739, 39566, 43672, 37356, 60294, 2857, 47871, 8644, 39408, 64815, 13126, 69350, 76444, 17816, 74177, 65168, 46854, 27457, 1487, 42021, 2011, 64183, 28009, 47253, 19988, 3481, 54125, 2069, 56365, 9119, 24210, 50118, 49684, 75885, 72999, 12523, 55470, 37577, 34713, 56912, 49839, 30384, 22549, 37845, 53430, 72074, 23396, 18080, 3789, 40321, 47098, 59147, 52145, 31992, 13129, 18776, 20209, 1726, 63167, 22354, 63978, 68322, 51831, 32032, 39217, 29522, 75974, 22472, 49666, 63137, 60351, 19551, 53573, 53490, 44238, 23762, 4581, 13098, 55525, 71304, 24181, 5859, 10984, 15892, 74288, 39829, 34564, 58435, 21747, 49007, 18491, 47953, 60431, 59059, 13203, 35063, 52321, 18301, 37639, 68203, 4351, 22408, 39116, 52316, 44891, 71857, 43341, 56375, 39372, 56444, 12123, 66699, 75371, 40118, 18502, 67187, 16493, 18568, 34805, 47936, 26104, 46873, 12406, 47074, 49577, 46783, 3769, 66869, 1116, 47909, 28360, 13187, 31597, 18575, 3558, 74042, 60423, 39451, 49861, 37538, 23093, 23392, 72892, 65542, 15417, 33185, 6225, 45182, 3447, 38963, 23318, 36325, 65723, 62982, 58986, 945, 49060, 52626, 21241, 37844, 64710, 35796, 32979, 34424, 47386, 54134, 26000, 2117, 23527, 1539, 37861, 17839, 36128, 65611, 55692, 34877, 54513, 49042, 53024, 42980, 37539, 10885, 23810, 68169, 67284, 37831, 64990, 56559, 68517, 36705, 69007, 71278, 58485, 34652, 66596, 74023, 22456, 34619, 59356, 64372, 63643, 23340, 22776, 73027, 70426, 6219, 26568, 44942, 66738, 19276, 7350, 33200, 54889, 19925, 34880, 48965, 34388, 3353, 27426, 24369, 15483, 19024, 32169, 52938, 52368, 53602, 60649, 23173, 49033, 34792, 53534, 9654, 58836, 22632, 10615, 43486, 22319, 31601, 20476, 43290, 37469, 24191, 1850, 22369, 1792, 26585, 21088, 63754, 12321, 37612, 18620, 64304, 26534, 22022, 2083, 23235, 5309, 68286, 55833, 18865, 31602, 3173, 60652, 47263, 15722, 2093, 63611, 11168, 43985, 75687, 19090, 7429, 33127, 75127, 41982, 10850, 10576, 41109, 40223, 22735, 13205, 8635, 43973, 48945, 69071, 7345, 34647, 9631, 70393, 46655, 17891, 38024, 66667, 65798, 18163, 9898, 22360, 16796, 22683, 68816, 26710, 49793, 73543, 24344, 23486, 75714, 9628, 37338, 9928, 19680, 65195, 64055, 46846, 13895, 2420, 49673, 55546, 56554, 53122, 43595, 48952, 56688, 41911, 4476, 42004, 61476, 20938, 12957, 1605, 29555, 69287, 34906, 10522, 52460, 8690, 39157, 32152, 19325, 76462, 41013, 39994, 64977, 12969, 19604, 13309, 22370, 46746, 47488, 1727, 56683, 7284, 36703, 53017, 28218, 47986, 32954, 37339, 19832, 17762, 47251, 40907, 49741, 38758, 33294, 63584, 56910, 52447, 36201, 63419, 8732, 65159, 66985, 43967, 18136, 67298, 37597, 58428, 22051, 20251, 55839, 39308, 42305, 3776, 29451, 54870, 52110, 65007, 71781, 855, 22691, 67334, 49644, 53864, 60550, 22824, 36446, 65487, 23828, 16812, 59178, 23710, 4693, 2887, 8265, 75781, 68559, 67211, 26070, 71912, 15740, 65048, 18251, 41944, 62345, 48918, 19018, 42287, 44829, 19873, 45245, 21737, 13244, 7285, 29412, 12339, 19458, 49685, 66803, 55474, 6058, 19858, 75347, 47225, 67082, 19001, 23679, 60599, 63681, 29763, 24235, 64902, 43522, 74195, 1899, 13654, 74669, 74179, 18833, 37412, 72129, 22301, 65026, 23168, 9090, 41017, 68509, 13252, 71596, 73830, 2064, 10717, 3126, 44111, 28330, 31959, 36113, 10815, 52227, 63877, 18884, 55695, 3581, 65341, 27804, 54854, 65089, 10942, 39791, 56874, 52948, 19281, 56675, 60302, 53473, 28297, 23775, 1547, 64066, 12061, 22205, 64206, 23127, 47411, 66093, 40220, 36263, 6215, 65148, 19877, 66976, 66735, 67351, 4358, 10461, 22196, 35054, 56421, 65435, 22359, 28070, 29373, 18800, 62796, 65599, 39651, 29454, 13354, 2031, 3171, 70422, 26613, 26075, 12255, 39290, 43385, 21147, 60693, 36147, 23285, 52202, 63649, 60402, 11299, 22055, 37785, 74968, 32177, 40201, 50097, 17937, 13124, 2910, 45077, 962, 55485, 19391, 3642, 52957, 63843, 76476, 1600, 64759, 73694, 43601, 55529, 71759, 42328, 62246, 29170, 65472, 41949, 22614, 18652, 13570, 53280, 68998, 22202, 2944, 53289, 3370, 7166, 47923, 39670, 42071, 49814, 72322, 25815, 34872, 3188, 39266, 64740, 7271, 43027, 76349, 39937, 52408, 30376, 6212, 21150, 18418, 25270, 44322, 13721, 64394, 62725, 4493, 36111, 52146, 74135, 21505), '0.00', True, '1/2319/%', True, '1/2319/%', ('waiting', 'confirmed', 'partially_available', 'assigned'), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL))' with params: [(12843, 18843, 47764, 53001, 30440, 61044, 19834, 40279, 76252, 56875, 64349, 1948, 65839, 38498, 68785, 39411, 67005, 16666, 37657, 8771, 53769, 56664, 28355, 53839, 6099, 19645, 23628, 75750, 63263, 63558, 60626, 8792, 69087, 17993, 63821, 69001, 20070, 7321, 75370, 56849, 17603, 43859, 75924, 2221, 52179, 38962, 21153, 54024, 6227, 12242, 3382, 4575, 52982, 42275, 32181, 64109, 70396, 8672, 9636, 66421, 24383, 44742, 53555, 37624, 22854, 34155, 24425, 19578, 26052, 34974, 39220, 65507, 40131, 47898, 73009, 36309, 47841, 71372, 4564, 56480, 34945, 39926, 66072, 39665, 69176, 49001, 52079, 24249, 62266, 2375, 6079, 2090, 12115, 74131, 13497, 18952, 8799, 74126, 1877, 32066, 40117, 8695, 66556, 45211, 63146, 65164, 36131, 55548, 37352, 44228, 12220, 18472, 9138, 39576, 23087, 10630, 60357, 49579, 1934, 1838, 7313, 53412, 3788, 39845, 23760, 7344, 22532, 17955, 18266, 43099, 63764, 54485, 54116, 56312, 43208, 22617, 38946, 23818, 51883, 35008, 20203, 65408, 24157, 38248, 72586, 34847, 53994, 19029, 1071, 12880, 20083, 36212, 54446, 62903, 52195, 42322, 54085, 34591, 3216, 39015, 22179, 5910, 71861, 76015, 1717, 43371, 13871, 53525, 37384, 22207, 64233, 13788, 12391, 62792, 22183, 65295, 44233, 33156, 22160, 10478, 42099, 63006, 68752, 40033, 10838, 12241, 30485, 37921, 67374, 47468, 37267, 65495, 49626, 75636, 68318, 59145, 7441, 19493, 12591, 13901, 44973, 3499, 71701, 15828, 71831, 74121, 63914, 59413, 34678, 75288, 4461, 69378, 65208, 12967, 9661, 64243, 52313, 75871, 2276, 73097, 12299, 4543, 24243, 58427, 75510, 25970, 26129, 47042, 22064, 1606, 19414, 45152, 56620, 43121, 53462, 34882, 64785, 36369, 34748, 41767, 71943, 22266, 52142, 43529, 7406, 41587, 27954, 18419, 12213, 22347, 43464, 64068, 34613, 37563, 15851, 29245, 9664, 66169, 22442, 40185, 42462, 52934, 1745, 74357, 55414, 38965, 19298, 26522, 34794, 18958, 1454, 43572, 68331, 55757, 52393, 19542, 42978, 2180, 72272, 68497, 34773, 17872, 53574, 18072, 35297, 15125, 75514, 23301, 63141, 47546, 34679, 44917, 23669, 6175, 20279, 20204, 62212, 62942, 73990, 31590, 73817, 21859, 74238, 22518, 75063, 12332, 73866, 37902, 63777, 3074, 62302, 55609, 1886, 888, 56805, 53604, 72186, 35379, 54782, 66789, 19462, 43830, 13305, 39534, 20679, 43190, 38993, 7364, 19730, 34148, 52589, 75182, 35471, 43314, 23600, 76257, 43553, 55762, 45147, 18130, 20928, 3277, 3018, 39399, 22544, 2343, 35260, 73625, 69178, 43497, 3506, 23124, 63657, 22365, 47950, 54727, 43068, 35056, 20039, 37548, 1854, 62354, 13035, 36431, 26290, 53480, 65497, 39405, 18725, 6100, 13307, 72530, 58434, 43010, 75709, 1673, 22026, 63023, 20266, 3366, 44951, 3066, 2146, 5814, 68200, 7383, 72804, 66661, 18948, 66176, 29722, 55829, 53030, 35123, 13220, 20269, 48978, 66560, 41969, 56612, 48996, 23431, 63963, 13172, 15904, 42357, 47892, 8260, 8263, 60800, 63565, 43076, 23204, 75404, 63840, 43238, 37448, 49879, 6168, 63009, 39871, 33207, 32065, 43478, 16717, 5350, 4252, 7306, 65082, 60158, 71785, 29378, 75491, 76256, 23005, 39873, 64025, 71790, 71707, 13617, 43539, 59029, 33255, 36476, 18726, 35184, 23532, 33189, 15622, 37691, 47955, 52390, 16545, 22849, 22214, 69261, 38948, 65141, 13500, 19262, 3254, 21183, 65083, 2293, 4496, 32001, 28231, 38956, 60559, 7289, 74494, 12315, 36423, 16504, 55944, 56412, 41821, 58433, 63139, 52329, 72730, 56469, 34688, 32097, 54534, 63800, 39305, 9070, 23813, 47540, 55648, 35396, 54051, 47223, 30401, 72606, 47741, 12556, 47449, 56438, 63885, 15211, 52416, 39114, 68833, 16034, 52631, 9911, 53177, 2188, 36066, 6137, 15898, 43666, 2207, 49887, 41606, 12314, 23335, 47993, 1942, 43551, 3764, 21218, 13314, 44142, 12927, 60239, 62293, 22684, 59088, 16739, 39566, 43672, 37356, 60294, 2857, 47871, 8644, 39408, 64815, 13126, 69350, 76444, 17816, 74177, 65168, 46854, 27457, 1487, 42021, 2011, 64183, 28009, 47253, 19988, 3481, 54125, 2069, 56365, 9119, 24210, 50118, 49684, 75885, 72999, 12523, 55470, 37577, 34713, 56912, 49839, 30384, 22549, 37845, 53430, 72074, 23396, 18080, 3789, 40321, 47098, 59147, 52145, 31992, 13129, 18776, 20209, 1726, 63167, 22354, 63978, 68322, 51831, 32032, 39217, 29522, 75974, 22472, 49666, 63137, 60351, 19551, 53573, 53490, 44238, 23762, 4581, 13098, 55525, 71304, 24181, 5859, 10984, 15892, 74288, 39829, 34564, 58435, 21747, 49007, 18491, 47953, 60431, 59059, 13203, 35063, 52321, 18301, 37639, 68203, 4351, 22408, 39116, 52316, 44891, 71857, 43341, 56375, 39372, 56444, 12123, 66699, 75371, 40118, 18502, 67187, 16493, 18568, 34805, 47936, 26104, 46873, 12406, 47074, 49577, 46783, 3769, 66869, 1116, 47909, 28360, 13187, 31597, 18575, 3558, 74042, 60423, 39451, 49861, 37538, 23093, 23392, 72892, 65542, 15417, 33185, 6225, 45182, 3447, 38963, 23318, 36325, 65723, 62982, 58986, 945, 49060, 52626, 21241, 37844, 64710, 35796, 32979, 34424, 47386, 54134, 26000, 2117, 23527, 1539, 37861, 17839, 36128, 65611, 55692, 34877, 54513, 49042, 53024, 42980, 37539, 10885, 23810, 68169, 67284, 37831, 64990, 56559, 68517, 36705, 69007, 71278, 58485, 34652, 66596, 74023, 22456, 34619, 59356, 64372, 63643, 23340, 22776, 73027, 70426, 6219, 26568, 44942, 66738, 19276, 7350, 33200, 54889, 19925, 34880, 48965, 34388, 3353, 27426, 24369, 15483, 19024, 32169, 52938, 52368, 53602, 60649, 23173, 49033, 34792, 53534, 9654, 58836, 22632, 10615, 43486, 22319, 31601, 20476, 43290, 37469, 24191, 1850, 22369, 1792, 26585, 21088, 63754, 12321, 37612, 18620, 64304, 26534, 22022, 2083, 23235, 5309, 68286, 55833, 18865, 31602, 3173, 60652, 47263, 15722, 2093, 63611, 11168, 43985, 75687, 19090, 7429, 33127, 75127, 41982, 10850, 10576, 41109, 40223, 22735, 13205, 8635, 43973, 48945, 69071, 7345, 34647, 9631, 70393, 46655, 17891, 38024, 66667, 65798, 18163, 9898, 22360, 16796, 22683, 68816, 26710, 49793, 73543, 24344, 23486, 75714, 9628, 37338, 9928, 19680, 65195, 64055, 46846, 13895, 2420, 49673, 55546, 56554, 53122, 43595, 48952, 56688, 41911, 4476, 42004, 61476, 20938, 12957, 1605, 29555, 69287, 34906, 10522, 52460, 8690, 39157, 32152, 19325, 76462, 41013, 39994, 64977, 12969, 19604, 13309, 22370, 46746, 47488, 1727, 56683, 7284, 36703, 53017, 28218, 47986, 32954, 37339, 19832, 17762, 47251, 40907, 49741, 38758, 33294, 63584, 56910, 52447, 36201, 63419, 8732, 65159, 66985, 43967, 18136, 67298, 37597, 58428, 22051, 20251, 55839, 39308, 42305, 3776, 29451, 54870, 52110, 65007, 71781, 855, 22691, 67334, 49644, 53864, 60550, 22824, 36446, 65487, 23828, 16812, 59178, 23710, 4693, 2887, 8265, 75781, 68559, 67211, 26070, 71912, 15740, 65048, 18251, 41944, 62345, 48918, 19018, 42287, 44829, 19873, 45245, 21737, 13244, 7285, 29412, 12339, 19458, 49685, 66803, 55474, 6058, 19858, 75347, 47225, 67082, 19001, 23679, 60599, 63681, 29763, 24235, 64902, 43522, 74195, 1899, 13654, 74669, 74179, 18833, 37412, 72129, 22301, 65026, 23168, 9090, 41017, 68509, 13252, 71596, 73830, 2064, 10717, 3126, 44111, 28330, 31959, 36113, 10815, 52227, 63877, 18884, 55695, 3581, 65341, 27804, 54854, 65089, 10942, 39791, 56874, 52948, 19281, 56675, 60302, 53473, 28297, 23775, 1547, 64066, 12061, 22205, 64206, 23127, 47411, 66093, 40220, 36263, 6215, 65148, 19877, 66976, 66735, 67351, 4358, 10461, 22196, 35054, 56421, 65435, 22359, 28070, 29373, 18800, 62796, 65599, 39651, 29454, 13354, 2031, 3171, 70422, 26613, 26075, 12255, 39290, 43385, 21147, 60693, 36147, 23285, 52202, 63649, 60402, 11299, 22055, 37785, 74968, 32177, 40201, 50097, 17937, 13124, 2910, 45077, 962, 55485, 19391, 3642, 52957, 63843, 76476, 1600, 64759, 73694, 43601, 55529, 71759, 42328, 62246, 29170, 65472, 41949, 22614, 18652, 13570, 53280, 68998, 22202, 2944, 53289, 3370, 7166, 47923, 39670, 42071, 49814, 72322, 25815, 34872, 3188, 39266, 64740, 7271, 43027, 76349, 39937, 52408, 30376, 6212, 21150, 18418, 25270, 44322, 13721, 64394, 62725, 4493, 36111, 52146, 74135, 21505), '0.00', True, '1/2319/%', True, '1/2319/%', ('waiting', 'confirmed', 'partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL))' with params: [(74724, 44817, 22882, 22235, 63278, 18893, 32120, 41201, 76162, 55518, 26639, 66532, 45073, 47222, 63684, 68779, 20085, 2324, 74103, 3175, 39528, 22955, 69392, 59357, 69313, 23820, 56565, 53824, 53410, 64060, 71596, 62219, 58379, 49551, 23790, 34678, 22738, 22604, 43163, 18434, 63247, 21254, 52114, 5797, 64095, 56359, 3597, 10932, 60286, 67055, 23480, 23745, 73275, 30433, 37884, 53442, 54839, 7448, 13298, 22518, 18102, 20278, 68446, 9093, 22276, 75518, 69207, 13157, 43260, 1703, 16509, 28370, 47454, 44902, 18172, 28055, 34583, 36081, 19400, 40897, 34850, 65851, 32158, 16488, 19637, 24307, 64970, 46770, 18302, 63319, 18042, 20089, 62947, 23318, 43519, 58437, 13327, 22989, 22792, 68944, 9913, 68731, 10558, 62217, 60034, 10757, 58429, 16035, 27912, 55279, 13417, 54537, 20975, 75344, 54132, 21720, 72356, 73320, 21144, 36763, 18456, 40157, 34909, 33067, 64389, 34588, 7374, 63481, 50084, 10508, 39583, 39861, 2875, 13840, 39141, 65051, 69075, 11545, 55694, 55574, 21121, 18030, 65114, 49745, 12079, 2935, 64835, 21147, 23751, 53270, 13160, 72346, 52389, 39340, 63755, 26291, 47408, 56810, 53370, 52595, 52499, 65161, 40902, 47965, 58921, 62974, 23355, 13322, 26580, 23499, 35194, 29758, 15129, 12393, 27944, 59002, 64711, 8774, 29417, 9586, 35296, 53264, 15894, 42197, 5902, 68230, 38991, 5322, 20423, 22783, 2890, 53463, 13898, 1746, 52677, 40293, 64773, 67196, 75388, 66366, 63052, 49627, 47361, 65789, 71752, 33199, 16672, 33084, 56380, 13852, 75449, 41917, 47713, 39366, 26193, 52475, 49566, 15930, 66631, 39078, 73444, 64233, 63772, 5819, 29560, 74002, 13763, 9061, 1090, 60307, 37882, 76275, 68892, 74517, 45184, 47476, 18604, 18949, 18279, 58275, 21077, 29701, 39209, 14739, 22415, 19281, 62902, 17855, 49762, 56402, 35290, 36430, 15847, 21257, 43927, 8285, 55625, 26182, 23203, 4594, 56923, 47191, 9137, 24138, 37396, 58301, 3642, 28220, 43285, 21752, 72595, 72766, 43714, 75676, 19966, 20079, 12503, 29456, 23726, 63974, 63911, 64379, 12428, 12173, 20952, 1242, 65748, 34417, 18692, 41999, 1849, 49562, 68745, 66415, 29540, 53505, 3162, 11111, 36057, 20087, 56947, 68273, 28027, 28067, 47840, 71884, 63430, 55798, 19493, 10742, 54731, 22581, 42347, 62345, 65558, 74092, 34894, 3284, 19032, 3425, 16680, 17811, 53915, 66500, 60263, 63462, 45215, 3372, 52655, 11160, 34804, 36476, 12287, 19346, 10967, 3785, 26234, 4324, 12308, 10810, 39413, 64375, 18532, 73936, 45034, 1477, 65649, 45070, 43563, 18793, 52934, 23091, 22221, 58354, 42302, 26575, 15744, 52557, 22550, 23237, 55472, 60579, 43226, 60053, 28061, 2211, 69218, 66352, 9798, 63163, 26205, 69147, 8747, 39344, 22625, 63951, 23354, 10467, 64873, 52634, 15624, 29386, 55516, 35377, 75480, 37584, 3182, 58321, 15883, 3405, 60249, 53569, 42106, 13722, 64673, 20300, 13611, 3514, 64944, 11648, 20299, 74739, 63680, 67357, 10663, 35396, 75477, 34935, 23384, 12194, 36308, 4527, 72526, 71650, 71775, 5402, 63109, 11728, 13668, 73917, 32049, 47473, 8642, 1516, 49062, 34624, 71308, 40180, 73428, 63606, 31577, 53110, 10637, 2058, 73941, 38252, 20399, 65678, 1442, 47838, 35105, 5397, 43203, 28116, 72398, 59342, 64757, 74247, 23294, 13255, 23238, 72499, 19256, 46634, 37343, 47190, 1706, 62725, 65653, 53034, 53664, 22728, 65277, 66446, 55615, 15951, 73546, 49033, 75803, 4506, 36054, 19854, 72543, 37507, 71398, 40189, 65410, 39166, 13234, 2229, 27964, 68242, 37763, 16846, 49041, 59033, 52477, 74932, 19799, 26597, 22374, 58400, 37335, 52362, 11162, 61063, 22501, 62936, 18696, 66785, 40172, 3199, 27943, 2340, 72549, 34592, 42950, 24137, 10783, 63382, 21591, 17756, 929, 12245, 31601, 53424, 36159, 34660, 23493, 52447, 65426, 23114, 44129, 53331, 71694, 13207, 74682, 28659, 18976, 43732, 10975, 65631, 62755, 58940, 17786, 38951, 41941, 18874, 35019, 1445, 42160, 27837, 1220, 63295, 64059, 39751, 3599, 29375, 11173, 32018, 10753, 55544, 73663, 5903, 4693, 13267, 65575, 53435, 22781, 34867, 2228, 28071, 75629, 1879, 42509, 6147, 18636, 71281, 65692, 75008, 19320, 35069, 36184, 65394, 43407, 12300, 21236, 8687, 29319, 7258, 13771, 19905, 1764, 63585, 63936, 4429, 38024, 44231, 65460, 44843, 24230, 74655, 55272, 66600, 9125, 17922, 71955, 52184, 65461, 13163, 68267, 64010, 22521, 39385, 29452, 23415, 15793, 68316, 21729, 43253, 42377, 40119, 66598, 19260, 72988, 2183, 65082, 60635, 75238, 13032, 55589, 23754, 56949, 44229, 9032, 54065, 60228, 1224, 44737, 55337, 10269, 6246, 23268, 19418, 62970, 55508, 34683, 4578, 42231, 42493, 23609, 56689, 26114, 3084, 9135, 60962, 53658, 60439, 53741, 26162, 54758, 34309, 73660, 55573, 41750, 10991, 44282, 56750, 72127, 39909, 60169, 53363, 53663, 36453, 60670, 60697, 34612, 35006, 69238, 1769, 22808, 24390, 75446, 64939, 37446, 3603, 71445, 18394, 19015, 35083, 16610, 13911, 56659, 49665, 65122, 55311, 55511, 72321, 16012, 55882, 56677, 53768, 23352, 10787, 72896, 41614, 75812, 65056, 59086, 15904, 23229, 1211, 18265, 39103, 36150, 22283, 3024, 68697, 33234, 62748, 36495, 63410, 73026, 10785, 9087, 20458, 21162, 18899, 73873, 20414, 76492, 52264, 47545, 23486, 19401, 40252, 67253, 66722, 10727, 68829, 28148, 1774, 68471, 72223, 22566, 59404, 7221, 63861, 68299, 42953, 39045, 1390, 3218, 47546, 8723, 76236, 55726, 22962, 29347, 22326, 65471, 63408, 76421, 49808, 36688, 18391, 75777, 10632, 41815, 1106, 10073, 65498, 36383, 9891, 53403, 18408, 68264, 28249, 65005, 54778, 1527, 64397, 10648, 66605, 10859, 22320, 52582, 47539, 45228, 55651, 1507, 36428, 29344, 66177, 67159, 33245, 33208, 52560, 10846, 49791, 44906, 64065, 66340, 43282, 2949, 44143, 24384, 22649, 28328, 59083, 75324, 62809, 20202, 66615, 39934, 34143, 64395, 20213, 43162, 44845, 43569, 28601, 3167, 19002, 49587, 74863, 18055, 2835, 37803, 71441, 66804, 49461, 39252, 41788, 53577, 39859, 18498, 41914, 52187, 52571, 29373, 68746, 47753, 65723, 23360, 19405, 13842, 65133, 7408, 73075, 42978, 71549, 68193, 56362, 8297, 74488, 3474, 43473, 39308, 19375, 23472, 18122, 19477, 1823, 56567, 10491, 34961, 18569, 22760, 74778, 13311, 63823, 1152, 47057, 64969, 24402, 75814, 65610, 2019, 60500, 20225, 34736, 46625, 23222, 49087, 58427, 22335, 29213, 1376, 58365, 1418, 16487, 27869, 15952, 15707, 41868, 56877, 41920, 19365, 16691, 32441, 76489, 41582, 39217, 42051, 73446, 56288, 74973, 47254, 42176, 6079, 75669, 3534, 52353, 75084, 65407, 39179, 56678, 19013, 31984, 55049, 66769, 25822, 16541, 27946, 23539, 43455, 912, 63149, 4487, 56798, 19463, 17807, 45016, 52272, 22902, 10565, 31873, 26243, 58405, 20157, 12846, 59417, 28520, 1702, 20016, 66546, 47517, 67177, 34127, 58869, 37465, 63562, 945, 1535, 64367, 36416, 17955, 27856, 13801, 65440, 26165, 45078, 1413, 13164, 42018, 55746, 46790, 23144, 10754, 52580, 41125, 20139, 66996, 74357, 1895, 10697, 9646, 4427, 74686, 71692, 34769, 52382, 21171, 18107, 26063, 33235, 63246, 3369, 16573, 18459, 40033, 28381, 58479, 71256, 43454, 1884, 64190, 44200, 10640, 49609, 22976, 43543, 2373, 74303, 73432, 73579, 23799, 35160, 47085, 17856, 26712, 60658, 64732, 17925, 9580, 66686, 42020, 49632, 3450, 22190, 21145, 23290, 1435, 1258, 68749, 12234, 3132, 1676, 22942), '0.00', True, '1/2335/%', True, '1/2335/%', ('waiting', 'confirmed', 'partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL)) AND ("stock_move"."state" in %s))' with params: [(74724, 44817, 22882, 22235, 63278, 18893, 32120, 41201, 76162, 55518, 26639, 66532, 45073, 47222, 63684, 68779, 20085, 2324, 74103, 3175, 39528, 22955, 69392, 59357, 69313, 23820, 56565, 53824, 53410, 64060, 71596, 62219, 58379, 49551, 23790, 34678, 22738, 22604, 43163, 18434, 63247, 21254, 52114, 5797, 64095, 56359, 3597, 10932, 60286, 67055, 23480, 23745, 73275, 30433, 37884, 53442, 54839, 7448, 13298, 22518, 18102, 20278, 68446, 9093, 22276, 75518, 69207, 13157, 43260, 1703, 16509, 28370, 47454, 44902, 18172, 28055, 34583, 36081, 19400, 40897, 34850, 65851, 32158, 16488, 19637, 24307, 64970, 46770, 18302, 63319, 18042, 20089, 62947, 23318, 43519, 58437, 13327, 22989, 22792, 68944, 9913, 68731, 10558, 62217, 60034, 10757, 58429, 16035, 27912, 55279, 13417, 54537, 20975, 75344, 54132, 21720, 72356, 73320, 21144, 36763, 18456, 40157, 34909, 33067, 64389, 34588, 7374, 63481, 50084, 10508, 39583, 39861, 2875, 13840, 39141, 65051, 69075, 11545, 55694, 55574, 21121, 18030, 65114, 49745, 12079, 2935, 64835, 21147, 23751, 53270, 13160, 72346, 52389, 39340, 63755, 26291, 47408, 56810, 53370, 52595, 52499, 65161, 40902, 47965, 58921, 62974, 23355, 13322, 26580, 23499, 35194, 29758, 15129, 12393, 27944, 59002, 64711, 8774, 29417, 9586, 35296, 53264, 15894, 42197, 5902, 68230, 38991, 5322, 20423, 22783, 2890, 53463, 13898, 1746, 52677, 40293, 64773, 67196, 75388, 66366, 63052, 49627, 47361, 65789, 71752, 33199, 16672, 33084, 56380, 13852, 75449, 41917, 47713, 39366, 26193, 52475, 49566, 15930, 66631, 39078, 73444, 64233, 63772, 5819, 29560, 74002, 13763, 9061, 1090, 60307, 37882, 76275, 68892, 74517, 45184, 47476, 18604, 18949, 18279, 58275, 21077, 29701, 39209, 14739, 22415, 19281, 62902, 17855, 49762, 56402, 35290, 36430, 15847, 21257, 43927, 8285, 55625, 26182, 23203, 4594, 56923, 47191, 9137, 24138, 37396, 58301, 3642, 28220, 43285, 21752, 72595, 72766, 43714, 75676, 19966, 20079, 12503, 29456, 23726, 63974, 63911, 64379, 12428, 12173, 20952, 1242, 65748, 34417, 18692, 41999, 1849, 49562, 68745, 66415, 29540, 53505, 3162, 11111, 36057, 20087, 56947, 68273, 28027, 28067, 47840, 71884, 63430, 55798, 19493, 10742, 54731, 22581, 42347, 62345, 65558, 74092, 34894, 3284, 19032, 3425, 16680, 17811, 53915, 66500, 60263, 63462, 45215, 3372, 52655, 11160, 34804, 36476, 12287, 19346, 10967, 3785, 26234, 4324, 12308, 10810, 39413, 64375, 18532, 73936, 45034, 1477, 65649, 45070, 43563, 18793, 52934, 23091, 22221, 58354, 42302, 26575, 15744, 52557, 22550, 23237, 55472, 60579, 43226, 60053, 28061, 2211, 69218, 66352, 9798, 63163, 26205, 69147, 8747, 39344, 22625, 63951, 23354, 10467, 64873, 52634, 15624, 29386, 55516, 35377, 75480, 37584, 3182, 58321, 15883, 3405, 60249, 53569, 42106, 13722, 64673, 20300, 13611, 3514, 64944, 11648, 20299, 74739, 63680, 67357, 10663, 35396, 75477, 34935, 23384, 12194, 36308, 4527, 72526, 71650, 71775, 5402, 63109, 11728, 13668, 73917, 32049, 47473, 8642, 1516, 49062, 34624, 71308, 40180, 73428, 63606, 31577, 53110, 10637, 2058, 73941, 38252, 20399, 65678, 1442, 47838, 35105, 5397, 43203, 28116, 72398, 59342, 64757, 74247, 23294, 13255, 23238, 72499, 19256, 46634, 37343, 47190, 1706, 62725, 65653, 53034, 53664, 22728, 65277, 66446, 55615, 15951, 73546, 49033, 75803, 4506, 36054, 19854, 72543, 37507, 71398, 40189, 65410, 39166, 13234, 2229, 27964, 68242, 37763, 16846, 49041, 59033, 52477, 74932, 19799, 26597, 22374, 58400, 37335, 52362, 11162, 61063, 22501, 62936, 18696, 66785, 40172, 3199, 27943, 2340, 72549, 34592, 42950, 24137, 10783, 63382, 21591, 17756, 929, 12245, 31601, 53424, 36159, 34660, 23493, 52447, 65426, 23114, 44129, 53331, 71694, 13207, 74682, 28659, 18976, 43732, 10975, 65631, 62755, 58940, 17786, 38951, 41941, 18874, 35019, 1445, 42160, 27837, 1220, 63295, 64059, 39751, 3599, 29375, 11173, 32018, 10753, 55544, 73663, 5903, 4693, 13267, 65575, 53435, 22781, 34867, 2228, 28071, 75629, 1879, 42509, 6147, 18636, 71281, 65692, 75008, 19320, 35069, 36184, 65394, 43407, 12300, 21236, 8687, 29319, 7258, 13771, 19905, 1764, 63585, 63936, 4429, 38024, 44231, 65460, 44843, 24230, 74655, 55272, 66600, 9125, 17922, 71955, 52184, 65461, 13163, 68267, 64010, 22521, 39385, 29452, 23415, 15793, 68316, 21729, 43253, 42377, 40119, 66598, 19260, 72988, 2183, 65082, 60635, 75238, 13032, 55589, 23754, 56949, 44229, 9032, 54065, 60228, 1224, 44737, 55337, 10269, 6246, 23268, 19418, 62970, 55508, 34683, 4578, 42231, 42493, 23609, 56689, 26114, 3084, 9135, 60962, 53658, 60439, 53741, 26162, 54758, 34309, 73660, 55573, 41750, 10991, 44282, 56750, 72127, 39909, 60169, 53363, 53663, 36453, 60670, 60697, 34612, 35006, 69238, 1769, 22808, 24390, 75446, 64939, 37446, 3603, 71445, 18394, 19015, 35083, 16610, 13911, 56659, 49665, 65122, 55311, 55511, 72321, 16012, 55882, 56677, 53768, 23352, 10787, 72896, 41614, 75812, 65056, 59086, 15904, 23229, 1211, 18265, 39103, 36150, 22283, 3024, 68697, 33234, 62748, 36495, 63410, 73026, 10785, 9087, 20458, 21162, 18899, 73873, 20414, 76492, 52264, 47545, 23486, 19401, 40252, 67253, 66722, 10727, 68829, 28148, 1774, 68471, 72223, 22566, 59404, 7221, 63861, 68299, 42953, 39045, 1390, 3218, 47546, 8723, 76236, 55726, 22962, 29347, 22326, 65471, 63408, 76421, 49808, 36688, 18391, 75777, 10632, 41815, 1106, 10073, 65498, 36383, 9891, 53403, 18408, 68264, 28249, 65005, 54778, 1527, 64397, 10648, 66605, 10859, 22320, 52582, 47539, 45228, 55651, 1507, 36428, 29344, 66177, 67159, 33245, 33208, 52560, 10846, 49791, 44906, 64065, 66340, 43282, 2949, 44143, 24384, 22649, 28328, 59083, 75324, 62809, 20202, 66615, 39934, 34143, 64395, 20213, 43162, 44845, 43569, 28601, 3167, 19002, 49587, 74863, 18055, 2835, 37803, 71441, 66804, 49461, 39252, 41788, 53577, 39859, 18498, 41914, 52187, 52571, 29373, 68746, 47753, 65723, 23360, 19405, 13842, 65133, 7408, 73075, 42978, 71549, 68193, 56362, 8297, 74488, 3474, 43473, 39308, 19375, 23472, 18122, 19477, 1823, 56567, 10491, 34961, 18569, 22760, 74778, 13311, 63823, 1152, 47057, 64969, 24402, 75814, 65610, 2019, 60500, 20225, 34736, 46625, 23222, 49087, 58427, 22335, 29213, 1376, 58365, 1418, 16487, 27869, 15952, 15707, 41868, 56877, 41920, 19365, 16691, 32441, 76489, 41582, 39217, 42051, 73446, 56288, 74973, 47254, 42176, 6079, 75669, 3534, 52353, 75084, 65407, 39179, 56678, 19013, 31984, 55049, 66769, 25822, 16541, 27946, 23539, 43455, 912, 63149, 4487, 56798, 19463, 17807, 45016, 52272, 22902, 10565, 31873, 26243, 58405, 20157, 12846, 59417, 28520, 1702, 20016, 66546, 47517, 67177, 34127, 58869, 37465, 63562, 945, 1535, 64367, 36416, 17955, 27856, 13801, 65440, 26165, 45078, 1413, 13164, 42018, 55746, 46790, 23144, 10754, 52580, 41125, 20139, 66996, 74357, 1895, 10697, 9646, 4427, 74686, 71692, 34769, 52382, 21171, 18107, 26063, 33235, 63246, 3369, 16573, 18459, 40033, 28381, 58479, 71256, 43454, 1884, 64190, 44200, 10640, 49609, 22976, 43543, 2373, 74303, 73432, 73579, 23799, 35160, 47085, 17856, 26712, 60658, 64732, 17925, 9580, 66686, 42020, 49632, 3450, 22190, 21145, 23290, 1435, 1258, 68749, 12234, 3132, 1676, 22942), '0.00', True, '1/2335/%', True, '1/2335/%', ('waiting', 'confirmed', 'partially_available', 'assigned'), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL))' with params: [(74724, 44817, 22882, 22235, 63278, 18893, 32120, 41201, 76162, 55518, 26639, 66532, 45073, 47222, 63684, 68779, 20085, 2324, 74103, 3175, 39528, 22955, 69392, 59357, 69313, 23820, 56565, 53824, 53410, 64060, 71596, 62219, 58379, 49551, 23790, 34678, 22738, 22604, 43163, 18434, 63247, 21254, 52114, 5797, 64095, 56359, 3597, 10932, 60286, 67055, 23480, 23745, 73275, 30433, 37884, 53442, 54839, 7448, 13298, 22518, 18102, 20278, 68446, 9093, 22276, 75518, 69207, 13157, 43260, 1703, 16509, 28370, 47454, 44902, 18172, 28055, 34583, 36081, 19400, 40897, 34850, 65851, 32158, 16488, 19637, 24307, 64970, 46770, 18302, 63319, 18042, 20089, 62947, 23318, 43519, 58437, 13327, 22989, 22792, 68944, 9913, 68731, 10558, 62217, 60034, 10757, 58429, 16035, 27912, 55279, 13417, 54537, 20975, 75344, 54132, 21720, 72356, 73320, 21144, 36763, 18456, 40157, 34909, 33067, 64389, 34588, 7374, 63481, 50084, 10508, 39583, 39861, 2875, 13840, 39141, 65051, 69075, 11545, 55694, 55574, 21121, 18030, 65114, 49745, 12079, 2935, 64835, 21147, 23751, 53270, 13160, 72346, 52389, 39340, 63755, 26291, 47408, 56810, 53370, 52595, 52499, 65161, 40902, 47965, 58921, 62974, 23355, 13322, 26580, 23499, 35194, 29758, 15129, 12393, 27944, 59002, 64711, 8774, 29417, 9586, 35296, 53264, 15894, 42197, 5902, 68230, 38991, 5322, 20423, 22783, 2890, 53463, 13898, 1746, 52677, 40293, 64773, 67196, 75388, 66366, 63052, 49627, 47361, 65789, 71752, 33199, 16672, 33084, 56380, 13852, 75449, 41917, 47713, 39366, 26193, 52475, 49566, 15930, 66631, 39078, 73444, 64233, 63772, 5819, 29560, 74002, 13763, 9061, 1090, 60307, 37882, 76275, 68892, 74517, 45184, 47476, 18604, 18949, 18279, 58275, 21077, 29701, 39209, 14739, 22415, 19281, 62902, 17855, 49762, 56402, 35290, 36430, 15847, 21257, 43927, 8285, 55625, 26182, 23203, 4594, 56923, 47191, 9137, 24138, 37396, 58301, 3642, 28220, 43285, 21752, 72595, 72766, 43714, 75676, 19966, 20079, 12503, 29456, 23726, 63974, 63911, 64379, 12428, 12173, 20952, 1242, 65748, 34417, 18692, 41999, 1849, 49562, 68745, 66415, 29540, 53505, 3162, 11111, 36057, 20087, 56947, 68273, 28027, 28067, 47840, 71884, 63430, 55798, 19493, 10742, 54731, 22581, 42347, 62345, 65558, 74092, 34894, 3284, 19032, 3425, 16680, 17811, 53915, 66500, 60263, 63462, 45215, 3372, 52655, 11160, 34804, 36476, 12287, 19346, 10967, 3785, 26234, 4324, 12308, 10810, 39413, 64375, 18532, 73936, 45034, 1477, 65649, 45070, 43563, 18793, 52934, 23091, 22221, 58354, 42302, 26575, 15744, 52557, 22550, 23237, 55472, 60579, 43226, 60053, 28061, 2211, 69218, 66352, 9798, 63163, 26205, 69147, 8747, 39344, 22625, 63951, 23354, 10467, 64873, 52634, 15624, 29386, 55516, 35377, 75480, 37584, 3182, 58321, 15883, 3405, 60249, 53569, 42106, 13722, 64673, 20300, 13611, 3514, 64944, 11648, 20299, 74739, 63680, 67357, 10663, 35396, 75477, 34935, 23384, 12194, 36308, 4527, 72526, 71650, 71775, 5402, 63109, 11728, 13668, 73917, 32049, 47473, 8642, 1516, 49062, 34624, 71308, 40180, 73428, 63606, 31577, 53110, 10637, 2058, 73941, 38252, 20399, 65678, 1442, 47838, 35105, 5397, 43203, 28116, 72398, 59342, 64757, 74247, 23294, 13255, 23238, 72499, 19256, 46634, 37343, 47190, 1706, 62725, 65653, 53034, 53664, 22728, 65277, 66446, 55615, 15951, 73546, 49033, 75803, 4506, 36054, 19854, 72543, 37507, 71398, 40189, 65410, 39166, 13234, 2229, 27964, 68242, 37763, 16846, 49041, 59033, 52477, 74932, 19799, 26597, 22374, 58400, 37335, 52362, 11162, 61063, 22501, 62936, 18696, 66785, 40172, 3199, 27943, 2340, 72549, 34592, 42950, 24137, 10783, 63382, 21591, 17756, 929, 12245, 31601, 53424, 36159, 34660, 23493, 52447, 65426, 23114, 44129, 53331, 71694, 13207, 74682, 28659, 18976, 43732, 10975, 65631, 62755, 58940, 17786, 38951, 41941, 18874, 35019, 1445, 42160, 27837, 1220, 63295, 64059, 39751, 3599, 29375, 11173, 32018, 10753, 55544, 73663, 5903, 4693, 13267, 65575, 53435, 22781, 34867, 2228, 28071, 75629, 1879, 42509, 6147, 18636, 71281, 65692, 75008, 19320, 35069, 36184, 65394, 43407, 12300, 21236, 8687, 29319, 7258, 13771, 19905, 1764, 63585, 63936, 4429, 38024, 44231, 65460, 44843, 24230, 74655, 55272, 66600, 9125, 17922, 71955, 52184, 65461, 13163, 68267, 64010, 22521, 39385, 29452, 23415, 15793, 68316, 21729, 43253, 42377, 40119, 66598, 19260, 72988, 2183, 65082, 60635, 75238, 13032, 55589, 23754, 56949, 44229, 9032, 54065, 60228, 1224, 44737, 55337, 10269, 6246, 23268, 19418, 62970, 55508, 34683, 4578, 42231, 42493, 23609, 56689, 26114, 3084, 9135, 60962, 53658, 60439, 53741, 26162, 54758, 34309, 73660, 55573, 41750, 10991, 44282, 56750, 72127, 39909, 60169, 53363, 53663, 36453, 60670, 60697, 34612, 35006, 69238, 1769, 22808, 24390, 75446, 64939, 37446, 3603, 71445, 18394, 19015, 35083, 16610, 13911, 56659, 49665, 65122, 55311, 55511, 72321, 16012, 55882, 56677, 53768, 23352, 10787, 72896, 41614, 75812, 65056, 59086, 15904, 23229, 1211, 18265, 39103, 36150, 22283, 3024, 68697, 33234, 62748, 36495, 63410, 73026, 10785, 9087, 20458, 21162, 18899, 73873, 20414, 76492, 52264, 47545, 23486, 19401, 40252, 67253, 66722, 10727, 68829, 28148, 1774, 68471, 72223, 22566, 59404, 7221, 63861, 68299, 42953, 39045, 1390, 3218, 47546, 8723, 76236, 55726, 22962, 29347, 22326, 65471, 63408, 76421, 49808, 36688, 18391, 75777, 10632, 41815, 1106, 10073, 65498, 36383, 9891, 53403, 18408, 68264, 28249, 65005, 54778, 1527, 64397, 10648, 66605, 10859, 22320, 52582, 47539, 45228, 55651, 1507, 36428, 29344, 66177, 67159, 33245, 33208, 52560, 10846, 49791, 44906, 64065, 66340, 43282, 2949, 44143, 24384, 22649, 28328, 59083, 75324, 62809, 20202, 66615, 39934, 34143, 64395, 20213, 43162, 44845, 43569, 28601, 3167, 19002, 49587, 74863, 18055, 2835, 37803, 71441, 66804, 49461, 39252, 41788, 53577, 39859, 18498, 41914, 52187, 52571, 29373, 68746, 47753, 65723, 23360, 19405, 13842, 65133, 7408, 73075, 42978, 71549, 68193, 56362, 8297, 74488, 3474, 43473, 39308, 19375, 23472, 18122, 19477, 1823, 56567, 10491, 34961, 18569, 22760, 74778, 13311, 63823, 1152, 47057, 64969, 24402, 75814, 65610, 2019, 60500, 20225, 34736, 46625, 23222, 49087, 58427, 22335, 29213, 1376, 58365, 1418, 16487, 27869, 15952, 15707, 41868, 56877, 41920, 19365, 16691, 32441, 76489, 41582, 39217, 42051, 73446, 56288, 74973, 47254, 42176, 6079, 75669, 3534, 52353, 75084, 65407, 39179, 56678, 19013, 31984, 55049, 66769, 25822, 16541, 27946, 23539, 43455, 912, 63149, 4487, 56798, 19463, 17807, 45016, 52272, 22902, 10565, 31873, 26243, 58405, 20157, 12846, 59417, 28520, 1702, 20016, 66546, 47517, 67177, 34127, 58869, 37465, 63562, 945, 1535, 64367, 36416, 17955, 27856, 13801, 65440, 26165, 45078, 1413, 13164, 42018, 55746, 46790, 23144, 10754, 52580, 41125, 20139, 66996, 74357, 1895, 10697, 9646, 4427, 74686, 71692, 34769, 52382, 21171, 18107, 26063, 33235, 63246, 3369, 16573, 18459, 40033, 28381, 58479, 71256, 43454, 1884, 64190, 44200, 10640, 49609, 22976, 43543, 2373, 74303, 73432, 73579, 23799, 35160, 47085, 17856, 26712, 60658, 64732, 17925, 9580, 66686, 42020, 49632, 3450, 22190, 21145, 23290, 1435, 1258, 68749, 12234, 3132, 1676, 22942), '0.00', True, '1/2335/%', True, '1/2335/%', ('waiting', 'confirmed', 'partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL))' with params: [(74774, 76139, 76126, 75255, 72687, 72647, 72314, 72513, 74921, 76494, 74288, 75852, 73391, 76075, 73351, 73449, 74994), '0.00', True, '1/2495/%', True, '1/2495/%', ('waiting', 'confirmed', 'partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL)) AND ("stock_move"."state" in %s))' with params: [(74774, 76139, 76126, 75255, 72687, 72647, 72314, 72513, 74921, 76494, 74288, 75852, 73391, 76075, 73351, 73449, 74994), '0.00', True, '1/2495/%', True, '1/2495/%', ('waiting', 'confirmed', 'partially_available', 'assigned'), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL))' with params: [(74774, 76139, 76126, 75255, 72687, 72647, 72314, 72513, 74921, 76494, 74288, 75852, 73391, 76075, 73351, 73449, 74994), '0.00', True, '1/2495/%', True, '1/2495/%', ('waiting', 'confirmed', 'partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL))' with params: [(75760, 74277, 73930, 72780, 72887, 73359), '0.00', True, '1/2415/%', True, '1/2415/%', ('waiting', 'confirmed', 'partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL)) AND ("stock_move"."state" in %s))' with params: [(75760, 74277, 73930, 72780, 72887, 73359), '0.00', True, '1/2415/%', True, '1/2415/%', ('waiting', 'confirmed', 'partially_available', 'assigned'), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL))' with params: [(75760, 74277, 73930, 72780, 72887, 73359), '0.00', True, '1/2415/%', True, '1/2415/%', ('waiting', 'confirmed', 'partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL))' with params: [(75008, 72789), '0.00', True, '1/2503/%', True, '1/2503/%', ('waiting', 'confirmed', 'partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL)) AND ("stock_move"."state" in %s))' with params: [(75008, 72789), '0.00', True, '1/2503/%', True, '1/2503/%', ('waiting', 'confirmed', 'partially_available', 'assigned'), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL))' with params: [(75008, 72789), '0.00', True, '1/2503/%', True, '1/2503/%', ('waiting', 'confirmed', 'partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL))' with params: [(75997, 76396, 75700, 71707, 71535, 75723, 72558, 75535, 75565, 75366, 72929, 71509, 72212, 73441, 75726, 75895, 75972, 72242, 75349), '0.00', True, '1/2431/%', True, '1/2431/%', ('waiting', 'confirmed', 'partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL)) AND ("stock_move"."state" in %s))' with params: [(75997, 76396, 75700, 71707, 71535, 75723, 72558, 75535, 75565, 75366, 72929, 71509, 72212, 73441, 75726, 75895, 75972, 72242, 75349), '0.00', True, '1/2431/%', True, '1/2431/%', ('waiting', 'confirmed', 'partially_available', 'assigned'), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL))' with params: [(75997, 76396, 75700, 71707, 71535, 75723, 72558, 75535, 75565, 75366, 72929, 71509, 72212, 73441, 75726, 75895, 75972, 72242, 75349), '0.00', True, '1/2431/%', True, '1/2431/%', ('waiting', 'confirmed', 'partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL))' with params: [(74029, 71755, 73678, 72017, 75967, 75151, 72969, 74976, 73968, 72393), '0.00', True, '1/2479/%', True, '1/2479/%', ('waiting', 'confirmed', 'partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL)) AND ("stock_move"."state" in %s))' with params: [(74029, 71755, 73678, 72017, 75967, 75151, 72969, 74976, 73968, 72393), '0.00', True, '1/2479/%', True, '1/2479/%', ('waiting', 'confirmed', 'partially_available', 'assigned'), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL))' with params: [(74029, 71755, 73678, 72017, 75967, 75151, 72969, 74976, 73968, 72393), '0.00', True, '1/2479/%', True, '1/2479/%', ('waiting', 'confirmed', 'partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL))' with params: [(16, 31), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL)) AND ("stock_move"."state" in %s))' with params: [(16, 31), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned'), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL))' with params: [(16, 31), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL))' with params: [(22208, 13403, 21501, 26054, 62259, 64085, 30488, 7430, 3096, 64535, 7330, 47168, 24401, 20129, 66897, 47584, 23468, 72972, 65115, 71347, 39064, 45150, 69271, 55724, 63406, 18121, 39906, 23188, 56769, 63714, 21771, 11328, 34619, 16677, 15714, 52566, 65110, 3497, 20894, 61062, 55790, 7326, 1167, 47093, 26099, 60159, 33139, 1064, 53397, 52443, 41904, 63465, 18017, 62767, 26180, 10781, 63310, 73409, 54851, 73761, 13254, 76367, 52964, 20235, 21174, 49036, 11661, 10985, 76457, 63122, 38998, 1225, 21209, 49891, 34645, 47976, 44823, 18022, 39477, 46830, 36473, 65851, 29526, 39394, 30470, 55909, 47560, 60550, 40773, 1284, 75984, 22841, 36170, 42947, 63769, 4591, 1835, 33210, 22904, 16801, 68167, 23284, 23587, 23425, 43362, 1646, 34986, 40311, 20125, 47864, 69423, 32067, 15831, 40289, 43080, 63539, 66164, 39913, 5284, 44853, 29356, 6146, 42364, 66779, 9135, 52497, 37945, 55865, 47176, 42344, 46826, 39656, 65448, 28494, 15704, 37479, 63652, 12364, 22484, 60256, 2177, 9894, 35218, 62794, 16706, 22299, 65175, 75787, 73632, 34749, 44202, 42282, 22572, 895, 64848, 34673, 7451, 19348, 56765, 71448, 52459, 37674, 73579, 11460, 22744, 23416, 3530, 23684, 42331, 11307, 60963, 56317, 1572, 69320, 71261, 64827, 21156, 35455, 63252, 53544, 22047, 52511, 52307, 19979, 13388, 51857, 21857, 25354, 10893, 19594, 55333, 5811, 1941, 12847, 69232, 52400, 20930, 66316, 74611, 72967, 53817, 23449, 72727, 59362, 48921, 21858, 69290, 74487, 75727, 19275, 45240, 52586, 9094, 71767, 65710, 21193, 63339, 18837, 53631, 3065, 47442, 41840, 75286, 22996, 5792, 72190, 35170, 35382, 23805, 9056, 16629, 63837, 74739, 75920, 19921, 48991, 18636, 13862, 2346, 75791, 56813, 16039, 43805, 53279, 63550, 21270, 28163, 60236, 62716, 21076, 10070, 22735, 37298, 56398, 43027, 39872, 65233, 19012, 71511, 7377, 20092, 56366, 3331, 21201, 16489, 33374, 21055, 22871, 828, 63870, 20962, 52192, 68767, 18076, 53626, 32031, 72576, 13354, 55890, 59330, 20469, 69011, 58321, 41799, 1497, 35311, 42485, 13678, 23111, 66163, 56548, 18895, 26082, 65838, 47227, 56587, 60815, 12122, 56477, 7439, 65330, 35433, 41800, 17781, 13568, 28384, 67413, 56810, 63162, 12901, 42976, 2189, 34671, 23224, 25314, 39411, 45153, 66889, 23157, 49709, 10898, 2217, 5887, 27950, 10583, 21755, 74667, 25345, 27786, 49636, 73278, 72598, 36419, 19332, 28285, 63601, 23048, 47877, 44299, 15407, 68979, 52599, 71669, 2207, 44854, 76327, 953, 20922, 62826, 7446, 28164, 2455, 3024, 37141, 60378, 54679, 56851, 60079, 56278, 43054, 52248, 63210, 62237, 20138, 56322, 26169, 19897, 54879, 13838, 2873, 19068, 71842, 13536, 37159, 16735, 19515, 18451, 64531, 19904, 37586, 920, 17705, 26556, 66385, 18679, 41953, 3551, 9892, 20964, 4414, 2966, 22526, 22982, 3324, 74631, 65594, 63170, 49966, 55551, 54771, 63562, 61069, 35101, 1389, 60620, 26004, 28343, 65595, 34293, 11179, 49662, 3791, 44304, 74919, 39841, 63690, 18422, 32462, 37864, 22544, 59390, 42166, 75831, 74460, 22332, 15707, 15850, 24337, 41853, 39605, 22799, 4252, 3523, 4392, 72550, 18898, 74733, 59337, 49961, 10816, 36741, 55851, 48961, 64097, 19380, 76082, 28086, 49799, 10809, 19647, 20294, 2157, 22110, 55406, 44944, 66075, 22087, 52625, 47218, 60434, 63738, 24416, 65093, 43436, 22595, 18792, 22149, 46849, 28374, 29579, 67299, 23572, 16719, 63650, 37316, 60230, 5874, 53906, 68950, 33270, 29508, 56291, 53762, 1084, 66094, 53494, 64206, 10579, 29771, 3484, 64195, 32364, 75379, 1981, 39870, 17775, 66629, 68495, 48957, 49807, 75526, 40776, 23380, 36738, 53359, 19578, 35791, 20127, 13533, 63148, 74686, 34372, 18536, 55284, 76218, 32082, 25991, 46758, 73402, 53381, 74977, 18271, 855, 60799, 10493, 65625, 3385, 41598, 34156, 34119, 27441, 9664, 4301, 73389, 7347, 43801, 76391, 62790, 28173, 21267, 49601, 30452, 61051, 53301, 40091, 64541, 13830, 1801, 62713, 35229, 53551, 32027, 22067, 75612, 53743, 66319, 69040, 49790, 32170, 65976, 2901, 34724, 42186, 65151, 26150, 66405, 15894, 55841, 74077, 55634, 64766, 18383, 66985, 47915, 23658, 13711, 23176, 63966, 68729, 64372, 28529, 32452, 69195, 1416, 39017, 32075, 35087, 19383, 65424, 2846, 23609, 2248, 36809, 1598, 16499, 11141, 13088, 43414, 43736, 48987, 29440, 17974, 49748, 40280, 47984, 12967, 4449, 11305, 3495, 21208, 62730, 36465, 23780, 5351, 5280, 20101, 18280, 26116, 47939, 46791, 5906, 26030, 40079, 64720, 16715, 55749, 49620, 17893, 74381, 23585, 22372, 18348, 63807, 31600, 39842, 13393, 43191, 31911, 66718, 2334, 47187, 69233, 64756, 65828, 72408, 66364, 52271, 20949, 34969, 36484, 73742, 69114, 60462, 60578, 66136, 72157, 5359, 8294, 22797, 65836, 13466, 35000, 53933, 53297, 1667, 35447, 75567, 76386, 47228, 60403, 18888, 53923, 75914, 72626, 24351, 71318, 28574, 35349, 49089, 68520, 18736, 1722, 49707, 66574, 15211, 36763, 43735, 54494, 72782, 15914, 39645, 64216, 73798, 40771, 68795, 64364, 36044, 65296, 2206, 53835, 12279, 22822, 68749, 35173, 10612, 17772, 16814, 68710, 19418, 56666, 15844, 41841, 35003, 68447, 20371, 13391, 58431, 39148, 9577, 55304, 39359, 44954, 9799, 65840, 71380, 28366, 2108, 18373, 35393, 17753, 56604, 23127, 53984, 37608, 47393, 39452, 7429, 19030, 67197, 54858, 1381, 27897, 31962, 68721, 52176, 2889, 42986, 43537, 26216, 71528, 38032, 37312, 66428, 71691, 23467, 10941, 64946, 39003, 3178, 13174, 52305, 69277, 22301, 42397, 5868, 16710, 4700, 26543, 68709, 28314, 43583, 5885, 39767, 60179, 19455, 13164, 51851, 12287, 35164, 9126, 63759, 71875, 65321, 23337, 1286, 28187, 60402, 56409, 36050, 63614, 39084, 71678, 20227, 7283, 66523, 12836, 19532, 47923, 13741, 18374, 65626, 19075, 43138, 12603, 44930, 32962, 43182, 55384, 18961, 56729, 74165, 66667, 71992, 75108, 23260, 19946, 41846, 43569, 36228, 62847, 37542, 64810, 56475, 12227, 58178, 19438, 18041, 1173, 43482, 32127, 43750, 46828, 23649, 53576, 4271, 60647, 58454, 55708, 3535, 32096, 71695, 34919, 8733, 39352, 59096, 67345, 47502, 63171, 3492, 47036, 75328, 27975, 1500, 62215, 53401, 60338, 19882, 59347, 36070, 36211, 65195, 952, 39888, 55359, 76446, 42448, 43678, 42350, 73391, 52546, 2897, 37872, 39147, 69375, 35430, 13205, 65221, 36662, 35376, 39333, 49558, 65085, 1962, 39234, 19951, 53432, 12420, 36219, 34898, 69321, 66443, 37455, 26278, 2122, 16589, 24328, 22271, 66063, 21183, 2357, 21751, 22198, 43118, 36343, 63173, 36309, 22601, 43825, 22552, 34868, 50086, 39883, 34711, 42999, 72913, 15793, 55560, 36811, 22762, 35069, 55529, 55751, 22787, 74411, 19729, 21749, 18560, 20179, 26007, 54877, 46810, 56883, 43604, 41790, 10529, 10842, 21296, 53313, 28035, 26153, 3456, 55898, 43144, 53460, 37138, 53573, 15855, 65550, 60267, 22322, 10743, 65589, 17951, 28185, 15956, 39112, 74966, 28140, 15769, 69224, 2339, 47174, 56268, 76462, 33371, 17935, 3317, 18163, 44925, 66848, 13220, 17777, 54732, 35171, 12167, 64270, 23211, 40735, 73046, 2394, 43121, 68491, 13569, 22516, 19044, 54029, 75736, 44950, 3401, 20393, 43235, 15665, 13323, 13963, 12123, 18249, 63910, 49647, 35317, 1967, 45209, 36318, 49855, 75377, 16566, 58452, 55492, 18634, 6157, 21151, 2092, 20364, 44325, 25250, 16845, 63620, 34326, 61035, 65570, 19090, 22794, 62831, 43547, 53398, 47861, 28481, 41117, 76208, 63479, 1504, 55637, 41796, 60556, 72672, 15719, 23774, 39880, 52998, 69041, 43101, 34114, 22337, 1990, 11120, 65246, 37690, 43226, 64497, 34650, 62364, 35111, 10779, 52488, 39781, 18033, 63120, 20402, 13665, 18226, 2067, 20454, 35300, 55871, 53017, 40911, 55268, 68328, 13151, 34796, 54128, 34841, 43155, 60030, 16553, 54476, 56659, 20953, 41877, 65363, 19668, 35146, 18019, 73864, 29703, 39457, 6186, 23560, 18370, 2261, 10851, 63755, 62902, 23612, 26175, 38954, 1902, 28484, 75647, 34320, 28572, 47085, 15226, 63397, 65530, 60626, 53949, 37830, 7260, 47999, 68741, 75825, 7268, 12163, 69261, 69130, 58944, 72309, 28360, 44080, 52609, 3490, 43190, 39582, 29384, 16524, 34755, 21197, 75824), '0.00', True, '1/2327/%', True, '1/2327/%', ('waiting', 'confirmed', 'partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL)) AND ("stock_move"."state" in %s))' with params: [(22208, 13403, 21501, 26054, 62259, 64085, 30488, 7430, 3096, 64535, 7330, 47168, 24401, 20129, 66897, 47584, 23468, 72972, 65115, 71347, 39064, 45150, 69271, 55724, 63406, 18121, 39906, 23188, 56769, 63714, 21771, 11328, 34619, 16677, 15714, 52566, 65110, 3497, 20894, 61062, 55790, 7326, 1167, 47093, 26099, 60159, 33139, 1064, 53397, 52443, 41904, 63465, 18017, 62767, 26180, 10781, 63310, 73409, 54851, 73761, 13254, 76367, 52964, 20235, 21174, 49036, 11661, 10985, 76457, 63122, 38998, 1225, 21209, 49891, 34645, 47976, 44823, 18022, 39477, 46830, 36473, 65851, 29526, 39394, 30470, 55909, 47560, 60550, 40773, 1284, 75984, 22841, 36170, 42947, 63769, 4591, 1835, 33210, 22904, 16801, 68167, 23284, 23587, 23425, 43362, 1646, 34986, 40311, 20125, 47864, 69423, 32067, 15831, 40289, 43080, 63539, 66164, 39913, 5284, 44853, 29356, 6146, 42364, 66779, 9135, 52497, 37945, 55865, 47176, 42344, 46826, 39656, 65448, 28494, 15704, 37479, 63652, 12364, 22484, 60256, 2177, 9894, 35218, 62794, 16706, 22299, 65175, 75787, 73632, 34749, 44202, 42282, 22572, 895, 64848, 34673, 7451, 19348, 56765, 71448, 52459, 37674, 73579, 11460, 22744, 23416, 3530, 23684, 42331, 11307, 60963, 56317, 1572, 69320, 71261, 64827, 21156, 35455, 63252, 53544, 22047, 52511, 52307, 19979, 13388, 51857, 21857, 25354, 10893, 19594, 55333, 5811, 1941, 12847, 69232, 52400, 20930, 66316, 74611, 72967, 53817, 23449, 72727, 59362, 48921, 21858, 69290, 74487, 75727, 19275, 45240, 52586, 9094, 71767, 65710, 21193, 63339, 18837, 53631, 3065, 47442, 41840, 75286, 22996, 5792, 72190, 35170, 35382, 23805, 9056, 16629, 63837, 74739, 75920, 19921, 48991, 18636, 13862, 2346, 75791, 56813, 16039, 43805, 53279, 63550, 21270, 28163, 60236, 62716, 21076, 10070, 22735, 37298, 56398, 43027, 39872, 65233, 19012, 71511, 7377, 20092, 56366, 3331, 21201, 16489, 33374, 21055, 22871, 828, 63870, 20962, 52192, 68767, 18076, 53626, 32031, 72576, 13354, 55890, 59330, 20469, 69011, 58321, 41799, 1497, 35311, 42485, 13678, 23111, 66163, 56548, 18895, 26082, 65838, 47227, 56587, 60815, 12122, 56477, 7439, 65330, 35433, 41800, 17781, 13568, 28384, 67413, 56810, 63162, 12901, 42976, 2189, 34671, 23224, 25314, 39411, 45153, 66889, 23157, 49709, 10898, 2217, 5887, 27950, 10583, 21755, 74667, 25345, 27786, 49636, 73278, 72598, 36419, 19332, 28285, 63601, 23048, 47877, 44299, 15407, 68979, 52599, 71669, 2207, 44854, 76327, 953, 20922, 62826, 7446, 28164, 2455, 3024, 37141, 60378, 54679, 56851, 60079, 56278, 43054, 52248, 63210, 62237, 20138, 56322, 26169, 19897, 54879, 13838, 2873, 19068, 71842, 13536, 37159, 16735, 19515, 18451, 64531, 19904, 37586, 920, 17705, 26556, 66385, 18679, 41953, 3551, 9892, 20964, 4414, 2966, 22526, 22982, 3324, 74631, 65594, 63170, 49966, 55551, 54771, 63562, 61069, 35101, 1389, 60620, 26004, 28343, 65595, 34293, 11179, 49662, 3791, 44304, 74919, 39841, 63690, 18422, 32462, 37864, 22544, 59390, 42166, 75831, 74460, 22332, 15707, 15850, 24337, 41853, 39605, 22799, 4252, 3523, 4392, 72550, 18898, 74733, 59337, 49961, 10816, 36741, 55851, 48961, 64097, 19380, 76082, 28086, 49799, 10809, 19647, 20294, 2157, 22110, 55406, 44944, 66075, 22087, 52625, 47218, 60434, 63738, 24416, 65093, 43436, 22595, 18792, 22149, 46849, 28374, 29579, 67299, 23572, 16719, 63650, 37316, 60230, 5874, 53906, 68950, 33270, 29508, 56291, 53762, 1084, 66094, 53494, 64206, 10579, 29771, 3484, 64195, 32364, 75379, 1981, 39870, 17775, 66629, 68495, 48957, 49807, 75526, 40776, 23380, 36738, 53359, 19578, 35791, 20127, 13533, 63148, 74686, 34372, 18536, 55284, 76218, 32082, 25991, 46758, 73402, 53381, 74977, 18271, 855, 60799, 10493, 65625, 3385, 41598, 34156, 34119, 27441, 9664, 4301, 73389, 7347, 43801, 76391, 62790, 28173, 21267, 49601, 30452, 61051, 53301, 40091, 64541, 13830, 1801, 62713, 35229, 53551, 32027, 22067, 75612, 53743, 66319, 69040, 49790, 32170, 65976, 2901, 34724, 42186, 65151, 26150, 66405, 15894, 55841, 74077, 55634, 64766, 18383, 66985, 47915, 23658, 13711, 23176, 63966, 68729, 64372, 28529, 32452, 69195, 1416, 39017, 32075, 35087, 19383, 65424, 2846, 23609, 2248, 36809, 1598, 16499, 11141, 13088, 43414, 43736, 48987, 29440, 17974, 49748, 40280, 47984, 12967, 4449, 11305, 3495, 21208, 62730, 36465, 23780, 5351, 5280, 20101, 18280, 26116, 47939, 46791, 5906, 26030, 40079, 64720, 16715, 55749, 49620, 17893, 74381, 23585, 22372, 18348, 63807, 31600, 39842, 13393, 43191, 31911, 66718, 2334, 47187, 69233, 64756, 65828, 72408, 66364, 52271, 20949, 34969, 36484, 73742, 69114, 60462, 60578, 66136, 72157, 5359, 8294, 22797, 65836, 13466, 35000, 53933, 53297, 1667, 35447, 75567, 76386, 47228, 60403, 18888, 53923, 75914, 72626, 24351, 71318, 28574, 35349, 49089, 68520, 18736, 1722, 49707, 66574, 15211, 36763, 43735, 54494, 72782, 15914, 39645, 64216, 73798, 40771, 68795, 64364, 36044, 65296, 2206, 53835, 12279, 22822, 68749, 35173, 10612, 17772, 16814, 68710, 19418, 56666, 15844, 41841, 35003, 68447, 20371, 13391, 58431, 39148, 9577, 55304, 39359, 44954, 9799, 65840, 71380, 28366, 2108, 18373, 35393, 17753, 56604, 23127, 53984, 37608, 47393, 39452, 7429, 19030, 67197, 54858, 1381, 27897, 31962, 68721, 52176, 2889, 42986, 43537, 26216, 71528, 38032, 37312, 66428, 71691, 23467, 10941, 64946, 39003, 3178, 13174, 52305, 69277, 22301, 42397, 5868, 16710, 4700, 26543, 68709, 28314, 43583, 5885, 39767, 60179, 19455, 13164, 51851, 12287, 35164, 9126, 63759, 71875, 65321, 23337, 1286, 28187, 60402, 56409, 36050, 63614, 39084, 71678, 20227, 7283, 66523, 12836, 19532, 47923, 13741, 18374, 65626, 19075, 43138, 12603, 44930, 32962, 43182, 55384, 18961, 56729, 74165, 66667, 71992, 75108, 23260, 19946, 41846, 43569, 36228, 62847, 37542, 64810, 56475, 12227, 58178, 19438, 18041, 1173, 43482, 32127, 43750, 46828, 23649, 53576, 4271, 60647, 58454, 55708, 3535, 32096, 71695, 34919, 8733, 39352, 59096, 67345, 47502, 63171, 3492, 47036, 75328, 27975, 1500, 62215, 53401, 60338, 19882, 59347, 36070, 36211, 65195, 952, 39888, 55359, 76446, 42448, 43678, 42350, 73391, 52546, 2897, 37872, 39147, 69375, 35430, 13205, 65221, 36662, 35376, 39333, 49558, 65085, 1962, 39234, 19951, 53432, 12420, 36219, 34898, 69321, 66443, 37455, 26278, 2122, 16589, 24328, 22271, 66063, 21183, 2357, 21751, 22198, 43118, 36343, 63173, 36309, 22601, 43825, 22552, 34868, 50086, 39883, 34711, 42999, 72913, 15793, 55560, 36811, 22762, 35069, 55529, 55751, 22787, 74411, 19729, 21749, 18560, 20179, 26007, 54877, 46810, 56883, 43604, 41790, 10529, 10842, 21296, 53313, 28035, 26153, 3456, 55898, 43144, 53460, 37138, 53573, 15855, 65550, 60267, 22322, 10743, 65589, 17951, 28185, 15956, 39112, 74966, 28140, 15769, 69224, 2339, 47174, 56268, 76462, 33371, 17935, 3317, 18163, 44925, 66848, 13220, 17777, 54732, 35171, 12167, 64270, 23211, 40735, 73046, 2394, 43121, 68491, 13569, 22516, 19044, 54029, 75736, 44950, 3401, 20393, 43235, 15665, 13323, 13963, 12123, 18249, 63910, 49647, 35317, 1967, 45209, 36318, 49855, 75377, 16566, 58452, 55492, 18634, 6157, 21151, 2092, 20364, 44325, 25250, 16845, 63620, 34326, 61035, 65570, 19090, 22794, 62831, 43547, 53398, 47861, 28481, 41117, 76208, 63479, 1504, 55637, 41796, 60556, 72672, 15719, 23774, 39880, 52998, 69041, 43101, 34114, 22337, 1990, 11120, 65246, 37690, 43226, 64497, 34650, 62364, 35111, 10779, 52488, 39781, 18033, 63120, 20402, 13665, 18226, 2067, 20454, 35300, 55871, 53017, 40911, 55268, 68328, 13151, 34796, 54128, 34841, 43155, 60030, 16553, 54476, 56659, 20953, 41877, 65363, 19668, 35146, 18019, 73864, 29703, 39457, 6186, 23560, 18370, 2261, 10851, 63755, 62902, 23612, 26175, 38954, 1902, 28484, 75647, 34320, 28572, 47085, 15226, 63397, 65530, 60626, 53949, 37830, 7260, 47999, 68741, 75825, 7268, 12163, 69261, 69130, 58944, 72309, 28360, 44080, 52609, 3490, 43190, 39582, 29384, 16524, 34755, 21197, 75824), '0.00', True, '1/2327/%', True, '1/2327/%', ('waiting', 'confirmed', 'partially_available', 'assigned'), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL))' with params: [(22208, 13403, 21501, 26054, 62259, 64085, 30488, 7430, 3096, 64535, 7330, 47168, 24401, 20129, 66897, 47584, 23468, 72972, 65115, 71347, 39064, 45150, 69271, 55724, 63406, 18121, 39906, 23188, 56769, 63714, 21771, 11328, 34619, 16677, 15714, 52566, 65110, 3497, 20894, 61062, 55790, 7326, 1167, 47093, 26099, 60159, 33139, 1064, 53397, 52443, 41904, 63465, 18017, 62767, 26180, 10781, 63310, 73409, 54851, 73761, 13254, 76367, 52964, 20235, 21174, 49036, 11661, 10985, 76457, 63122, 38998, 1225, 21209, 49891, 34645, 47976, 44823, 18022, 39477, 46830, 36473, 65851, 29526, 39394, 30470, 55909, 47560, 60550, 40773, 1284, 75984, 22841, 36170, 42947, 63769, 4591, 1835, 33210, 22904, 16801, 68167, 23284, 23587, 23425, 43362, 1646, 34986, 40311, 20125, 47864, 69423, 32067, 15831, 40289, 43080, 63539, 66164, 39913, 5284, 44853, 29356, 6146, 42364, 66779, 9135, 52497, 37945, 55865, 47176, 42344, 46826, 39656, 65448, 28494, 15704, 37479, 63652, 12364, 22484, 60256, 2177, 9894, 35218, 62794, 16706, 22299, 65175, 75787, 73632, 34749, 44202, 42282, 22572, 895, 64848, 34673, 7451, 19348, 56765, 71448, 52459, 37674, 73579, 11460, 22744, 23416, 3530, 23684, 42331, 11307, 60963, 56317, 1572, 69320, 71261, 64827, 21156, 35455, 63252, 53544, 22047, 52511, 52307, 19979, 13388, 51857, 21857, 25354, 10893, 19594, 55333, 5811, 1941, 12847, 69232, 52400, 20930, 66316, 74611, 72967, 53817, 23449, 72727, 59362, 48921, 21858, 69290, 74487, 75727, 19275, 45240, 52586, 9094, 71767, 65710, 21193, 63339, 18837, 53631, 3065, 47442, 41840, 75286, 22996, 5792, 72190, 35170, 35382, 23805, 9056, 16629, 63837, 74739, 75920, 19921, 48991, 18636, 13862, 2346, 75791, 56813, 16039, 43805, 53279, 63550, 21270, 28163, 60236, 62716, 21076, 10070, 22735, 37298, 56398, 43027, 39872, 65233, 19012, 71511, 7377, 20092, 56366, 3331, 21201, 16489, 33374, 21055, 22871, 828, 63870, 20962, 52192, 68767, 18076, 53626, 32031, 72576, 13354, 55890, 59330, 20469, 69011, 58321, 41799, 1497, 35311, 42485, 13678, 23111, 66163, 56548, 18895, 26082, 65838, 47227, 56587, 60815, 12122, 56477, 7439, 65330, 35433, 41800, 17781, 13568, 28384, 67413, 56810, 63162, 12901, 42976, 2189, 34671, 23224, 25314, 39411, 45153, 66889, 23157, 49709, 10898, 2217, 5887, 27950, 10583, 21755, 74667, 25345, 27786, 49636, 73278, 72598, 36419, 19332, 28285, 63601, 23048, 47877, 44299, 15407, 68979, 52599, 71669, 2207, 44854, 76327, 953, 20922, 62826, 7446, 28164, 2455, 3024, 37141, 60378, 54679, 56851, 60079, 56278, 43054, 52248, 63210, 62237, 20138, 56322, 26169, 19897, 54879, 13838, 2873, 19068, 71842, 13536, 37159, 16735, 19515, 18451, 64531, 19904, 37586, 920, 17705, 26556, 66385, 18679, 41953, 3551, 9892, 20964, 4414, 2966, 22526, 22982, 3324, 74631, 65594, 63170, 49966, 55551, 54771, 63562, 61069, 35101, 1389, 60620, 26004, 28343, 65595, 34293, 11179, 49662, 3791, 44304, 74919, 39841, 63690, 18422, 32462, 37864, 22544, 59390, 42166, 75831, 74460, 22332, 15707, 15850, 24337, 41853, 39605, 22799, 4252, 3523, 4392, 72550, 18898, 74733, 59337, 49961, 10816, 36741, 55851, 48961, 64097, 19380, 76082, 28086, 49799, 10809, 19647, 20294, 2157, 22110, 55406, 44944, 66075, 22087, 52625, 47218, 60434, 63738, 24416, 65093, 43436, 22595, 18792, 22149, 46849, 28374, 29579, 67299, 23572, 16719, 63650, 37316, 60230, 5874, 53906, 68950, 33270, 29508, 56291, 53762, 1084, 66094, 53494, 64206, 10579, 29771, 3484, 64195, 32364, 75379, 1981, 39870, 17775, 66629, 68495, 48957, 49807, 75526, 40776, 23380, 36738, 53359, 19578, 35791, 20127, 13533, 63148, 74686, 34372, 18536, 55284, 76218, 32082, 25991, 46758, 73402, 53381, 74977, 18271, 855, 60799, 10493, 65625, 3385, 41598, 34156, 34119, 27441, 9664, 4301, 73389, 7347, 43801, 76391, 62790, 28173, 21267, 49601, 30452, 61051, 53301, 40091, 64541, 13830, 1801, 62713, 35229, 53551, 32027, 22067, 75612, 53743, 66319, 69040, 49790, 32170, 65976, 2901, 34724, 42186, 65151, 26150, 66405, 15894, 55841, 74077, 55634, 64766, 18383, 66985, 47915, 23658, 13711, 23176, 63966, 68729, 64372, 28529, 32452, 69195, 1416, 39017, 32075, 35087, 19383, 65424, 2846, 23609, 2248, 36809, 1598, 16499, 11141, 13088, 43414, 43736, 48987, 29440, 17974, 49748, 40280, 47984, 12967, 4449, 11305, 3495, 21208, 62730, 36465, 23780, 5351, 5280, 20101, 18280, 26116, 47939, 46791, 5906, 26030, 40079, 64720, 16715, 55749, 49620, 17893, 74381, 23585, 22372, 18348, 63807, 31600, 39842, 13393, 43191, 31911, 66718, 2334, 47187, 69233, 64756, 65828, 72408, 66364, 52271, 20949, 34969, 36484, 73742, 69114, 60462, 60578, 66136, 72157, 5359, 8294, 22797, 65836, 13466, 35000, 53933, 53297, 1667, 35447, 75567, 76386, 47228, 60403, 18888, 53923, 75914, 72626, 24351, 71318, 28574, 35349, 49089, 68520, 18736, 1722, 49707, 66574, 15211, 36763, 43735, 54494, 72782, 15914, 39645, 64216, 73798, 40771, 68795, 64364, 36044, 65296, 2206, 53835, 12279, 22822, 68749, 35173, 10612, 17772, 16814, 68710, 19418, 56666, 15844, 41841, 35003, 68447, 20371, 13391, 58431, 39148, 9577, 55304, 39359, 44954, 9799, 65840, 71380, 28366, 2108, 18373, 35393, 17753, 56604, 23127, 53984, 37608, 47393, 39452, 7429, 19030, 67197, 54858, 1381, 27897, 31962, 68721, 52176, 2889, 42986, 43537, 26216, 71528, 38032, 37312, 66428, 71691, 23467, 10941, 64946, 39003, 3178, 13174, 52305, 69277, 22301, 42397, 5868, 16710, 4700, 26543, 68709, 28314, 43583, 5885, 39767, 60179, 19455, 13164, 51851, 12287, 35164, 9126, 63759, 71875, 65321, 23337, 1286, 28187, 60402, 56409, 36050, 63614, 39084, 71678, 20227, 7283, 66523, 12836, 19532, 47923, 13741, 18374, 65626, 19075, 43138, 12603, 44930, 32962, 43182, 55384, 18961, 56729, 74165, 66667, 71992, 75108, 23260, 19946, 41846, 43569, 36228, 62847, 37542, 64810, 56475, 12227, 58178, 19438, 18041, 1173, 43482, 32127, 43750, 46828, 23649, 53576, 4271, 60647, 58454, 55708, 3535, 32096, 71695, 34919, 8733, 39352, 59096, 67345, 47502, 63171, 3492, 47036, 75328, 27975, 1500, 62215, 53401, 60338, 19882, 59347, 36070, 36211, 65195, 952, 39888, 55359, 76446, 42448, 43678, 42350, 73391, 52546, 2897, 37872, 39147, 69375, 35430, 13205, 65221, 36662, 35376, 39333, 49558, 65085, 1962, 39234, 19951, 53432, 12420, 36219, 34898, 69321, 66443, 37455, 26278, 2122, 16589, 24328, 22271, 66063, 21183, 2357, 21751, 22198, 43118, 36343, 63173, 36309, 22601, 43825, 22552, 34868, 50086, 39883, 34711, 42999, 72913, 15793, 55560, 36811, 22762, 35069, 55529, 55751, 22787, 74411, 19729, 21749, 18560, 20179, 26007, 54877, 46810, 56883, 43604, 41790, 10529, 10842, 21296, 53313, 28035, 26153, 3456, 55898, 43144, 53460, 37138, 53573, 15855, 65550, 60267, 22322, 10743, 65589, 17951, 28185, 15956, 39112, 74966, 28140, 15769, 69224, 2339, 47174, 56268, 76462, 33371, 17935, 3317, 18163, 44925, 66848, 13220, 17777, 54732, 35171, 12167, 64270, 23211, 40735, 73046, 2394, 43121, 68491, 13569, 22516, 19044, 54029, 75736, 44950, 3401, 20393, 43235, 15665, 13323, 13963, 12123, 18249, 63910, 49647, 35317, 1967, 45209, 36318, 49855, 75377, 16566, 58452, 55492, 18634, 6157, 21151, 2092, 20364, 44325, 25250, 16845, 63620, 34326, 61035, 65570, 19090, 22794, 62831, 43547, 53398, 47861, 28481, 41117, 76208, 63479, 1504, 55637, 41796, 60556, 72672, 15719, 23774, 39880, 52998, 69041, 43101, 34114, 22337, 1990, 11120, 65246, 37690, 43226, 64497, 34650, 62364, 35111, 10779, 52488, 39781, 18033, 63120, 20402, 13665, 18226, 2067, 20454, 35300, 55871, 53017, 40911, 55268, 68328, 13151, 34796, 54128, 34841, 43155, 60030, 16553, 54476, 56659, 20953, 41877, 65363, 19668, 35146, 18019, 73864, 29703, 39457, 6186, 23560, 18370, 2261, 10851, 63755, 62902, 23612, 26175, 38954, 1902, 28484, 75647, 34320, 28572, 47085, 15226, 63397, 65530, 60626, 53949, 37830, 7260, 47999, 68741, 75825, 7268, 12163, 69261, 69130, 58944, 72309, 28360, 44080, 52609, 3490, 43190, 39582, 29384, 16524, 34755, 21197, 75824), '0.00', True, '1/2327/%', True, '1/2327/%', ('waiting', 'confirmed', 'partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL))' with params: [(12843, 18843, 47764, 53001, 30440, 61044, 19834, 40279, 76252, 56875, 64349, 1948, 65839, 38498, 68785, 39411, 67005, 16666, 37657, 8771, 53769, 56664, 28355, 53839, 6099, 19645, 23628, 75750, 63263, 63558, 60626, 8792, 69087, 17993, 63821, 69001, 20070, 7321, 75370, 56849, 17603, 43859, 75924, 2221, 52179, 38962, 21153, 54024, 6227, 12242, 3382, 4575, 52982, 42275, 32181, 64109, 70396, 8672, 9636, 66421, 24383, 44742, 53555, 37624, 22854, 34155, 24425, 19578, 26052, 34974, 39220, 65507, 40131, 47898, 73009, 36309, 47841, 71372, 4564, 56480, 34945, 39926, 66072, 39665, 69176, 49001, 52079, 24249, 62266, 2375, 6079, 2090, 12115, 74131, 13497, 18952, 8799, 74126, 1877, 32066, 40117, 8695, 66556, 45211, 63146, 65164, 36131, 55548, 37352, 44228, 12220, 18472, 9138, 39576, 23087, 10630, 60357, 49579, 1934, 1838, 7313, 53412, 3788, 39845, 23760, 7344, 22532, 17955, 18266, 43099, 63764, 54485, 54116, 56312, 43208, 22617, 38946, 23818, 51883, 35008, 20203, 65408, 24157, 38248, 72586, 34847, 53994, 19029, 1071, 12880, 20083, 36212, 54446, 62903, 52195, 42322, 54085, 34591, 3216, 39015, 22179, 5910, 71861, 76015, 1717, 43371, 13871, 53525, 37384, 22207, 64233, 13788, 12391, 62792, 22183, 65295, 44233, 33156, 22160, 10478, 42099, 63006, 68752, 40033, 10838, 12241, 30485, 37921, 67374, 47468, 37267, 65495, 49626, 75636, 68318, 59145, 7441, 19493, 12591, 13901, 44973, 3499, 71701, 15828, 71831, 74121, 63914, 59413, 34678, 75288, 4461, 69378, 65208, 12967, 9661, 64243, 52313, 75871, 2276, 73097, 12299, 4543, 24243, 58427, 75510, 25970, 26129, 47042, 22064, 1606, 19414, 45152, 56620, 43121, 53462, 34882, 64785, 36369, 34748, 41767, 71943, 22266, 52142, 43529, 7406, 41587, 27954, 18419, 12213, 22347, 43464, 64068, 34613, 37563, 15851, 29245, 9664, 66169, 22442, 40185, 42462, 52934, 1745, 74357, 55414, 38965, 19298, 26522, 34794, 18958, 1454, 43572, 68331, 55757, 52393, 19542, 42978, 2180, 72272, 68497, 34773, 17872, 53574, 18072, 35297, 15125, 75514, 23301, 63141, 47546, 34679, 44917, 23669, 6175, 20279, 20204, 62212, 62942, 73990, 31590, 73817, 21859, 74238, 22518, 75063, 12332, 73866, 37902, 63777, 3074, 62302, 55609, 1886, 888, 56805, 53604, 72186, 35379, 54782, 66789, 19462, 43830, 13305, 39534, 20679, 43190, 38993, 7364, 19730, 34148, 52589, 75182, 35471, 43314, 23600, 76257, 43553, 55762, 45147, 18130, 20928, 3277, 3018, 39399, 22544, 2343, 35260, 73625, 69178, 43497, 3506, 23124, 63657, 22365, 47950, 54727, 43068, 35056, 20039, 37548, 1854, 62354, 13035, 36431, 26290, 53480, 65497, 39405, 18725, 6100, 13307, 72530, 58434, 43010, 75709, 1673, 22026, 63023, 20266, 3366, 44951, 3066, 2146, 5814, 68200, 7383, 72804, 66661, 18948, 66176, 29722, 55829, 53030, 35123, 13220, 20269, 48978, 66560, 41969, 56612, 48996, 23431, 63963, 13172, 15904, 42357, 47892, 8260, 8263, 60800, 63565, 43076, 23204, 75404, 63840, 43238, 37448, 49879, 6168, 63009, 39871, 33207, 32065, 43478, 16717, 5350, 4252, 7306, 65082, 60158, 71785, 29378, 75491, 76256, 23005, 39873, 64025, 71790, 71707, 13617, 43539, 59029, 33255, 36476, 18726, 35184, 23532, 33189, 15622, 37691, 47955, 52390, 16545, 22849, 22214, 69261, 38948, 65141, 13500, 19262, 3254, 21183, 65083, 2293, 4496, 32001, 28231, 38956, 60559, 7289, 74494, 12315, 36423, 16504, 55944, 56412, 41821, 58433, 63139, 52329, 72730, 56469, 34688, 32097, 54534, 63800, 39305, 9070, 23813, 47540, 55648, 35396, 54051, 47223, 30401, 72606, 47741, 12556, 47449, 56438, 63885, 15211, 52416, 39114, 68833, 16034, 52631, 9911, 53177, 2188, 36066, 6137, 15898, 43666, 2207, 49887, 41606, 12314, 23335, 47993, 1942, 43551, 3764, 21218, 13314, 44142, 12927, 60239, 62293, 22684, 59088, 16739, 39566, 43672, 37356, 60294, 2857, 47871, 8644, 39408, 64815, 13126, 69350, 76444, 17816, 74177, 65168, 46854, 27457, 1487, 42021, 2011, 64183, 28009, 47253, 19988, 3481, 54125, 2069, 56365, 9119, 24210, 50118, 49684, 75885, 72999, 12523, 55470, 37577, 34713, 56912, 49839, 30384, 22549, 37845, 53430, 72074, 23396, 18080, 3789, 40321, 47098, 59147, 52145, 31992, 13129, 18776, 20209, 1726, 63167, 22354, 63978, 68322, 51831, 32032, 39217, 29522, 75974, 22472, 49666, 63137, 60351, 19551, 53573, 53490, 44238, 23762, 4581, 13098, 55525, 71304, 24181, 5859, 10984, 15892, 74288, 39829, 34564, 58435, 21747, 49007, 18491, 47953, 60431, 59059, 13203, 35063, 52321, 18301, 37639, 68203, 4351, 22408, 39116, 52316, 44891, 71857, 43341, 56375, 39372, 56444, 12123, 66699, 75371, 40118, 18502, 67187, 16493, 18568, 34805, 47936, 26104, 46873, 12406, 47074, 49577, 46783, 3769, 66869, 1116, 47909, 28360, 13187, 31597, 18575, 3558, 74042, 60423, 39451, 49861, 37538, 23093, 23392, 72892, 65542, 15417, 33185, 6225, 45182, 3447, 38963, 23318, 36325, 65723, 62982, 58986, 945, 49060, 52626, 21241, 37844, 64710, 35796, 32979, 34424, 47386, 54134, 26000, 2117, 23527, 1539, 37861, 17839, 36128, 65611, 55692, 34877, 54513, 49042, 53024, 42980, 37539, 10885, 23810, 68169, 67284, 37831, 64990, 56559, 68517, 36705, 69007, 71278, 58485, 34652, 66596, 74023, 22456, 34619, 59356, 64372, 63643, 23340, 22776, 73027, 70426, 6219, 26568, 44942, 66738, 19276, 7350, 33200, 54889, 19925, 34880, 48965, 34388, 3353, 27426, 24369, 15483, 19024, 32169, 52938, 52368, 53602, 60649, 23173, 49033, 34792, 53534, 9654, 58836, 22632, 10615, 43486, 22319, 31601, 20476, 43290, 37469, 24191, 1850, 22369, 1792, 26585, 21088, 63754, 12321, 37612, 18620, 64304, 26534, 22022, 2083, 23235, 5309, 68286, 55833, 18865, 31602, 3173, 60652, 47263, 15722, 2093, 63611, 11168, 43985, 75687, 19090, 7429, 33127, 75127, 41982, 10850, 10576, 41109, 40223, 22735, 13205, 8635, 43973, 48945, 69071, 7345, 34647, 9631, 70393, 46655, 17891, 38024, 66667, 65798, 18163, 9898, 22360, 16796, 22683, 68816, 26710, 49793, 73543, 24344, 23486, 75714, 9628, 37338, 9928, 19680, 65195, 64055, 46846, 13895, 2420, 49673, 55546, 56554, 53122, 43595, 48952, 56688, 41911, 4476, 42004, 61476, 20938, 12957, 1605, 29555, 69287, 34906, 10522, 52460, 8690, 39157, 32152, 19325, 76462, 41013, 39994, 64977, 12969, 19604, 13309, 22370, 46746, 47488, 1727, 56683, 7284, 36703, 53017, 28218, 47986, 32954, 37339, 19832, 17762, 47251, 40907, 49741, 38758, 33294, 63584, 56910, 52447, 36201, 63419, 8732, 65159, 66985, 43967, 18136, 67298, 37597, 58428, 22051, 20251, 55839, 39308, 42305, 3776, 29451, 54870, 52110, 65007, 71781, 855, 22691, 67334, 49644, 53864, 60550, 22824, 36446, 65487, 23828, 16812, 59178, 23710, 4693, 2887, 8265, 75781, 68559, 67211, 26070, 71912, 15740, 65048, 18251, 41944, 62345, 48918, 19018, 42287, 44829, 19873, 45245, 21737, 13244, 7285, 29412, 12339, 19458, 49685, 66803, 55474, 6058, 19858, 75347, 47225, 67082, 19001, 23679, 60599, 63681, 29763, 24235, 64902, 43522, 74195, 1899, 13654, 74669, 74179, 18833, 37412, 72129, 22301, 65026, 23168, 9090, 41017, 68509, 13252, 71596, 73830, 2064, 10717, 3126, 44111, 28330, 31959, 36113, 10815, 52227, 63877, 18884, 55695, 3581, 65341, 27804, 54854, 65089, 10942, 39791, 56874, 52948, 19281, 56675, 60302, 53473, 28297, 23775, 1547, 64066, 12061, 22205, 64206, 23127, 47411, 66093, 40220, 36263, 6215, 65148, 19877, 66976, 66735, 67351, 4358, 10461, 22196, 35054, 56421, 65435, 22359, 28070, 29373, 18800, 62796, 65599, 39651, 29454, 13354, 2031, 3171, 70422, 26613, 26075, 12255, 39290, 43385, 21147, 60693, 36147, 23285, 52202, 63649, 60402, 11299, 22055, 37785, 74968, 32177, 40201, 50097, 17937, 13124, 2910, 45077, 962, 55485, 19391, 3642, 52957, 63843, 76476, 1600, 64759, 73694, 43601, 55529, 71759, 42328, 62246, 29170, 65472, 41949, 22614, 18652, 13570, 53280, 68998, 22202, 2944, 53289, 3370, 7166, 47923, 39670, 42071, 49814, 72322, 25815, 34872, 3188, 39266, 64740, 7271, 43027, 76349, 39937, 52408, 30376, 6212, 21150, 18418, 25270, 44322, 13721, 64394, 62725, 4493, 36111, 52146, 74135, 21505), '0.00', True, '1/2319/%', True, '1/2319/%', ('waiting', 'confirmed', 'partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL)) AND ("stock_move"."state" in %s))' with params: [(12843, 18843, 47764, 53001, 30440, 61044, 19834, 40279, 76252, 56875, 64349, 1948, 65839, 38498, 68785, 39411, 67005, 16666, 37657, 8771, 53769, 56664, 28355, 53839, 6099, 19645, 23628, 75750, 63263, 63558, 60626, 8792, 69087, 17993, 63821, 69001, 20070, 7321, 75370, 56849, 17603, 43859, 75924, 2221, 52179, 38962, 21153, 54024, 6227, 12242, 3382, 4575, 52982, 42275, 32181, 64109, 70396, 8672, 9636, 66421, 24383, 44742, 53555, 37624, 22854, 34155, 24425, 19578, 26052, 34974, 39220, 65507, 40131, 47898, 73009, 36309, 47841, 71372, 4564, 56480, 34945, 39926, 66072, 39665, 69176, 49001, 52079, 24249, 62266, 2375, 6079, 2090, 12115, 74131, 13497, 18952, 8799, 74126, 1877, 32066, 40117, 8695, 66556, 45211, 63146, 65164, 36131, 55548, 37352, 44228, 12220, 18472, 9138, 39576, 23087, 10630, 60357, 49579, 1934, 1838, 7313, 53412, 3788, 39845, 23760, 7344, 22532, 17955, 18266, 43099, 63764, 54485, 54116, 56312, 43208, 22617, 38946, 23818, 51883, 35008, 20203, 65408, 24157, 38248, 72586, 34847, 53994, 19029, 1071, 12880, 20083, 36212, 54446, 62903, 52195, 42322, 54085, 34591, 3216, 39015, 22179, 5910, 71861, 76015, 1717, 43371, 13871, 53525, 37384, 22207, 64233, 13788, 12391, 62792, 22183, 65295, 44233, 33156, 22160, 10478, 42099, 63006, 68752, 40033, 10838, 12241, 30485, 37921, 67374, 47468, 37267, 65495, 49626, 75636, 68318, 59145, 7441, 19493, 12591, 13901, 44973, 3499, 71701, 15828, 71831, 74121, 63914, 59413, 34678, 75288, 4461, 69378, 65208, 12967, 9661, 64243, 52313, 75871, 2276, 73097, 12299, 4543, 24243, 58427, 75510, 25970, 26129, 47042, 22064, 1606, 19414, 45152, 56620, 43121, 53462, 34882, 64785, 36369, 34748, 41767, 71943, 22266, 52142, 43529, 7406, 41587, 27954, 18419, 12213, 22347, 43464, 64068, 34613, 37563, 15851, 29245, 9664, 66169, 22442, 40185, 42462, 52934, 1745, 74357, 55414, 38965, 19298, 26522, 34794, 18958, 1454, 43572, 68331, 55757, 52393, 19542, 42978, 2180, 72272, 68497, 34773, 17872, 53574, 18072, 35297, 15125, 75514, 23301, 63141, 47546, 34679, 44917, 23669, 6175, 20279, 20204, 62212, 62942, 73990, 31590, 73817, 21859, 74238, 22518, 75063, 12332, 73866, 37902, 63777, 3074, 62302, 55609, 1886, 888, 56805, 53604, 72186, 35379, 54782, 66789, 19462, 43830, 13305, 39534, 20679, 43190, 38993, 7364, 19730, 34148, 52589, 75182, 35471, 43314, 23600, 76257, 43553, 55762, 45147, 18130, 20928, 3277, 3018, 39399, 22544, 2343, 35260, 73625, 69178, 43497, 3506, 23124, 63657, 22365, 47950, 54727, 43068, 35056, 20039, 37548, 1854, 62354, 13035, 36431, 26290, 53480, 65497, 39405, 18725, 6100, 13307, 72530, 58434, 43010, 75709, 1673, 22026, 63023, 20266, 3366, 44951, 3066, 2146, 5814, 68200, 7383, 72804, 66661, 18948, 66176, 29722, 55829, 53030, 35123, 13220, 20269, 48978, 66560, 41969, 56612, 48996, 23431, 63963, 13172, 15904, 42357, 47892, 8260, 8263, 60800, 63565, 43076, 23204, 75404, 63840, 43238, 37448, 49879, 6168, 63009, 39871, 33207, 32065, 43478, 16717, 5350, 4252, 7306, 65082, 60158, 71785, 29378, 75491, 76256, 23005, 39873, 64025, 71790, 71707, 13617, 43539, 59029, 33255, 36476, 18726, 35184, 23532, 33189, 15622, 37691, 47955, 52390, 16545, 22849, 22214, 69261, 38948, 65141, 13500, 19262, 3254, 21183, 65083, 2293, 4496, 32001, 28231, 38956, 60559, 7289, 74494, 12315, 36423, 16504, 55944, 56412, 41821, 58433, 63139, 52329, 72730, 56469, 34688, 32097, 54534, 63800, 39305, 9070, 23813, 47540, 55648, 35396, 54051, 47223, 30401, 72606, 47741, 12556, 47449, 56438, 63885, 15211, 52416, 39114, 68833, 16034, 52631, 9911, 53177, 2188, 36066, 6137, 15898, 43666, 2207, 49887, 41606, 12314, 23335, 47993, 1942, 43551, 3764, 21218, 13314, 44142, 12927, 60239, 62293, 22684, 59088, 16739, 39566, 43672, 37356, 60294, 2857, 47871, 8644, 39408, 64815, 13126, 69350, 76444, 17816, 74177, 65168, 46854, 27457, 1487, 42021, 2011, 64183, 28009, 47253, 19988, 3481, 54125, 2069, 56365, 9119, 24210, 50118, 49684, 75885, 72999, 12523, 55470, 37577, 34713, 56912, 49839, 30384, 22549, 37845, 53430, 72074, 23396, 18080, 3789, 40321, 47098, 59147, 52145, 31992, 13129, 18776, 20209, 1726, 63167, 22354, 63978, 68322, 51831, 32032, 39217, 29522, 75974, 22472, 49666, 63137, 60351, 19551, 53573, 53490, 44238, 23762, 4581, 13098, 55525, 71304, 24181, 5859, 10984, 15892, 74288, 39829, 34564, 58435, 21747, 49007, 18491, 47953, 60431, 59059, 13203, 35063, 52321, 18301, 37639, 68203, 4351, 22408, 39116, 52316, 44891, 71857, 43341, 56375, 39372, 56444, 12123, 66699, 75371, 40118, 18502, 67187, 16493, 18568, 34805, 47936, 26104, 46873, 12406, 47074, 49577, 46783, 3769, 66869, 1116, 47909, 28360, 13187, 31597, 18575, 3558, 74042, 60423, 39451, 49861, 37538, 23093, 23392, 72892, 65542, 15417, 33185, 6225, 45182, 3447, 38963, 23318, 36325, 65723, 62982, 58986, 945, 49060, 52626, 21241, 37844, 64710, 35796, 32979, 34424, 47386, 54134, 26000, 2117, 23527, 1539, 37861, 17839, 36128, 65611, 55692, 34877, 54513, 49042, 53024, 42980, 37539, 10885, 23810, 68169, 67284, 37831, 64990, 56559, 68517, 36705, 69007, 71278, 58485, 34652, 66596, 74023, 22456, 34619, 59356, 64372, 63643, 23340, 22776, 73027, 70426, 6219, 26568, 44942, 66738, 19276, 7350, 33200, 54889, 19925, 34880, 48965, 34388, 3353, 27426, 24369, 15483, 19024, 32169, 52938, 52368, 53602, 60649, 23173, 49033, 34792, 53534, 9654, 58836, 22632, 10615, 43486, 22319, 31601, 20476, 43290, 37469, 24191, 1850, 22369, 1792, 26585, 21088, 63754, 12321, 37612, 18620, 64304, 26534, 22022, 2083, 23235, 5309, 68286, 55833, 18865, 31602, 3173, 60652, 47263, 15722, 2093, 63611, 11168, 43985, 75687, 19090, 7429, 33127, 75127, 41982, 10850, 10576, 41109, 40223, 22735, 13205, 8635, 43973, 48945, 69071, 7345, 34647, 9631, 70393, 46655, 17891, 38024, 66667, 65798, 18163, 9898, 22360, 16796, 22683, 68816, 26710, 49793, 73543, 24344, 23486, 75714, 9628, 37338, 9928, 19680, 65195, 64055, 46846, 13895, 2420, 49673, 55546, 56554, 53122, 43595, 48952, 56688, 41911, 4476, 42004, 61476, 20938, 12957, 1605, 29555, 69287, 34906, 10522, 52460, 8690, 39157, 32152, 19325, 76462, 41013, 39994, 64977, 12969, 19604, 13309, 22370, 46746, 47488, 1727, 56683, 7284, 36703, 53017, 28218, 47986, 32954, 37339, 19832, 17762, 47251, 40907, 49741, 38758, 33294, 63584, 56910, 52447, 36201, 63419, 8732, 65159, 66985, 43967, 18136, 67298, 37597, 58428, 22051, 20251, 55839, 39308, 42305, 3776, 29451, 54870, 52110, 65007, 71781, 855, 22691, 67334, 49644, 53864, 60550, 22824, 36446, 65487, 23828, 16812, 59178, 23710, 4693, 2887, 8265, 75781, 68559, 67211, 26070, 71912, 15740, 65048, 18251, 41944, 62345, 48918, 19018, 42287, 44829, 19873, 45245, 21737, 13244, 7285, 29412, 12339, 19458, 49685, 66803, 55474, 6058, 19858, 75347, 47225, 67082, 19001, 23679, 60599, 63681, 29763, 24235, 64902, 43522, 74195, 1899, 13654, 74669, 74179, 18833, 37412, 72129, 22301, 65026, 23168, 9090, 41017, 68509, 13252, 71596, 73830, 2064, 10717, 3126, 44111, 28330, 31959, 36113, 10815, 52227, 63877, 18884, 55695, 3581, 65341, 27804, 54854, 65089, 10942, 39791, 56874, 52948, 19281, 56675, 60302, 53473, 28297, 23775, 1547, 64066, 12061, 22205, 64206, 23127, 47411, 66093, 40220, 36263, 6215, 65148, 19877, 66976, 66735, 67351, 4358, 10461, 22196, 35054, 56421, 65435, 22359, 28070, 29373, 18800, 62796, 65599, 39651, 29454, 13354, 2031, 3171, 70422, 26613, 26075, 12255, 39290, 43385, 21147, 60693, 36147, 23285, 52202, 63649, 60402, 11299, 22055, 37785, 74968, 32177, 40201, 50097, 17937, 13124, 2910, 45077, 962, 55485, 19391, 3642, 52957, 63843, 76476, 1600, 64759, 73694, 43601, 55529, 71759, 42328, 62246, 29170, 65472, 41949, 22614, 18652, 13570, 53280, 68998, 22202, 2944, 53289, 3370, 7166, 47923, 39670, 42071, 49814, 72322, 25815, 34872, 3188, 39266, 64740, 7271, 43027, 76349, 39937, 52408, 30376, 6212, 21150, 18418, 25270, 44322, 13721, 64394, 62725, 4493, 36111, 52146, 74135, 21505), '0.00', True, '1/2319/%', True, '1/2319/%', ('waiting', 'confirmed', 'partially_available', 'assigned'), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL))' with params: [(12843, 18843, 47764, 53001, 30440, 61044, 19834, 40279, 76252, 56875, 64349, 1948, 65839, 38498, 68785, 39411, 67005, 16666, 37657, 8771, 53769, 56664, 28355, 53839, 6099, 19645, 23628, 75750, 63263, 63558, 60626, 8792, 69087, 17993, 63821, 69001, 20070, 7321, 75370, 56849, 17603, 43859, 75924, 2221, 52179, 38962, 21153, 54024, 6227, 12242, 3382, 4575, 52982, 42275, 32181, 64109, 70396, 8672, 9636, 66421, 24383, 44742, 53555, 37624, 22854, 34155, 24425, 19578, 26052, 34974, 39220, 65507, 40131, 47898, 73009, 36309, 47841, 71372, 4564, 56480, 34945, 39926, 66072, 39665, 69176, 49001, 52079, 24249, 62266, 2375, 6079, 2090, 12115, 74131, 13497, 18952, 8799, 74126, 1877, 32066, 40117, 8695, 66556, 45211, 63146, 65164, 36131, 55548, 37352, 44228, 12220, 18472, 9138, 39576, 23087, 10630, 60357, 49579, 1934, 1838, 7313, 53412, 3788, 39845, 23760, 7344, 22532, 17955, 18266, 43099, 63764, 54485, 54116, 56312, 43208, 22617, 38946, 23818, 51883, 35008, 20203, 65408, 24157, 38248, 72586, 34847, 53994, 19029, 1071, 12880, 20083, 36212, 54446, 62903, 52195, 42322, 54085, 34591, 3216, 39015, 22179, 5910, 71861, 76015, 1717, 43371, 13871, 53525, 37384, 22207, 64233, 13788, 12391, 62792, 22183, 65295, 44233, 33156, 22160, 10478, 42099, 63006, 68752, 40033, 10838, 12241, 30485, 37921, 67374, 47468, 37267, 65495, 49626, 75636, 68318, 59145, 7441, 19493, 12591, 13901, 44973, 3499, 71701, 15828, 71831, 74121, 63914, 59413, 34678, 75288, 4461, 69378, 65208, 12967, 9661, 64243, 52313, 75871, 2276, 73097, 12299, 4543, 24243, 58427, 75510, 25970, 26129, 47042, 22064, 1606, 19414, 45152, 56620, 43121, 53462, 34882, 64785, 36369, 34748, 41767, 71943, 22266, 52142, 43529, 7406, 41587, 27954, 18419, 12213, 22347, 43464, 64068, 34613, 37563, 15851, 29245, 9664, 66169, 22442, 40185, 42462, 52934, 1745, 74357, 55414, 38965, 19298, 26522, 34794, 18958, 1454, 43572, 68331, 55757, 52393, 19542, 42978, 2180, 72272, 68497, 34773, 17872, 53574, 18072, 35297, 15125, 75514, 23301, 63141, 47546, 34679, 44917, 23669, 6175, 20279, 20204, 62212, 62942, 73990, 31590, 73817, 21859, 74238, 22518, 75063, 12332, 73866, 37902, 63777, 3074, 62302, 55609, 1886, 888, 56805, 53604, 72186, 35379, 54782, 66789, 19462, 43830, 13305, 39534, 20679, 43190, 38993, 7364, 19730, 34148, 52589, 75182, 35471, 43314, 23600, 76257, 43553, 55762, 45147, 18130, 20928, 3277, 3018, 39399, 22544, 2343, 35260, 73625, 69178, 43497, 3506, 23124, 63657, 22365, 47950, 54727, 43068, 35056, 20039, 37548, 1854, 62354, 13035, 36431, 26290, 53480, 65497, 39405, 18725, 6100, 13307, 72530, 58434, 43010, 75709, 1673, 22026, 63023, 20266, 3366, 44951, 3066, 2146, 5814, 68200, 7383, 72804, 66661, 18948, 66176, 29722, 55829, 53030, 35123, 13220, 20269, 48978, 66560, 41969, 56612, 48996, 23431, 63963, 13172, 15904, 42357, 47892, 8260, 8263, 60800, 63565, 43076, 23204, 75404, 63840, 43238, 37448, 49879, 6168, 63009, 39871, 33207, 32065, 43478, 16717, 5350, 4252, 7306, 65082, 60158, 71785, 29378, 75491, 76256, 23005, 39873, 64025, 71790, 71707, 13617, 43539, 59029, 33255, 36476, 18726, 35184, 23532, 33189, 15622, 37691, 47955, 52390, 16545, 22849, 22214, 69261, 38948, 65141, 13500, 19262, 3254, 21183, 65083, 2293, 4496, 32001, 28231, 38956, 60559, 7289, 74494, 12315, 36423, 16504, 55944, 56412, 41821, 58433, 63139, 52329, 72730, 56469, 34688, 32097, 54534, 63800, 39305, 9070, 23813, 47540, 55648, 35396, 54051, 47223, 30401, 72606, 47741, 12556, 47449, 56438, 63885, 15211, 52416, 39114, 68833, 16034, 52631, 9911, 53177, 2188, 36066, 6137, 15898, 43666, 2207, 49887, 41606, 12314, 23335, 47993, 1942, 43551, 3764, 21218, 13314, 44142, 12927, 60239, 62293, 22684, 59088, 16739, 39566, 43672, 37356, 60294, 2857, 47871, 8644, 39408, 64815, 13126, 69350, 76444, 17816, 74177, 65168, 46854, 27457, 1487, 42021, 2011, 64183, 28009, 47253, 19988, 3481, 54125, 2069, 56365, 9119, 24210, 50118, 49684, 75885, 72999, 12523, 55470, 37577, 34713, 56912, 49839, 30384, 22549, 37845, 53430, 72074, 23396, 18080, 3789, 40321, 47098, 59147, 52145, 31992, 13129, 18776, 20209, 1726, 63167, 22354, 63978, 68322, 51831, 32032, 39217, 29522, 75974, 22472, 49666, 63137, 60351, 19551, 53573, 53490, 44238, 23762, 4581, 13098, 55525, 71304, 24181, 5859, 10984, 15892, 74288, 39829, 34564, 58435, 21747, 49007, 18491, 47953, 60431, 59059, 13203, 35063, 52321, 18301, 37639, 68203, 4351, 22408, 39116, 52316, 44891, 71857, 43341, 56375, 39372, 56444, 12123, 66699, 75371, 40118, 18502, 67187, 16493, 18568, 34805, 47936, 26104, 46873, 12406, 47074, 49577, 46783, 3769, 66869, 1116, 47909, 28360, 13187, 31597, 18575, 3558, 74042, 60423, 39451, 49861, 37538, 23093, 23392, 72892, 65542, 15417, 33185, 6225, 45182, 3447, 38963, 23318, 36325, 65723, 62982, 58986, 945, 49060, 52626, 21241, 37844, 64710, 35796, 32979, 34424, 47386, 54134, 26000, 2117, 23527, 1539, 37861, 17839, 36128, 65611, 55692, 34877, 54513, 49042, 53024, 42980, 37539, 10885, 23810, 68169, 67284, 37831, 64990, 56559, 68517, 36705, 69007, 71278, 58485, 34652, 66596, 74023, 22456, 34619, 59356, 64372, 63643, 23340, 22776, 73027, 70426, 6219, 26568, 44942, 66738, 19276, 7350, 33200, 54889, 19925, 34880, 48965, 34388, 3353, 27426, 24369, 15483, 19024, 32169, 52938, 52368, 53602, 60649, 23173, 49033, 34792, 53534, 9654, 58836, 22632, 10615, 43486, 22319, 31601, 20476, 43290, 37469, 24191, 1850, 22369, 1792, 26585, 21088, 63754, 12321, 37612, 18620, 64304, 26534, 22022, 2083, 23235, 5309, 68286, 55833, 18865, 31602, 3173, 60652, 47263, 15722, 2093, 63611, 11168, 43985, 75687, 19090, 7429, 33127, 75127, 41982, 10850, 10576, 41109, 40223, 22735, 13205, 8635, 43973, 48945, 69071, 7345, 34647, 9631, 70393, 46655, 17891, 38024, 66667, 65798, 18163, 9898, 22360, 16796, 22683, 68816, 26710, 49793, 73543, 24344, 23486, 75714, 9628, 37338, 9928, 19680, 65195, 64055, 46846, 13895, 2420, 49673, 55546, 56554, 53122, 43595, 48952, 56688, 41911, 4476, 42004, 61476, 20938, 12957, 1605, 29555, 69287, 34906, 10522, 52460, 8690, 39157, 32152, 19325, 76462, 41013, 39994, 64977, 12969, 19604, 13309, 22370, 46746, 47488, 1727, 56683, 7284, 36703, 53017, 28218, 47986, 32954, 37339, 19832, 17762, 47251, 40907, 49741, 38758, 33294, 63584, 56910, 52447, 36201, 63419, 8732, 65159, 66985, 43967, 18136, 67298, 37597, 58428, 22051, 20251, 55839, 39308, 42305, 3776, 29451, 54870, 52110, 65007, 71781, 855, 22691, 67334, 49644, 53864, 60550, 22824, 36446, 65487, 23828, 16812, 59178, 23710, 4693, 2887, 8265, 75781, 68559, 67211, 26070, 71912, 15740, 65048, 18251, 41944, 62345, 48918, 19018, 42287, 44829, 19873, 45245, 21737, 13244, 7285, 29412, 12339, 19458, 49685, 66803, 55474, 6058, 19858, 75347, 47225, 67082, 19001, 23679, 60599, 63681, 29763, 24235, 64902, 43522, 74195, 1899, 13654, 74669, 74179, 18833, 37412, 72129, 22301, 65026, 23168, 9090, 41017, 68509, 13252, 71596, 73830, 2064, 10717, 3126, 44111, 28330, 31959, 36113, 10815, 52227, 63877, 18884, 55695, 3581, 65341, 27804, 54854, 65089, 10942, 39791, 56874, 52948, 19281, 56675, 60302, 53473, 28297, 23775, 1547, 64066, 12061, 22205, 64206, 23127, 47411, 66093, 40220, 36263, 6215, 65148, 19877, 66976, 66735, 67351, 4358, 10461, 22196, 35054, 56421, 65435, 22359, 28070, 29373, 18800, 62796, 65599, 39651, 29454, 13354, 2031, 3171, 70422, 26613, 26075, 12255, 39290, 43385, 21147, 60693, 36147, 23285, 52202, 63649, 60402, 11299, 22055, 37785, 74968, 32177, 40201, 50097, 17937, 13124, 2910, 45077, 962, 55485, 19391, 3642, 52957, 63843, 76476, 1600, 64759, 73694, 43601, 55529, 71759, 42328, 62246, 29170, 65472, 41949, 22614, 18652, 13570, 53280, 68998, 22202, 2944, 53289, 3370, 7166, 47923, 39670, 42071, 49814, 72322, 25815, 34872, 3188, 39266, 64740, 7271, 43027, 76349, 39937, 52408, 30376, 6212, 21150, 18418, 25270, 44322, 13721, 64394, 62725, 4493, 36111, 52146, 74135, 21505), '0.00', True, '1/2319/%', True, '1/2319/%', ('waiting', 'confirmed', 'partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL))' with params: [(74724, 44817, 22882, 22235, 63278, 18893, 32120, 41201, 76162, 55518, 26639, 66532, 45073, 47222, 63684, 68779, 20085, 2324, 74103, 3175, 39528, 22955, 69392, 59357, 69313, 23820, 56565, 53824, 53410, 64060, 71596, 62219, 58379, 49551, 23790, 34678, 22738, 22604, 43163, 18434, 63247, 21254, 52114, 5797, 64095, 56359, 3597, 10932, 60286, 67055, 23480, 23745, 73275, 30433, 37884, 53442, 54839, 7448, 13298, 22518, 18102, 20278, 68446, 9093, 22276, 75518, 69207, 13157, 43260, 1703, 16509, 28370, 47454, 44902, 18172, 28055, 34583, 36081, 19400, 40897, 34850, 65851, 32158, 16488, 19637, 24307, 64970, 46770, 18302, 63319, 18042, 20089, 62947, 23318, 43519, 58437, 13327, 22989, 22792, 68944, 9913, 68731, 10558, 62217, 60034, 10757, 58429, 16035, 27912, 55279, 13417, 54537, 20975, 75344, 54132, 21720, 72356, 73320, 21144, 36763, 18456, 40157, 34909, 33067, 64389, 34588, 7374, 63481, 50084, 10508, 39583, 39861, 2875, 13840, 39141, 65051, 69075, 11545, 55694, 55574, 21121, 18030, 65114, 49745, 12079, 2935, 64835, 21147, 23751, 53270, 13160, 72346, 52389, 39340, 63755, 26291, 47408, 56810, 53370, 52595, 52499, 65161, 40902, 47965, 58921, 62974, 23355, 13322, 26580, 23499, 35194, 29758, 15129, 12393, 27944, 59002, 64711, 8774, 29417, 9586, 35296, 53264, 15894, 42197, 5902, 68230, 38991, 5322, 20423, 22783, 2890, 53463, 13898, 1746, 52677, 40293, 64773, 67196, 75388, 66366, 63052, 49627, 47361, 65789, 71752, 33199, 16672, 33084, 56380, 13852, 75449, 41917, 47713, 39366, 26193, 52475, 49566, 15930, 66631, 39078, 73444, 64233, 63772, 5819, 29560, 74002, 13763, 9061, 1090, 60307, 37882, 76275, 68892, 74517, 45184, 47476, 18604, 18949, 18279, 58275, 21077, 29701, 39209, 14739, 22415, 19281, 62902, 17855, 49762, 56402, 35290, 36430, 15847, 21257, 43927, 8285, 55625, 26182, 23203, 4594, 56923, 47191, 9137, 24138, 37396, 58301, 3642, 28220, 43285, 21752, 72595, 72766, 43714, 75676, 19966, 20079, 12503, 29456, 23726, 63974, 63911, 64379, 12428, 12173, 20952, 1242, 65748, 34417, 18692, 41999, 1849, 49562, 68745, 66415, 29540, 53505, 3162, 11111, 36057, 20087, 56947, 68273, 28027, 28067, 47840, 71884, 63430, 55798, 19493, 10742, 54731, 22581, 42347, 62345, 65558, 74092, 34894, 3284, 19032, 3425, 16680, 17811, 53915, 66500, 60263, 63462, 45215, 3372, 52655, 11160, 34804, 36476, 12287, 19346, 10967, 3785, 26234, 4324, 12308, 10810, 39413, 64375, 18532, 73936, 45034, 1477, 65649, 45070, 43563, 18793, 52934, 23091, 22221, 58354, 42302, 26575, 15744, 52557, 22550, 23237, 55472, 60579, 43226, 60053, 28061, 2211, 69218, 66352, 9798, 63163, 26205, 69147, 8747, 39344, 22625, 63951, 23354, 10467, 64873, 52634, 15624, 29386, 55516, 35377, 75480, 37584, 3182, 58321, 15883, 3405, 60249, 53569, 42106, 13722, 64673, 20300, 13611, 3514, 64944, 11648, 20299, 74739, 63680, 67357, 10663, 35396, 75477, 34935, 23384, 12194, 36308, 4527, 72526, 71650, 71775, 5402, 63109, 11728, 13668, 73917, 32049, 47473, 8642, 1516, 49062, 34624, 71308, 40180, 73428, 63606, 31577, 53110, 10637, 2058, 73941, 38252, 20399, 65678, 1442, 47838, 35105, 5397, 43203, 28116, 72398, 59342, 64757, 74247, 23294, 13255, 23238, 72499, 19256, 46634, 37343, 47190, 1706, 62725, 65653, 53034, 53664, 22728, 65277, 66446, 55615, 15951, 73546, 49033, 75803, 4506, 36054, 19854, 72543, 37507, 71398, 40189, 65410, 39166, 13234, 2229, 27964, 68242, 37763, 16846, 49041, 59033, 52477, 74932, 19799, 26597, 22374, 58400, 37335, 52362, 11162, 61063, 22501, 62936, 18696, 66785, 40172, 3199, 27943, 2340, 72549, 34592, 42950, 24137, 10783, 63382, 21591, 17756, 929, 12245, 31601, 53424, 36159, 34660, 23493, 52447, 65426, 23114, 44129, 53331, 71694, 13207, 74682, 28659, 18976, 43732, 10975, 65631, 62755, 58940, 17786, 38951, 41941, 18874, 35019, 1445, 42160, 27837, 1220, 63295, 64059, 39751, 3599, 29375, 11173, 32018, 10753, 55544, 73663, 5903, 4693, 13267, 65575, 53435, 22781, 34867, 2228, 28071, 75629, 1879, 42509, 6147, 18636, 71281, 65692, 75008, 19320, 35069, 36184, 65394, 43407, 12300, 21236, 8687, 29319, 7258, 13771, 19905, 1764, 63585, 63936, 4429, 38024, 44231, 65460, 44843, 24230, 74655, 55272, 66600, 9125, 17922, 71955, 52184, 65461, 13163, 68267, 64010, 22521, 39385, 29452, 23415, 15793, 68316, 21729, 43253, 42377, 40119, 66598, 19260, 72988, 2183, 65082, 60635, 75238, 13032, 55589, 23754, 56949, 44229, 9032, 54065, 60228, 1224, 44737, 55337, 10269, 6246, 23268, 19418, 62970, 55508, 34683, 4578, 42231, 42493, 23609, 56689, 26114, 3084, 9135, 60962, 53658, 60439, 53741, 26162, 54758, 34309, 73660, 55573, 41750, 10991, 44282, 56750, 72127, 39909, 60169, 53363, 53663, 36453, 60670, 60697, 34612, 35006, 69238, 1769, 22808, 24390, 75446, 64939, 37446, 3603, 71445, 18394, 19015, 35083, 16610, 13911, 56659, 49665, 65122, 55311, 55511, 72321, 16012, 55882, 56677, 53768, 23352, 10787, 72896, 41614, 75812, 65056, 59086, 15904, 23229, 1211, 18265, 39103, 36150, 22283, 3024, 68697, 33234, 62748, 36495, 63410, 73026, 10785, 9087, 20458, 21162, 18899, 73873, 20414, 76492, 52264, 47545, 23486, 19401, 40252, 67253, 66722, 10727, 68829, 28148, 1774, 68471, 72223, 22566, 59404, 7221, 63861, 68299, 42953, 39045, 1390, 3218, 47546, 8723, 76236, 55726, 22962, 29347, 22326, 65471, 63408, 76421, 49808, 36688, 18391, 75777, 10632, 41815, 1106, 10073, 65498, 36383, 9891, 53403, 18408, 68264, 28249, 65005, 54778, 1527, 64397, 10648, 66605, 10859, 22320, 52582, 47539, 45228, 55651, 1507, 36428, 29344, 66177, 67159, 33245, 33208, 52560, 10846, 49791, 44906, 64065, 66340, 43282, 2949, 44143, 24384, 22649, 28328, 59083, 75324, 62809, 20202, 66615, 39934, 34143, 64395, 20213, 43162, 44845, 43569, 28601, 3167, 19002, 49587, 74863, 18055, 2835, 37803, 71441, 66804, 49461, 39252, 41788, 53577, 39859, 18498, 41914, 52187, 52571, 29373, 68746, 47753, 65723, 23360, 19405, 13842, 65133, 7408, 73075, 42978, 71549, 68193, 56362, 8297, 74488, 3474, 43473, 39308, 19375, 23472, 18122, 19477, 1823, 56567, 10491, 34961, 18569, 22760, 74778, 13311, 63823, 1152, 47057, 64969, 24402, 75814, 65610, 2019, 60500, 20225, 34736, 46625, 23222, 49087, 58427, 22335, 29213, 1376, 58365, 1418, 16487, 27869, 15952, 15707, 41868, 56877, 41920, 19365, 16691, 32441, 76489, 41582, 39217, 42051, 73446, 56288, 74973, 47254, 42176, 6079, 75669, 3534, 52353, 75084, 65407, 39179, 56678, 19013, 31984, 55049, 66769, 25822, 16541, 27946, 23539, 43455, 912, 63149, 4487, 56798, 19463, 17807, 45016, 52272, 22902, 10565, 31873, 26243, 58405, 20157, 12846, 59417, 28520, 1702, 20016, 66546, 47517, 67177, 34127, 58869, 37465, 63562, 945, 1535, 64367, 36416, 17955, 27856, 13801, 65440, 26165, 45078, 1413, 13164, 42018, 55746, 46790, 23144, 10754, 52580, 41125, 20139, 66996, 74357, 1895, 10697, 9646, 4427, 74686, 71692, 34769, 52382, 21171, 18107, 26063, 33235, 63246, 3369, 16573, 18459, 40033, 28381, 58479, 71256, 43454, 1884, 64190, 44200, 10640, 49609, 22976, 43543, 2373, 74303, 73432, 73579, 23799, 35160, 47085, 17856, 26712, 60658, 64732, 17925, 9580, 66686, 42020, 49632, 3450, 22190, 21145, 23290, 1435, 1258, 68749, 12234, 3132, 1676, 22942), '0.00', True, '1/2335/%', True, '1/2335/%', ('waiting', 'confirmed', 'partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL)) AND ("stock_move"."state" in %s))' with params: [(74724, 44817, 22882, 22235, 63278, 18893, 32120, 41201, 76162, 55518, 26639, 66532, 45073, 47222, 63684, 68779, 20085, 2324, 74103, 3175, 39528, 22955, 69392, 59357, 69313, 23820, 56565, 53824, 53410, 64060, 71596, 62219, 58379, 49551, 23790, 34678, 22738, 22604, 43163, 18434, 63247, 21254, 52114, 5797, 64095, 56359, 3597, 10932, 60286, 67055, 23480, 23745, 73275, 30433, 37884, 53442, 54839, 7448, 13298, 22518, 18102, 20278, 68446, 9093, 22276, 75518, 69207, 13157, 43260, 1703, 16509, 28370, 47454, 44902, 18172, 28055, 34583, 36081, 19400, 40897, 34850, 65851, 32158, 16488, 19637, 24307, 64970, 46770, 18302, 63319, 18042, 20089, 62947, 23318, 43519, 58437, 13327, 22989, 22792, 68944, 9913, 68731, 10558, 62217, 60034, 10757, 58429, 16035, 27912, 55279, 13417, 54537, 20975, 75344, 54132, 21720, 72356, 73320, 21144, 36763, 18456, 40157, 34909, 33067, 64389, 34588, 7374, 63481, 50084, 10508, 39583, 39861, 2875, 13840, 39141, 65051, 69075, 11545, 55694, 55574, 21121, 18030, 65114, 49745, 12079, 2935, 64835, 21147, 23751, 53270, 13160, 72346, 52389, 39340, 63755, 26291, 47408, 56810, 53370, 52595, 52499, 65161, 40902, 47965, 58921, 62974, 23355, 13322, 26580, 23499, 35194, 29758, 15129, 12393, 27944, 59002, 64711, 8774, 29417, 9586, 35296, 53264, 15894, 42197, 5902, 68230, 38991, 5322, 20423, 22783, 2890, 53463, 13898, 1746, 52677, 40293, 64773, 67196, 75388, 66366, 63052, 49627, 47361, 65789, 71752, 33199, 16672, 33084, 56380, 13852, 75449, 41917, 47713, 39366, 26193, 52475, 49566, 15930, 66631, 39078, 73444, 64233, 63772, 5819, 29560, 74002, 13763, 9061, 1090, 60307, 37882, 76275, 68892, 74517, 45184, 47476, 18604, 18949, 18279, 58275, 21077, 29701, 39209, 14739, 22415, 19281, 62902, 17855, 49762, 56402, 35290, 36430, 15847, 21257, 43927, 8285, 55625, 26182, 23203, 4594, 56923, 47191, 9137, 24138, 37396, 58301, 3642, 28220, 43285, 21752, 72595, 72766, 43714, 75676, 19966, 20079, 12503, 29456, 23726, 63974, 63911, 64379, 12428, 12173, 20952, 1242, 65748, 34417, 18692, 41999, 1849, 49562, 68745, 66415, 29540, 53505, 3162, 11111, 36057, 20087, 56947, 68273, 28027, 28067, 47840, 71884, 63430, 55798, 19493, 10742, 54731, 22581, 42347, 62345, 65558, 74092, 34894, 3284, 19032, 3425, 16680, 17811, 53915, 66500, 60263, 63462, 45215, 3372, 52655, 11160, 34804, 36476, 12287, 19346, 10967, 3785, 26234, 4324, 12308, 10810, 39413, 64375, 18532, 73936, 45034, 1477, 65649, 45070, 43563, 18793, 52934, 23091, 22221, 58354, 42302, 26575, 15744, 52557, 22550, 23237, 55472, 60579, 43226, 60053, 28061, 2211, 69218, 66352, 9798, 63163, 26205, 69147, 8747, 39344, 22625, 63951, 23354, 10467, 64873, 52634, 15624, 29386, 55516, 35377, 75480, 37584, 3182, 58321, 15883, 3405, 60249, 53569, 42106, 13722, 64673, 20300, 13611, 3514, 64944, 11648, 20299, 74739, 63680, 67357, 10663, 35396, 75477, 34935, 23384, 12194, 36308, 4527, 72526, 71650, 71775, 5402, 63109, 11728, 13668, 73917, 32049, 47473, 8642, 1516, 49062, 34624, 71308, 40180, 73428, 63606, 31577, 53110, 10637, 2058, 73941, 38252, 20399, 65678, 1442, 47838, 35105, 5397, 43203, 28116, 72398, 59342, 64757, 74247, 23294, 13255, 23238, 72499, 19256, 46634, 37343, 47190, 1706, 62725, 65653, 53034, 53664, 22728, 65277, 66446, 55615, 15951, 73546, 49033, 75803, 4506, 36054, 19854, 72543, 37507, 71398, 40189, 65410, 39166, 13234, 2229, 27964, 68242, 37763, 16846, 49041, 59033, 52477, 74932, 19799, 26597, 22374, 58400, 37335, 52362, 11162, 61063, 22501, 62936, 18696, 66785, 40172, 3199, 27943, 2340, 72549, 34592, 42950, 24137, 10783, 63382, 21591, 17756, 929, 12245, 31601, 53424, 36159, 34660, 23493, 52447, 65426, 23114, 44129, 53331, 71694, 13207, 74682, 28659, 18976, 43732, 10975, 65631, 62755, 58940, 17786, 38951, 41941, 18874, 35019, 1445, 42160, 27837, 1220, 63295, 64059, 39751, 3599, 29375, 11173, 32018, 10753, 55544, 73663, 5903, 4693, 13267, 65575, 53435, 22781, 34867, 2228, 28071, 75629, 1879, 42509, 6147, 18636, 71281, 65692, 75008, 19320, 35069, 36184, 65394, 43407, 12300, 21236, 8687, 29319, 7258, 13771, 19905, 1764, 63585, 63936, 4429, 38024, 44231, 65460, 44843, 24230, 74655, 55272, 66600, 9125, 17922, 71955, 52184, 65461, 13163, 68267, 64010, 22521, 39385, 29452, 23415, 15793, 68316, 21729, 43253, 42377, 40119, 66598, 19260, 72988, 2183, 65082, 60635, 75238, 13032, 55589, 23754, 56949, 44229, 9032, 54065, 60228, 1224, 44737, 55337, 10269, 6246, 23268, 19418, 62970, 55508, 34683, 4578, 42231, 42493, 23609, 56689, 26114, 3084, 9135, 60962, 53658, 60439, 53741, 26162, 54758, 34309, 73660, 55573, 41750, 10991, 44282, 56750, 72127, 39909, 60169, 53363, 53663, 36453, 60670, 60697, 34612, 35006, 69238, 1769, 22808, 24390, 75446, 64939, 37446, 3603, 71445, 18394, 19015, 35083, 16610, 13911, 56659, 49665, 65122, 55311, 55511, 72321, 16012, 55882, 56677, 53768, 23352, 10787, 72896, 41614, 75812, 65056, 59086, 15904, 23229, 1211, 18265, 39103, 36150, 22283, 3024, 68697, 33234, 62748, 36495, 63410, 73026, 10785, 9087, 20458, 21162, 18899, 73873, 20414, 76492, 52264, 47545, 23486, 19401, 40252, 67253, 66722, 10727, 68829, 28148, 1774, 68471, 72223, 22566, 59404, 7221, 63861, 68299, 42953, 39045, 1390, 3218, 47546, 8723, 76236, 55726, 22962, 29347, 22326, 65471, 63408, 76421, 49808, 36688, 18391, 75777, 10632, 41815, 1106, 10073, 65498, 36383, 9891, 53403, 18408, 68264, 28249, 65005, 54778, 1527, 64397, 10648, 66605, 10859, 22320, 52582, 47539, 45228, 55651, 1507, 36428, 29344, 66177, 67159, 33245, 33208, 52560, 10846, 49791, 44906, 64065, 66340, 43282, 2949, 44143, 24384, 22649, 28328, 59083, 75324, 62809, 20202, 66615, 39934, 34143, 64395, 20213, 43162, 44845, 43569, 28601, 3167, 19002, 49587, 74863, 18055, 2835, 37803, 71441, 66804, 49461, 39252, 41788, 53577, 39859, 18498, 41914, 52187, 52571, 29373, 68746, 47753, 65723, 23360, 19405, 13842, 65133, 7408, 73075, 42978, 71549, 68193, 56362, 8297, 74488, 3474, 43473, 39308, 19375, 23472, 18122, 19477, 1823, 56567, 10491, 34961, 18569, 22760, 74778, 13311, 63823, 1152, 47057, 64969, 24402, 75814, 65610, 2019, 60500, 20225, 34736, 46625, 23222, 49087, 58427, 22335, 29213, 1376, 58365, 1418, 16487, 27869, 15952, 15707, 41868, 56877, 41920, 19365, 16691, 32441, 76489, 41582, 39217, 42051, 73446, 56288, 74973, 47254, 42176, 6079, 75669, 3534, 52353, 75084, 65407, 39179, 56678, 19013, 31984, 55049, 66769, 25822, 16541, 27946, 23539, 43455, 912, 63149, 4487, 56798, 19463, 17807, 45016, 52272, 22902, 10565, 31873, 26243, 58405, 20157, 12846, 59417, 28520, 1702, 20016, 66546, 47517, 67177, 34127, 58869, 37465, 63562, 945, 1535, 64367, 36416, 17955, 27856, 13801, 65440, 26165, 45078, 1413, 13164, 42018, 55746, 46790, 23144, 10754, 52580, 41125, 20139, 66996, 74357, 1895, 10697, 9646, 4427, 74686, 71692, 34769, 52382, 21171, 18107, 26063, 33235, 63246, 3369, 16573, 18459, 40033, 28381, 58479, 71256, 43454, 1884, 64190, 44200, 10640, 49609, 22976, 43543, 2373, 74303, 73432, 73579, 23799, 35160, 47085, 17856, 26712, 60658, 64732, 17925, 9580, 66686, 42020, 49632, 3450, 22190, 21145, 23290, 1435, 1258, 68749, 12234, 3132, 1676, 22942), '0.00', True, '1/2335/%', True, '1/2335/%', ('waiting', 'confirmed', 'partially_available', 'assigned'), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL))' with params: [(74724, 44817, 22882, 22235, 63278, 18893, 32120, 41201, 76162, 55518, 26639, 66532, 45073, 47222, 63684, 68779, 20085, 2324, 74103, 3175, 39528, 22955, 69392, 59357, 69313, 23820, 56565, 53824, 53410, 64060, 71596, 62219, 58379, 49551, 23790, 34678, 22738, 22604, 43163, 18434, 63247, 21254, 52114, 5797, 64095, 56359, 3597, 10932, 60286, 67055, 23480, 23745, 73275, 30433, 37884, 53442, 54839, 7448, 13298, 22518, 18102, 20278, 68446, 9093, 22276, 75518, 69207, 13157, 43260, 1703, 16509, 28370, 47454, 44902, 18172, 28055, 34583, 36081, 19400, 40897, 34850, 65851, 32158, 16488, 19637, 24307, 64970, 46770, 18302, 63319, 18042, 20089, 62947, 23318, 43519, 58437, 13327, 22989, 22792, 68944, 9913, 68731, 10558, 62217, 60034, 10757, 58429, 16035, 27912, 55279, 13417, 54537, 20975, 75344, 54132, 21720, 72356, 73320, 21144, 36763, 18456, 40157, 34909, 33067, 64389, 34588, 7374, 63481, 50084, 10508, 39583, 39861, 2875, 13840, 39141, 65051, 69075, 11545, 55694, 55574, 21121, 18030, 65114, 49745, 12079, 2935, 64835, 21147, 23751, 53270, 13160, 72346, 52389, 39340, 63755, 26291, 47408, 56810, 53370, 52595, 52499, 65161, 40902, 47965, 58921, 62974, 23355, 13322, 26580, 23499, 35194, 29758, 15129, 12393, 27944, 59002, 64711, 8774, 29417, 9586, 35296, 53264, 15894, 42197, 5902, 68230, 38991, 5322, 20423, 22783, 2890, 53463, 13898, 1746, 52677, 40293, 64773, 67196, 75388, 66366, 63052, 49627, 47361, 65789, 71752, 33199, 16672, 33084, 56380, 13852, 75449, 41917, 47713, 39366, 26193, 52475, 49566, 15930, 66631, 39078, 73444, 64233, 63772, 5819, 29560, 74002, 13763, 9061, 1090, 60307, 37882, 76275, 68892, 74517, 45184, 47476, 18604, 18949, 18279, 58275, 21077, 29701, 39209, 14739, 22415, 19281, 62902, 17855, 49762, 56402, 35290, 36430, 15847, 21257, 43927, 8285, 55625, 26182, 23203, 4594, 56923, 47191, 9137, 24138, 37396, 58301, 3642, 28220, 43285, 21752, 72595, 72766, 43714, 75676, 19966, 20079, 12503, 29456, 23726, 63974, 63911, 64379, 12428, 12173, 20952, 1242, 65748, 34417, 18692, 41999, 1849, 49562, 68745, 66415, 29540, 53505, 3162, 11111, 36057, 20087, 56947, 68273, 28027, 28067, 47840, 71884, 63430, 55798, 19493, 10742, 54731, 22581, 42347, 62345, 65558, 74092, 34894, 3284, 19032, 3425, 16680, 17811, 53915, 66500, 60263, 63462, 45215, 3372, 52655, 11160, 34804, 36476, 12287, 19346, 10967, 3785, 26234, 4324, 12308, 10810, 39413, 64375, 18532, 73936, 45034, 1477, 65649, 45070, 43563, 18793, 52934, 23091, 22221, 58354, 42302, 26575, 15744, 52557, 22550, 23237, 55472, 60579, 43226, 60053, 28061, 2211, 69218, 66352, 9798, 63163, 26205, 69147, 8747, 39344, 22625, 63951, 23354, 10467, 64873, 52634, 15624, 29386, 55516, 35377, 75480, 37584, 3182, 58321, 15883, 3405, 60249, 53569, 42106, 13722, 64673, 20300, 13611, 3514, 64944, 11648, 20299, 74739, 63680, 67357, 10663, 35396, 75477, 34935, 23384, 12194, 36308, 4527, 72526, 71650, 71775, 5402, 63109, 11728, 13668, 73917, 32049, 47473, 8642, 1516, 49062, 34624, 71308, 40180, 73428, 63606, 31577, 53110, 10637, 2058, 73941, 38252, 20399, 65678, 1442, 47838, 35105, 5397, 43203, 28116, 72398, 59342, 64757, 74247, 23294, 13255, 23238, 72499, 19256, 46634, 37343, 47190, 1706, 62725, 65653, 53034, 53664, 22728, 65277, 66446, 55615, 15951, 73546, 49033, 75803, 4506, 36054, 19854, 72543, 37507, 71398, 40189, 65410, 39166, 13234, 2229, 27964, 68242, 37763, 16846, 49041, 59033, 52477, 74932, 19799, 26597, 22374, 58400, 37335, 52362, 11162, 61063, 22501, 62936, 18696, 66785, 40172, 3199, 27943, 2340, 72549, 34592, 42950, 24137, 10783, 63382, 21591, 17756, 929, 12245, 31601, 53424, 36159, 34660, 23493, 52447, 65426, 23114, 44129, 53331, 71694, 13207, 74682, 28659, 18976, 43732, 10975, 65631, 62755, 58940, 17786, 38951, 41941, 18874, 35019, 1445, 42160, 27837, 1220, 63295, 64059, 39751, 3599, 29375, 11173, 32018, 10753, 55544, 73663, 5903, 4693, 13267, 65575, 53435, 22781, 34867, 2228, 28071, 75629, 1879, 42509, 6147, 18636, 71281, 65692, 75008, 19320, 35069, 36184, 65394, 43407, 12300, 21236, 8687, 29319, 7258, 13771, 19905, 1764, 63585, 63936, 4429, 38024, 44231, 65460, 44843, 24230, 74655, 55272, 66600, 9125, 17922, 71955, 52184, 65461, 13163, 68267, 64010, 22521, 39385, 29452, 23415, 15793, 68316, 21729, 43253, 42377, 40119, 66598, 19260, 72988, 2183, 65082, 60635, 75238, 13032, 55589, 23754, 56949, 44229, 9032, 54065, 60228, 1224, 44737, 55337, 10269, 6246, 23268, 19418, 62970, 55508, 34683, 4578, 42231, 42493, 23609, 56689, 26114, 3084, 9135, 60962, 53658, 60439, 53741, 26162, 54758, 34309, 73660, 55573, 41750, 10991, 44282, 56750, 72127, 39909, 60169, 53363, 53663, 36453, 60670, 60697, 34612, 35006, 69238, 1769, 22808, 24390, 75446, 64939, 37446, 3603, 71445, 18394, 19015, 35083, 16610, 13911, 56659, 49665, 65122, 55311, 55511, 72321, 16012, 55882, 56677, 53768, 23352, 10787, 72896, 41614, 75812, 65056, 59086, 15904, 23229, 1211, 18265, 39103, 36150, 22283, 3024, 68697, 33234, 62748, 36495, 63410, 73026, 10785, 9087, 20458, 21162, 18899, 73873, 20414, 76492, 52264, 47545, 23486, 19401, 40252, 67253, 66722, 10727, 68829, 28148, 1774, 68471, 72223, 22566, 59404, 7221, 63861, 68299, 42953, 39045, 1390, 3218, 47546, 8723, 76236, 55726, 22962, 29347, 22326, 65471, 63408, 76421, 49808, 36688, 18391, 75777, 10632, 41815, 1106, 10073, 65498, 36383, 9891, 53403, 18408, 68264, 28249, 65005, 54778, 1527, 64397, 10648, 66605, 10859, 22320, 52582, 47539, 45228, 55651, 1507, 36428, 29344, 66177, 67159, 33245, 33208, 52560, 10846, 49791, 44906, 64065, 66340, 43282, 2949, 44143, 24384, 22649, 28328, 59083, 75324, 62809, 20202, 66615, 39934, 34143, 64395, 20213, 43162, 44845, 43569, 28601, 3167, 19002, 49587, 74863, 18055, 2835, 37803, 71441, 66804, 49461, 39252, 41788, 53577, 39859, 18498, 41914, 52187, 52571, 29373, 68746, 47753, 65723, 23360, 19405, 13842, 65133, 7408, 73075, 42978, 71549, 68193, 56362, 8297, 74488, 3474, 43473, 39308, 19375, 23472, 18122, 19477, 1823, 56567, 10491, 34961, 18569, 22760, 74778, 13311, 63823, 1152, 47057, 64969, 24402, 75814, 65610, 2019, 60500, 20225, 34736, 46625, 23222, 49087, 58427, 22335, 29213, 1376, 58365, 1418, 16487, 27869, 15952, 15707, 41868, 56877, 41920, 19365, 16691, 32441, 76489, 41582, 39217, 42051, 73446, 56288, 74973, 47254, 42176, 6079, 75669, 3534, 52353, 75084, 65407, 39179, 56678, 19013, 31984, 55049, 66769, 25822, 16541, 27946, 23539, 43455, 912, 63149, 4487, 56798, 19463, 17807, 45016, 52272, 22902, 10565, 31873, 26243, 58405, 20157, 12846, 59417, 28520, 1702, 20016, 66546, 47517, 67177, 34127, 58869, 37465, 63562, 945, 1535, 64367, 36416, 17955, 27856, 13801, 65440, 26165, 45078, 1413, 13164, 42018, 55746, 46790, 23144, 10754, 52580, 41125, 20139, 66996, 74357, 1895, 10697, 9646, 4427, 74686, 71692, 34769, 52382, 21171, 18107, 26063, 33235, 63246, 3369, 16573, 18459, 40033, 28381, 58479, 71256, 43454, 1884, 64190, 44200, 10640, 49609, 22976, 43543, 2373, 74303, 73432, 73579, 23799, 35160, 47085, 17856, 26712, 60658, 64732, 17925, 9580, 66686, 42020, 49632, 3450, 22190, 21145, 23290, 1435, 1258, 68749, 12234, 3132, 1676, 22942), '0.00', True, '1/2335/%', True, '1/2335/%', ('waiting', 'confirmed', 'partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL))' with params: [(74774, 76139, 76126, 75255, 72687, 72647, 72314, 72513, 74921, 76494, 74288, 75852, 73391, 76075, 73351, 73449, 74994), '0.00', True, '1/2495/%', True, '1/2495/%', ('waiting', 'confirmed', 'partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL)) AND ("stock_move"."state" in %s))' with params: [(74774, 76139, 76126, 75255, 72687, 72647, 72314, 72513, 74921, 76494, 74288, 75852, 73391, 76075, 73351, 73449, 74994), '0.00', True, '1/2495/%', True, '1/2495/%', ('waiting', 'confirmed', 'partially_available', 'assigned'), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL))' with params: [(74774, 76139, 76126, 75255, 72687, 72647, 72314, 72513, 74921, 76494, 74288, 75852, 73391, 76075, 73351, 73449, 74994), '0.00', True, '1/2495/%', True, '1/2495/%', ('waiting', 'confirmed', 'partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL))' with params: [(75760, 74277, 73930, 72780, 72887, 73359), '0.00', True, '1/2415/%', True, '1/2415/%', ('waiting', 'confirmed', 'partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL)) AND ("stock_move"."state" in %s))' with params: [(75760, 74277, 73930, 72780, 72887, 73359), '0.00', True, '1/2415/%', True, '1/2415/%', ('waiting', 'confirmed', 'partially_available', 'assigned'), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL))' with params: [(75760, 74277, 73930, 72780, 72887, 73359), '0.00', True, '1/2415/%', True, '1/2415/%', ('waiting', 'confirmed', 'partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL))' with params: [(75008, 72789), '0.00', True, '1/2503/%', True, '1/2503/%', ('waiting', 'confirmed', 'partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL)) AND ("stock_move"."state" in %s))' with params: [(75008, 72789), '0.00', True, '1/2503/%', True, '1/2503/%', ('waiting', 'confirmed', 'partially_available', 'assigned'), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL))' with params: [(75008, 72789), '0.00', True, '1/2503/%', True, '1/2503/%', ('waiting', 'confirmed', 'partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL))' with params: [(75997, 76396, 75700, 71707, 71535, 75723, 72558, 75535, 75565, 75366, 72929, 71509, 72212, 73441, 75726, 75895, 75972, 72242, 75349), '0.00', True, '1/2431/%', True, '1/2431/%', ('waiting', 'confirmed', 'partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL)) AND ("stock_move"."state" in %s))' with params: [(75997, 76396, 75700, 71707, 71535, 75723, 72558, 75535, 75565, 75366, 72929, 71509, 72212, 73441, 75726, 75895, 75972, 72242, 75349), '0.00', True, '1/2431/%', True, '1/2431/%', ('waiting', 'confirmed', 'partially_available', 'assigned'), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL))' with params: [(75997, 76396, 75700, 71707, 71535, 75723, 72558, 75535, 75565, 75366, 72929, 71509, 72212, 73441, 75726, 75895, 75972, 72242, 75349), '0.00', True, '1/2431/%', True, '1/2431/%', ('waiting', 'confirmed', 'partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL))' with params: [(74029, 71755, 73678, 72017, 75967, 75151, 72969, 74976, 73968, 72393), '0.00', True, '1/2479/%', True, '1/2479/%', ('waiting', 'confirmed', 'partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL)) AND ("stock_move"."state" in %s))' with params: [(74029, 71755, 73678, 72017, 75967, 75151, 72969, 74976, 73968, 72393), '0.00', True, '1/2479/%', True, '1/2479/%', ('waiting', 'confirmed', 'partially_available', 'assigned'), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL))' with params: [(74029, 71755, 73678, 72017, 75967, 75151, 72969, 74976, 73968, 72393), '0.00', True, '1/2479/%', True, '1/2479/%', ('waiting', 'confirmed', 'partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL))' with params: [(16, 31), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL)) AND ("stock_move"."state" in %s))' with params: [(16, 31), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned'), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL))' with params: [(16, 31), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL))' with params: [(22208, 13403, 21501, 26054, 62259, 64085, 30488, 7430, 3096, 64535, 7330, 47168, 24401, 20129, 66897, 47584, 23468, 72972, 65115, 71347, 39064, 45150, 69271, 55724, 63406, 18121, 39906, 23188, 56769, 63714, 21771, 11328, 34619, 16677, 15714, 52566, 65110, 3497, 20894, 61062, 55790, 7326, 1167, 47093, 26099, 60159, 33139, 1064, 53397, 52443, 41904, 63465, 18017, 62767, 26180, 10781, 63310, 73409, 54851, 73761, 13254, 76367, 52964, 20235, 21174, 49036, 11661, 10985, 76457, 63122, 38998, 1225, 21209, 49891, 34645, 47976, 44823, 18022, 39477, 46830, 36473, 65851, 29526, 39394, 30470, 55909, 47560, 60550, 40773, 1284, 75984, 22841, 36170, 42947, 63769, 4591, 1835, 33210, 22904, 16801, 68167, 23284, 23587, 23425, 43362, 1646, 34986, 40311, 20125, 47864, 69423, 32067, 15831, 40289, 43080, 63539, 66164, 39913, 5284, 44853, 29356, 6146, 42364, 66779, 9135, 52497, 37945, 55865, 47176, 42344, 46826, 39656, 65448, 28494, 15704, 37479, 63652, 12364, 22484, 60256, 2177, 9894, 35218, 62794, 16706, 22299, 65175, 75787, 73632, 34749, 44202, 42282, 22572, 895, 64848, 34673, 7451, 19348, 56765, 71448, 52459, 37674, 73579, 11460, 22744, 23416, 3530, 23684, 42331, 11307, 60963, 56317, 1572, 69320, 71261, 64827, 21156, 35455, 63252, 53544, 22047, 52511, 52307, 19979, 13388, 51857, 21857, 25354, 10893, 19594, 55333, 5811, 1941, 12847, 69232, 52400, 20930, 66316, 74611, 72967, 53817, 23449, 72727, 59362, 48921, 21858, 69290, 74487, 75727, 19275, 45240, 52586, 9094, 71767, 65710, 21193, 63339, 18837, 53631, 3065, 47442, 41840, 75286, 22996, 5792, 72190, 35170, 35382, 23805, 9056, 16629, 63837, 74739, 75920, 19921, 48991, 18636, 13862, 2346, 75791, 56813, 16039, 43805, 53279, 63550, 21270, 28163, 60236, 62716, 21076, 10070, 22735, 37298, 56398, 43027, 39872, 65233, 19012, 71511, 7377, 20092, 56366, 3331, 21201, 16489, 33374, 21055, 22871, 828, 63870, 20962, 52192, 68767, 18076, 53626, 32031, 72576, 13354, 55890, 59330, 20469, 69011, 58321, 41799, 1497, 35311, 42485, 13678, 23111, 66163, 56548, 18895, 26082, 65838, 47227, 56587, 60815, 12122, 56477, 7439, 65330, 35433, 41800, 17781, 13568, 28384, 67413, 56810, 63162, 12901, 42976, 2189, 34671, 23224, 25314, 39411, 45153, 66889, 23157, 49709, 10898, 2217, 5887, 27950, 10583, 21755, 74667, 25345, 27786, 49636, 73278, 72598, 36419, 19332, 28285, 63601, 23048, 47877, 44299, 15407, 68979, 52599, 71669, 2207, 44854, 76327, 953, 20922, 62826, 7446, 28164, 2455, 3024, 37141, 60378, 54679, 56851, 60079, 56278, 43054, 52248, 63210, 62237, 20138, 56322, 26169, 19897, 54879, 13838, 2873, 19068, 71842, 13536, 37159, 16735, 19515, 18451, 64531, 19904, 37586, 920, 17705, 26556, 66385, 18679, 41953, 3551, 9892, 20964, 4414, 2966, 22526, 22982, 3324, 74631, 65594, 63170, 49966, 55551, 54771, 63562, 61069, 35101, 1389, 60620, 26004, 28343, 65595, 34293, 11179, 49662, 3791, 44304, 74919, 39841, 63690, 18422, 32462, 37864, 22544, 59390, 42166, 75831, 74460, 22332, 15707, 15850, 24337, 41853, 39605, 22799, 4252, 3523, 4392, 72550, 18898, 74733, 59337, 49961, 10816, 36741, 55851, 48961, 64097, 19380, 76082, 28086, 49799, 10809, 19647, 20294, 2157, 22110, 55406, 44944, 66075, 22087, 52625, 47218, 60434, 63738, 24416, 65093, 43436, 22595, 18792, 22149, 46849, 28374, 29579, 67299, 23572, 16719, 63650, 37316, 60230, 5874, 53906, 68950, 33270, 29508, 56291, 53762, 1084, 66094, 53494, 64206, 10579, 29771, 3484, 64195, 32364, 75379, 1981, 39870, 17775, 66629, 68495, 48957, 49807, 75526, 40776, 23380, 36738, 53359, 19578, 35791, 20127, 13533, 63148, 74686, 34372, 18536, 55284, 76218, 32082, 25991, 46758, 73402, 53381, 74977, 18271, 855, 60799, 10493, 65625, 3385, 41598, 34156, 34119, 27441, 9664, 4301, 73389, 7347, 43801, 76391, 62790, 28173, 21267, 49601, 30452, 61051, 53301, 40091, 64541, 13830, 1801, 62713, 35229, 53551, 32027, 22067, 75612, 53743, 66319, 69040, 49790, 32170, 65976, 2901, 34724, 42186, 65151, 26150, 66405, 15894, 55841, 74077, 55634, 64766, 18383, 66985, 47915, 23658, 13711, 23176, 63966, 68729, 64372, 28529, 32452, 69195, 1416, 39017, 32075, 35087, 19383, 65424, 2846, 23609, 2248, 36809, 1598, 16499, 11141, 13088, 43414, 43736, 48987, 29440, 17974, 49748, 40280, 47984, 12967, 4449, 11305, 3495, 21208, 62730, 36465, 23780, 5351, 5280, 20101, 18280, 26116, 47939, 46791, 5906, 26030, 40079, 64720, 16715, 55749, 49620, 17893, 74381, 23585, 22372, 18348, 63807, 31600, 39842, 13393, 43191, 31911, 66718, 2334, 47187, 69233, 64756, 65828, 72408, 66364, 52271, 20949, 34969, 36484, 73742, 69114, 60462, 60578, 66136, 72157, 5359, 8294, 22797, 65836, 13466, 35000, 53933, 53297, 1667, 35447, 75567, 76386, 47228, 60403, 18888, 53923, 75914, 72626, 24351, 71318, 28574, 35349, 49089, 68520, 18736, 1722, 49707, 66574, 15211, 36763, 43735, 54494, 72782, 15914, 39645, 64216, 73798, 40771, 68795, 64364, 36044, 65296, 2206, 53835, 12279, 22822, 68749, 35173, 10612, 17772, 16814, 68710, 19418, 56666, 15844, 41841, 35003, 68447, 20371, 13391, 58431, 39148, 9577, 55304, 39359, 44954, 9799, 65840, 71380, 28366, 2108, 18373, 35393, 17753, 56604, 23127, 53984, 37608, 47393, 39452, 7429, 19030, 67197, 54858, 1381, 27897, 31962, 68721, 52176, 2889, 42986, 43537, 26216, 71528, 38032, 37312, 66428, 71691, 23467, 10941, 64946, 39003, 3178, 13174, 52305, 69277, 22301, 42397, 5868, 16710, 4700, 26543, 68709, 28314, 43583, 5885, 39767, 60179, 19455, 13164, 51851, 12287, 35164, 9126, 63759, 71875, 65321, 23337, 1286, 28187, 60402, 56409, 36050, 63614, 39084, 71678, 20227, 7283, 66523, 12836, 19532, 47923, 13741, 18374, 65626, 19075, 43138, 12603, 44930, 32962, 43182, 55384, 18961, 56729, 74165, 66667, 71992, 75108, 23260, 19946, 41846, 43569, 36228, 62847, 37542, 64810, 56475, 12227, 58178, 19438, 18041, 1173, 43482, 32127, 43750, 46828, 23649, 53576, 4271, 60647, 58454, 55708, 3535, 32096, 71695, 34919, 8733, 39352, 59096, 67345, 47502, 63171, 3492, 47036, 75328, 27975, 1500, 62215, 53401, 60338, 19882, 59347, 36070, 36211, 65195, 952, 39888, 55359, 76446, 42448, 43678, 42350, 73391, 52546, 2897, 37872, 39147, 69375, 35430, 13205, 65221, 36662, 35376, 39333, 49558, 65085, 1962, 39234, 19951, 53432, 12420, 36219, 34898, 69321, 66443, 37455, 26278, 2122, 16589, 24328, 22271, 66063, 21183, 2357, 21751, 22198, 43118, 36343, 63173, 36309, 22601, 43825, 22552, 34868, 50086, 39883, 34711, 42999, 72913, 15793, 55560, 36811, 22762, 35069, 55529, 55751, 22787, 74411, 19729, 21749, 18560, 20179, 26007, 54877, 46810, 56883, 43604, 41790, 10529, 10842, 21296, 53313, 28035, 26153, 3456, 55898, 43144, 53460, 37138, 53573, 15855, 65550, 60267, 22322, 10743, 65589, 17951, 28185, 15956, 39112, 74966, 28140, 15769, 69224, 2339, 47174, 56268, 76462, 33371, 17935, 3317, 18163, 44925, 66848, 13220, 17777, 54732, 35171, 12167, 64270, 23211, 40735, 73046, 2394, 43121, 68491, 13569, 22516, 19044, 54029, 75736, 44950, 3401, 20393, 43235, 15665, 13323, 13963, 12123, 18249, 63910, 49647, 35317, 1967, 45209, 36318, 49855, 75377, 16566, 58452, 55492, 18634, 6157, 21151, 2092, 20364, 44325, 25250, 16845, 63620, 34326, 61035, 65570, 19090, 22794, 62831, 43547, 53398, 47861, 28481, 41117, 76208, 63479, 1504, 55637, 41796, 60556, 72672, 15719, 23774, 39880, 52998, 69041, 43101, 34114, 22337, 1990, 11120, 65246, 37690, 43226, 64497, 34650, 62364, 35111, 10779, 52488, 39781, 18033, 63120, 20402, 13665, 18226, 2067, 20454, 35300, 55871, 53017, 40911, 55268, 68328, 13151, 34796, 54128, 34841, 43155, 60030, 16553, 54476, 56659, 20953, 41877, 65363, 19668, 35146, 18019, 73864, 29703, 39457, 6186, 23560, 18370, 2261, 10851, 63755, 62902, 23612, 26175, 38954, 1902, 28484, 75647, 34320, 28572, 47085, 15226, 63397, 65530, 60626, 53949, 37830, 7260, 47999, 68741, 75825, 7268, 12163, 69261, 69130, 58944, 72309, 28360, 44080, 52609, 3490, 43190, 39582, 29384, 16524, 34755, 21197, 75824), '0.00', True, '1/2327/%', True, '1/2327/%', ('waiting', 'confirmed', 'partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL)) AND ("stock_move"."state" in %s))' with params: [(22208, 13403, 21501, 26054, 62259, 64085, 30488, 7430, 3096, 64535, 7330, 47168, 24401, 20129, 66897, 47584, 23468, 72972, 65115, 71347, 39064, 45150, 69271, 55724, 63406, 18121, 39906, 23188, 56769, 63714, 21771, 11328, 34619, 16677, 15714, 52566, 65110, 3497, 20894, 61062, 55790, 7326, 1167, 47093, 26099, 60159, 33139, 1064, 53397, 52443, 41904, 63465, 18017, 62767, 26180, 10781, 63310, 73409, 54851, 73761, 13254, 76367, 52964, 20235, 21174, 49036, 11661, 10985, 76457, 63122, 38998, 1225, 21209, 49891, 34645, 47976, 44823, 18022, 39477, 46830, 36473, 65851, 29526, 39394, 30470, 55909, 47560, 60550, 40773, 1284, 75984, 22841, 36170, 42947, 63769, 4591, 1835, 33210, 22904, 16801, 68167, 23284, 23587, 23425, 43362, 1646, 34986, 40311, 20125, 47864, 69423, 32067, 15831, 40289, 43080, 63539, 66164, 39913, 5284, 44853, 29356, 6146, 42364, 66779, 9135, 52497, 37945, 55865, 47176, 42344, 46826, 39656, 65448, 28494, 15704, 37479, 63652, 12364, 22484, 60256, 2177, 9894, 35218, 62794, 16706, 22299, 65175, 75787, 73632, 34749, 44202, 42282, 22572, 895, 64848, 34673, 7451, 19348, 56765, 71448, 52459, 37674, 73579, 11460, 22744, 23416, 3530, 23684, 42331, 11307, 60963, 56317, 1572, 69320, 71261, 64827, 21156, 35455, 63252, 53544, 22047, 52511, 52307, 19979, 13388, 51857, 21857, 25354, 10893, 19594, 55333, 5811, 1941, 12847, 69232, 52400, 20930, 66316, 74611, 72967, 53817, 23449, 72727, 59362, 48921, 21858, 69290, 74487, 75727, 19275, 45240, 52586, 9094, 71767, 65710, 21193, 63339, 18837, 53631, 3065, 47442, 41840, 75286, 22996, 5792, 72190, 35170, 35382, 23805, 9056, 16629, 63837, 74739, 75920, 19921, 48991, 18636, 13862, 2346, 75791, 56813, 16039, 43805, 53279, 63550, 21270, 28163, 60236, 62716, 21076, 10070, 22735, 37298, 56398, 43027, 39872, 65233, 19012, 71511, 7377, 20092, 56366, 3331, 21201, 16489, 33374, 21055, 22871, 828, 63870, 20962, 52192, 68767, 18076, 53626, 32031, 72576, 13354, 55890, 59330, 20469, 69011, 58321, 41799, 1497, 35311, 42485, 13678, 23111, 66163, 56548, 18895, 26082, 65838, 47227, 56587, 60815, 12122, 56477, 7439, 65330, 35433, 41800, 17781, 13568, 28384, 67413, 56810, 63162, 12901, 42976, 2189, 34671, 23224, 25314, 39411, 45153, 66889, 23157, 49709, 10898, 2217, 5887, 27950, 10583, 21755, 74667, 25345, 27786, 49636, 73278, 72598, 36419, 19332, 28285, 63601, 23048, 47877, 44299, 15407, 68979, 52599, 71669, 2207, 44854, 76327, 953, 20922, 62826, 7446, 28164, 2455, 3024, 37141, 60378, 54679, 56851, 60079, 56278, 43054, 52248, 63210, 62237, 20138, 56322, 26169, 19897, 54879, 13838, 2873, 19068, 71842, 13536, 37159, 16735, 19515, 18451, 64531, 19904, 37586, 920, 17705, 26556, 66385, 18679, 41953, 3551, 9892, 20964, 4414, 2966, 22526, 22982, 3324, 74631, 65594, 63170, 49966, 55551, 54771, 63562, 61069, 35101, 1389, 60620, 26004, 28343, 65595, 34293, 11179, 49662, 3791, 44304, 74919, 39841, 63690, 18422, 32462, 37864, 22544, 59390, 42166, 75831, 74460, 22332, 15707, 15850, 24337, 41853, 39605, 22799, 4252, 3523, 4392, 72550, 18898, 74733, 59337, 49961, 10816, 36741, 55851, 48961, 64097, 19380, 76082, 28086, 49799, 10809, 19647, 20294, 2157, 22110, 55406, 44944, 66075, 22087, 52625, 47218, 60434, 63738, 24416, 65093, 43436, 22595, 18792, 22149, 46849, 28374, 29579, 67299, 23572, 16719, 63650, 37316, 60230, 5874, 53906, 68950, 33270, 29508, 56291, 53762, 1084, 66094, 53494, 64206, 10579, 29771, 3484, 64195, 32364, 75379, 1981, 39870, 17775, 66629, 68495, 48957, 49807, 75526, 40776, 23380, 36738, 53359, 19578, 35791, 20127, 13533, 63148, 74686, 34372, 18536, 55284, 76218, 32082, 25991, 46758, 73402, 53381, 74977, 18271, 855, 60799, 10493, 65625, 3385, 41598, 34156, 34119, 27441, 9664, 4301, 73389, 7347, 43801, 76391, 62790, 28173, 21267, 49601, 30452, 61051, 53301, 40091, 64541, 13830, 1801, 62713, 35229, 53551, 32027, 22067, 75612, 53743, 66319, 69040, 49790, 32170, 65976, 2901, 34724, 42186, 65151, 26150, 66405, 15894, 55841, 74077, 55634, 64766, 18383, 66985, 47915, 23658, 13711, 23176, 63966, 68729, 64372, 28529, 32452, 69195, 1416, 39017, 32075, 35087, 19383, 65424, 2846, 23609, 2248, 36809, 1598, 16499, 11141, 13088, 43414, 43736, 48987, 29440, 17974, 49748, 40280, 47984, 12967, 4449, 11305, 3495, 21208, 62730, 36465, 23780, 5351, 5280, 20101, 18280, 26116, 47939, 46791, 5906, 26030, 40079, 64720, 16715, 55749, 49620, 17893, 74381, 23585, 22372, 18348, 63807, 31600, 39842, 13393, 43191, 31911, 66718, 2334, 47187, 69233, 64756, 65828, 72408, 66364, 52271, 20949, 34969, 36484, 73742, 69114, 60462, 60578, 66136, 72157, 5359, 8294, 22797, 65836, 13466, 35000, 53933, 53297, 1667, 35447, 75567, 76386, 47228, 60403, 18888, 53923, 75914, 72626, 24351, 71318, 28574, 35349, 49089, 68520, 18736, 1722, 49707, 66574, 15211, 36763, 43735, 54494, 72782, 15914, 39645, 64216, 73798, 40771, 68795, 64364, 36044, 65296, 2206, 53835, 12279, 22822, 68749, 35173, 10612, 17772, 16814, 68710, 19418, 56666, 15844, 41841, 35003, 68447, 20371, 13391, 58431, 39148, 9577, 55304, 39359, 44954, 9799, 65840, 71380, 28366, 2108, 18373, 35393, 17753, 56604, 23127, 53984, 37608, 47393, 39452, 7429, 19030, 67197, 54858, 1381, 27897, 31962, 68721, 52176, 2889, 42986, 43537, 26216, 71528, 38032, 37312, 66428, 71691, 23467, 10941, 64946, 39003, 3178, 13174, 52305, 69277, 22301, 42397, 5868, 16710, 4700, 26543, 68709, 28314, 43583, 5885, 39767, 60179, 19455, 13164, 51851, 12287, 35164, 9126, 63759, 71875, 65321, 23337, 1286, 28187, 60402, 56409, 36050, 63614, 39084, 71678, 20227, 7283, 66523, 12836, 19532, 47923, 13741, 18374, 65626, 19075, 43138, 12603, 44930, 32962, 43182, 55384, 18961, 56729, 74165, 66667, 71992, 75108, 23260, 19946, 41846, 43569, 36228, 62847, 37542, 64810, 56475, 12227, 58178, 19438, 18041, 1173, 43482, 32127, 43750, 46828, 23649, 53576, 4271, 60647, 58454, 55708, 3535, 32096, 71695, 34919, 8733, 39352, 59096, 67345, 47502, 63171, 3492, 47036, 75328, 27975, 1500, 62215, 53401, 60338, 19882, 59347, 36070, 36211, 65195, 952, 39888, 55359, 76446, 42448, 43678, 42350, 73391, 52546, 2897, 37872, 39147, 69375, 35430, 13205, 65221, 36662, 35376, 39333, 49558, 65085, 1962, 39234, 19951, 53432, 12420, 36219, 34898, 69321, 66443, 37455, 26278, 2122, 16589, 24328, 22271, 66063, 21183, 2357, 21751, 22198, 43118, 36343, 63173, 36309, 22601, 43825, 22552, 34868, 50086, 39883, 34711, 42999, 72913, 15793, 55560, 36811, 22762, 35069, 55529, 55751, 22787, 74411, 19729, 21749, 18560, 20179, 26007, 54877, 46810, 56883, 43604, 41790, 10529, 10842, 21296, 53313, 28035, 26153, 3456, 55898, 43144, 53460, 37138, 53573, 15855, 65550, 60267, 22322, 10743, 65589, 17951, 28185, 15956, 39112, 74966, 28140, 15769, 69224, 2339, 47174, 56268, 76462, 33371, 17935, 3317, 18163, 44925, 66848, 13220, 17777, 54732, 35171, 12167, 64270, 23211, 40735, 73046, 2394, 43121, 68491, 13569, 22516, 19044, 54029, 75736, 44950, 3401, 20393, 43235, 15665, 13323, 13963, 12123, 18249, 63910, 49647, 35317, 1967, 45209, 36318, 49855, 75377, 16566, 58452, 55492, 18634, 6157, 21151, 2092, 20364, 44325, 25250, 16845, 63620, 34326, 61035, 65570, 19090, 22794, 62831, 43547, 53398, 47861, 28481, 41117, 76208, 63479, 1504, 55637, 41796, 60556, 72672, 15719, 23774, 39880, 52998, 69041, 43101, 34114, 22337, 1990, 11120, 65246, 37690, 43226, 64497, 34650, 62364, 35111, 10779, 52488, 39781, 18033, 63120, 20402, 13665, 18226, 2067, 20454, 35300, 55871, 53017, 40911, 55268, 68328, 13151, 34796, 54128, 34841, 43155, 60030, 16553, 54476, 56659, 20953, 41877, 65363, 19668, 35146, 18019, 73864, 29703, 39457, 6186, 23560, 18370, 2261, 10851, 63755, 62902, 23612, 26175, 38954, 1902, 28484, 75647, 34320, 28572, 47085, 15226, 63397, 65530, 60626, 53949, 37830, 7260, 47999, 68741, 75825, 7268, 12163, 69261, 69130, 58944, 72309, 28360, 44080, 52609, 3490, 43190, 39582, 29384, 16524, 34755, 21197, 75824), '0.00', True, '1/2327/%', True, '1/2327/%', ('waiting', 'confirmed', 'partially_available', 'assigned'), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL))' with params: [(22208, 13403, 21501, 26054, 62259, 64085, 30488, 7430, 3096, 64535, 7330, 47168, 24401, 20129, 66897, 47584, 23468, 72972, 65115, 71347, 39064, 45150, 69271, 55724, 63406, 18121, 39906, 23188, 56769, 63714, 21771, 11328, 34619, 16677, 15714, 52566, 65110, 3497, 20894, 61062, 55790, 7326, 1167, 47093, 26099, 60159, 33139, 1064, 53397, 52443, 41904, 63465, 18017, 62767, 26180, 10781, 63310, 73409, 54851, 73761, 13254, 76367, 52964, 20235, 21174, 49036, 11661, 10985, 76457, 63122, 38998, 1225, 21209, 49891, 34645, 47976, 44823, 18022, 39477, 46830, 36473, 65851, 29526, 39394, 30470, 55909, 47560, 60550, 40773, 1284, 75984, 22841, 36170, 42947, 63769, 4591, 1835, 33210, 22904, 16801, 68167, 23284, 23587, 23425, 43362, 1646, 34986, 40311, 20125, 47864, 69423, 32067, 15831, 40289, 43080, 63539, 66164, 39913, 5284, 44853, 29356, 6146, 42364, 66779, 9135, 52497, 37945, 55865, 47176, 42344, 46826, 39656, 65448, 28494, 15704, 37479, 63652, 12364, 22484, 60256, 2177, 9894, 35218, 62794, 16706, 22299, 65175, 75787, 73632, 34749, 44202, 42282, 22572, 895, 64848, 34673, 7451, 19348, 56765, 71448, 52459, 37674, 73579, 11460, 22744, 23416, 3530, 23684, 42331, 11307, 60963, 56317, 1572, 69320, 71261, 64827, 21156, 35455, 63252, 53544, 22047, 52511, 52307, 19979, 13388, 51857, 21857, 25354, 10893, 19594, 55333, 5811, 1941, 12847, 69232, 52400, 20930, 66316, 74611, 72967, 53817, 23449, 72727, 59362, 48921, 21858, 69290, 74487, 75727, 19275, 45240, 52586, 9094, 71767, 65710, 21193, 63339, 18837, 53631, 3065, 47442, 41840, 75286, 22996, 5792, 72190, 35170, 35382, 23805, 9056, 16629, 63837, 74739, 75920, 19921, 48991, 18636, 13862, 2346, 75791, 56813, 16039, 43805, 53279, 63550, 21270, 28163, 60236, 62716, 21076, 10070, 22735, 37298, 56398, 43027, 39872, 65233, 19012, 71511, 7377, 20092, 56366, 3331, 21201, 16489, 33374, 21055, 22871, 828, 63870, 20962, 52192, 68767, 18076, 53626, 32031, 72576, 13354, 55890, 59330, 20469, 69011, 58321, 41799, 1497, 35311, 42485, 13678, 23111, 66163, 56548, 18895, 26082, 65838, 47227, 56587, 60815, 12122, 56477, 7439, 65330, 35433, 41800, 17781, 13568, 28384, 67413, 56810, 63162, 12901, 42976, 2189, 34671, 23224, 25314, 39411, 45153, 66889, 23157, 49709, 10898, 2217, 5887, 27950, 10583, 21755, 74667, 25345, 27786, 49636, 73278, 72598, 36419, 19332, 28285, 63601, 23048, 47877, 44299, 15407, 68979, 52599, 71669, 2207, 44854, 76327, 953, 20922, 62826, 7446, 28164, 2455, 3024, 37141, 60378, 54679, 56851, 60079, 56278, 43054, 52248, 63210, 62237, 20138, 56322, 26169, 19897, 54879, 13838, 2873, 19068, 71842, 13536, 37159, 16735, 19515, 18451, 64531, 19904, 37586, 920, 17705, 26556, 66385, 18679, 41953, 3551, 9892, 20964, 4414, 2966, 22526, 22982, 3324, 74631, 65594, 63170, 49966, 55551, 54771, 63562, 61069, 35101, 1389, 60620, 26004, 28343, 65595, 34293, 11179, 49662, 3791, 44304, 74919, 39841, 63690, 18422, 32462, 37864, 22544, 59390, 42166, 75831, 74460, 22332, 15707, 15850, 24337, 41853, 39605, 22799, 4252, 3523, 4392, 72550, 18898, 74733, 59337, 49961, 10816, 36741, 55851, 48961, 64097, 19380, 76082, 28086, 49799, 10809, 19647, 20294, 2157, 22110, 55406, 44944, 66075, 22087, 52625, 47218, 60434, 63738, 24416, 65093, 43436, 22595, 18792, 22149, 46849, 28374, 29579, 67299, 23572, 16719, 63650, 37316, 60230, 5874, 53906, 68950, 33270, 29508, 56291, 53762, 1084, 66094, 53494, 64206, 10579, 29771, 3484, 64195, 32364, 75379, 1981, 39870, 17775, 66629, 68495, 48957, 49807, 75526, 40776, 23380, 36738, 53359, 19578, 35791, 20127, 13533, 63148, 74686, 34372, 18536, 55284, 76218, 32082, 25991, 46758, 73402, 53381, 74977, 18271, 855, 60799, 10493, 65625, 3385, 41598, 34156, 34119, 27441, 9664, 4301, 73389, 7347, 43801, 76391, 62790, 28173, 21267, 49601, 30452, 61051, 53301, 40091, 64541, 13830, 1801, 62713, 35229, 53551, 32027, 22067, 75612, 53743, 66319, 69040, 49790, 32170, 65976, 2901, 34724, 42186, 65151, 26150, 66405, 15894, 55841, 74077, 55634, 64766, 18383, 66985, 47915, 23658, 13711, 23176, 63966, 68729, 64372, 28529, 32452, 69195, 1416, 39017, 32075, 35087, 19383, 65424, 2846, 23609, 2248, 36809, 1598, 16499, 11141, 13088, 43414, 43736, 48987, 29440, 17974, 49748, 40280, 47984, 12967, 4449, 11305, 3495, 21208, 62730, 36465, 23780, 5351, 5280, 20101, 18280, 26116, 47939, 46791, 5906, 26030, 40079, 64720, 16715, 55749, 49620, 17893, 74381, 23585, 22372, 18348, 63807, 31600, 39842, 13393, 43191, 31911, 66718, 2334, 47187, 69233, 64756, 65828, 72408, 66364, 52271, 20949, 34969, 36484, 73742, 69114, 60462, 60578, 66136, 72157, 5359, 8294, 22797, 65836, 13466, 35000, 53933, 53297, 1667, 35447, 75567, 76386, 47228, 60403, 18888, 53923, 75914, 72626, 24351, 71318, 28574, 35349, 49089, 68520, 18736, 1722, 49707, 66574, 15211, 36763, 43735, 54494, 72782, 15914, 39645, 64216, 73798, 40771, 68795, 64364, 36044, 65296, 2206, 53835, 12279, 22822, 68749, 35173, 10612, 17772, 16814, 68710, 19418, 56666, 15844, 41841, 35003, 68447, 20371, 13391, 58431, 39148, 9577, 55304, 39359, 44954, 9799, 65840, 71380, 28366, 2108, 18373, 35393, 17753, 56604, 23127, 53984, 37608, 47393, 39452, 7429, 19030, 67197, 54858, 1381, 27897, 31962, 68721, 52176, 2889, 42986, 43537, 26216, 71528, 38032, 37312, 66428, 71691, 23467, 10941, 64946, 39003, 3178, 13174, 52305, 69277, 22301, 42397, 5868, 16710, 4700, 26543, 68709, 28314, 43583, 5885, 39767, 60179, 19455, 13164, 51851, 12287, 35164, 9126, 63759, 71875, 65321, 23337, 1286, 28187, 60402, 56409, 36050, 63614, 39084, 71678, 20227, 7283, 66523, 12836, 19532, 47923, 13741, 18374, 65626, 19075, 43138, 12603, 44930, 32962, 43182, 55384, 18961, 56729, 74165, 66667, 71992, 75108, 23260, 19946, 41846, 43569, 36228, 62847, 37542, 64810, 56475, 12227, 58178, 19438, 18041, 1173, 43482, 32127, 43750, 46828, 23649, 53576, 4271, 60647, 58454, 55708, 3535, 32096, 71695, 34919, 8733, 39352, 59096, 67345, 47502, 63171, 3492, 47036, 75328, 27975, 1500, 62215, 53401, 60338, 19882, 59347, 36070, 36211, 65195, 952, 39888, 55359, 76446, 42448, 43678, 42350, 73391, 52546, 2897, 37872, 39147, 69375, 35430, 13205, 65221, 36662, 35376, 39333, 49558, 65085, 1962, 39234, 19951, 53432, 12420, 36219, 34898, 69321, 66443, 37455, 26278, 2122, 16589, 24328, 22271, 66063, 21183, 2357, 21751, 22198, 43118, 36343, 63173, 36309, 22601, 43825, 22552, 34868, 50086, 39883, 34711, 42999, 72913, 15793, 55560, 36811, 22762, 35069, 55529, 55751, 22787, 74411, 19729, 21749, 18560, 20179, 26007, 54877, 46810, 56883, 43604, 41790, 10529, 10842, 21296, 53313, 28035, 26153, 3456, 55898, 43144, 53460, 37138, 53573, 15855, 65550, 60267, 22322, 10743, 65589, 17951, 28185, 15956, 39112, 74966, 28140, 15769, 69224, 2339, 47174, 56268, 76462, 33371, 17935, 3317, 18163, 44925, 66848, 13220, 17777, 54732, 35171, 12167, 64270, 23211, 40735, 73046, 2394, 43121, 68491, 13569, 22516, 19044, 54029, 75736, 44950, 3401, 20393, 43235, 15665, 13323, 13963, 12123, 18249, 63910, 49647, 35317, 1967, 45209, 36318, 49855, 75377, 16566, 58452, 55492, 18634, 6157, 21151, 2092, 20364, 44325, 25250, 16845, 63620, 34326, 61035, 65570, 19090, 22794, 62831, 43547, 53398, 47861, 28481, 41117, 76208, 63479, 1504, 55637, 41796, 60556, 72672, 15719, 23774, 39880, 52998, 69041, 43101, 34114, 22337, 1990, 11120, 65246, 37690, 43226, 64497, 34650, 62364, 35111, 10779, 52488, 39781, 18033, 63120, 20402, 13665, 18226, 2067, 20454, 35300, 55871, 53017, 40911, 55268, 68328, 13151, 34796, 54128, 34841, 43155, 60030, 16553, 54476, 56659, 20953, 41877, 65363, 19668, 35146, 18019, 73864, 29703, 39457, 6186, 23560, 18370, 2261, 10851, 63755, 62902, 23612, 26175, 38954, 1902, 28484, 75647, 34320, 28572, 47085, 15226, 63397, 65530, 60626, 53949, 37830, 7260, 47999, 68741, 75825, 7268, 12163, 69261, 69130, 58944, 72309, 28360, 44080, 52609, 3490, 43190, 39582, 29384, 16524, 34755, 21197, 75824), '0.00', True, '1/2327/%', True, '1/2327/%', ('waiting', 'confirmed', 'partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL))' with params: [(12843, 18843, 47764, 53001, 30440, 61044, 19834, 40279, 76252, 56875, 64349, 1948, 65839, 38498, 68785, 39411, 67005, 16666, 37657, 8771, 53769, 56664, 28355, 53839, 6099, 19645, 23628, 75750, 63263, 63558, 60626, 8792, 69087, 17993, 63821, 69001, 20070, 7321, 75370, 56849, 17603, 43859, 75924, 2221, 52179, 38962, 21153, 54024, 6227, 12242, 3382, 4575, 52982, 42275, 32181, 64109, 70396, 8672, 9636, 66421, 24383, 44742, 53555, 37624, 22854, 34155, 24425, 19578, 26052, 34974, 39220, 65507, 40131, 47898, 73009, 36309, 47841, 71372, 4564, 56480, 34945, 39926, 66072, 39665, 69176, 49001, 52079, 24249, 62266, 2375, 6079, 2090, 12115, 74131, 13497, 18952, 8799, 74126, 1877, 32066, 40117, 8695, 66556, 45211, 63146, 65164, 36131, 55548, 37352, 44228, 12220, 18472, 9138, 39576, 23087, 10630, 60357, 49579, 1934, 1838, 7313, 53412, 3788, 39845, 23760, 7344, 22532, 17955, 18266, 43099, 63764, 54485, 54116, 56312, 43208, 22617, 38946, 23818, 51883, 35008, 20203, 65408, 24157, 38248, 72586, 34847, 53994, 19029, 1071, 12880, 20083, 36212, 54446, 62903, 52195, 42322, 54085, 34591, 3216, 39015, 22179, 5910, 71861, 76015, 1717, 43371, 13871, 53525, 37384, 22207, 64233, 13788, 12391, 62792, 22183, 65295, 44233, 33156, 22160, 10478, 42099, 63006, 68752, 40033, 10838, 12241, 30485, 37921, 67374, 47468, 37267, 65495, 49626, 75636, 68318, 59145, 7441, 19493, 12591, 13901, 44973, 3499, 71701, 15828, 71831, 74121, 63914, 59413, 34678, 75288, 4461, 69378, 65208, 12967, 9661, 64243, 52313, 75871, 2276, 73097, 12299, 4543, 24243, 58427, 75510, 25970, 26129, 47042, 22064, 1606, 19414, 45152, 56620, 43121, 53462, 34882, 64785, 36369, 34748, 41767, 71943, 22266, 52142, 43529, 7406, 41587, 27954, 18419, 12213, 22347, 43464, 64068, 34613, 37563, 15851, 29245, 9664, 66169, 22442, 40185, 42462, 52934, 1745, 74357, 55414, 38965, 19298, 26522, 34794, 18958, 1454, 43572, 68331, 55757, 52393, 19542, 42978, 2180, 72272, 68497, 34773, 17872, 53574, 18072, 35297, 15125, 75514, 23301, 63141, 47546, 34679, 44917, 23669, 6175, 20279, 20204, 62212, 62942, 73990, 31590, 73817, 21859, 74238, 22518, 75063, 12332, 73866, 37902, 63777, 3074, 62302, 55609, 1886, 888, 56805, 53604, 72186, 35379, 54782, 66789, 19462, 43830, 13305, 39534, 20679, 43190, 38993, 7364, 19730, 34148, 52589, 75182, 35471, 43314, 23600, 76257, 43553, 55762, 45147, 18130, 20928, 3277, 3018, 39399, 22544, 2343, 35260, 73625, 69178, 43497, 3506, 23124, 63657, 22365, 47950, 54727, 43068, 35056, 20039, 37548, 1854, 62354, 13035, 36431, 26290, 53480, 65497, 39405, 18725, 6100, 13307, 72530, 58434, 43010, 75709, 1673, 22026, 63023, 20266, 3366, 44951, 3066, 2146, 5814, 68200, 7383, 72804, 66661, 18948, 66176, 29722, 55829, 53030, 35123, 13220, 20269, 48978, 66560, 41969, 56612, 48996, 23431, 63963, 13172, 15904, 42357, 47892, 8260, 8263, 60800, 63565, 43076, 23204, 75404, 63840, 43238, 37448, 49879, 6168, 63009, 39871, 33207, 32065, 43478, 16717, 5350, 4252, 7306, 65082, 60158, 71785, 29378, 75491, 76256, 23005, 39873, 64025, 71790, 71707, 13617, 43539, 59029, 33255, 36476, 18726, 35184, 23532, 33189, 15622, 37691, 47955, 52390, 16545, 22849, 22214, 69261, 38948, 65141, 13500, 19262, 3254, 21183, 65083, 2293, 4496, 32001, 28231, 38956, 60559, 7289, 74494, 12315, 36423, 16504, 55944, 56412, 41821, 58433, 63139, 52329, 72730, 56469, 34688, 32097, 54534, 63800, 39305, 9070, 23813, 47540, 55648, 35396, 54051, 47223, 30401, 72606, 47741, 12556, 47449, 56438, 63885, 15211, 52416, 39114, 68833, 16034, 52631, 9911, 53177, 2188, 36066, 6137, 15898, 43666, 2207, 49887, 41606, 12314, 23335, 47993, 1942, 43551, 3764, 21218, 13314, 44142, 12927, 60239, 62293, 22684, 59088, 16739, 39566, 43672, 37356, 60294, 2857, 47871, 8644, 39408, 64815, 13126, 69350, 76444, 17816, 74177, 65168, 46854, 27457, 1487, 42021, 2011, 64183, 28009, 47253, 19988, 3481, 54125, 2069, 56365, 9119, 24210, 50118, 49684, 75885, 72999, 12523, 55470, 37577, 34713, 56912, 49839, 30384, 22549, 37845, 53430, 72074, 23396, 18080, 3789, 40321, 47098, 59147, 52145, 31992, 13129, 18776, 20209, 1726, 63167, 22354, 63978, 68322, 51831, 32032, 39217, 29522, 75974, 22472, 49666, 63137, 60351, 19551, 53573, 53490, 44238, 23762, 4581, 13098, 55525, 71304, 24181, 5859, 10984, 15892, 74288, 39829, 34564, 58435, 21747, 49007, 18491, 47953, 60431, 59059, 13203, 35063, 52321, 18301, 37639, 68203, 4351, 22408, 39116, 52316, 44891, 71857, 43341, 56375, 39372, 56444, 12123, 66699, 75371, 40118, 18502, 67187, 16493, 18568, 34805, 47936, 26104, 46873, 12406, 47074, 49577, 46783, 3769, 66869, 1116, 47909, 28360, 13187, 31597, 18575, 3558, 74042, 60423, 39451, 49861, 37538, 23093, 23392, 72892, 65542, 15417, 33185, 6225, 45182, 3447, 38963, 23318, 36325, 65723, 62982, 58986, 945, 49060, 52626, 21241, 37844, 64710, 35796, 32979, 34424, 47386, 54134, 26000, 2117, 23527, 1539, 37861, 17839, 36128, 65611, 55692, 34877, 54513, 49042, 53024, 42980, 37539, 10885, 23810, 68169, 67284, 37831, 64990, 56559, 68517, 36705, 69007, 71278, 58485, 34652, 66596, 74023, 22456, 34619, 59356, 64372, 63643, 23340, 22776, 73027, 70426, 6219, 26568, 44942, 66738, 19276, 7350, 33200, 54889, 19925, 34880, 48965, 34388, 3353, 27426, 24369, 15483, 19024, 32169, 52938, 52368, 53602, 60649, 23173, 49033, 34792, 53534, 9654, 58836, 22632, 10615, 43486, 22319, 31601, 20476, 43290, 37469, 24191, 1850, 22369, 1792, 26585, 21088, 63754, 12321, 37612, 18620, 64304, 26534, 22022, 2083, 23235, 5309, 68286, 55833, 18865, 31602, 3173, 60652, 47263, 15722, 2093, 63611, 11168, 43985, 75687, 19090, 7429, 33127, 75127, 41982, 10850, 10576, 41109, 40223, 22735, 13205, 8635, 43973, 48945, 69071, 7345, 34647, 9631, 70393, 46655, 17891, 38024, 66667, 65798, 18163, 9898, 22360, 16796, 22683, 68816, 26710, 49793, 73543, 24344, 23486, 75714, 9628, 37338, 9928, 19680, 65195, 64055, 46846, 13895, 2420, 49673, 55546, 56554, 53122, 43595, 48952, 56688, 41911, 4476, 42004, 61476, 20938, 12957, 1605, 29555, 69287, 34906, 10522, 52460, 8690, 39157, 32152, 19325, 76462, 41013, 39994, 64977, 12969, 19604, 13309, 22370, 46746, 47488, 1727, 56683, 7284, 36703, 53017, 28218, 47986, 32954, 37339, 19832, 17762, 47251, 40907, 49741, 38758, 33294, 63584, 56910, 52447, 36201, 63419, 8732, 65159, 66985, 43967, 18136, 67298, 37597, 58428, 22051, 20251, 55839, 39308, 42305, 3776, 29451, 54870, 52110, 65007, 71781, 855, 22691, 67334, 49644, 53864, 60550, 22824, 36446, 65487, 23828, 16812, 59178, 23710, 4693, 2887, 8265, 75781, 68559, 67211, 26070, 71912, 15740, 65048, 18251, 41944, 62345, 48918, 19018, 42287, 44829, 19873, 45245, 21737, 13244, 7285, 29412, 12339, 19458, 49685, 66803, 55474, 6058, 19858, 75347, 47225, 67082, 19001, 23679, 60599, 63681, 29763, 24235, 64902, 43522, 74195, 1899, 13654, 74669, 74179, 18833, 37412, 72129, 22301, 65026, 23168, 9090, 41017, 68509, 13252, 71596, 73830, 2064, 10717, 3126, 44111, 28330, 31959, 36113, 10815, 52227, 63877, 18884, 55695, 3581, 65341, 27804, 54854, 65089, 10942, 39791, 56874, 52948, 19281, 56675, 60302, 53473, 28297, 23775, 1547, 64066, 12061, 22205, 64206, 23127, 47411, 66093, 40220, 36263, 6215, 65148, 19877, 66976, 66735, 67351, 4358, 10461, 22196, 35054, 56421, 65435, 22359, 28070, 29373, 18800, 62796, 65599, 39651, 29454, 13354, 2031, 3171, 70422, 26613, 26075, 12255, 39290, 43385, 21147, 60693, 36147, 23285, 52202, 63649, 60402, 11299, 22055, 37785, 74968, 32177, 40201, 50097, 17937, 13124, 2910, 45077, 962, 55485, 19391, 3642, 52957, 63843, 76476, 1600, 64759, 73694, 43601, 55529, 71759, 42328, 62246, 29170, 65472, 41949, 22614, 18652, 13570, 53280, 68998, 22202, 2944, 53289, 3370, 7166, 47923, 39670, 42071, 49814, 72322, 25815, 34872, 3188, 39266, 64740, 7271, 43027, 76349, 39937, 52408, 30376, 6212, 21150, 18418, 25270, 44322, 13721, 64394, 62725, 4493, 36111, 52146, 74135, 21505), '0.00', True, '1/2319/%', True, '1/2319/%', ('waiting', 'confirmed', 'partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL)) AND ("stock_move"."state" in %s))' with params: [(12843, 18843, 47764, 53001, 30440, 61044, 19834, 40279, 76252, 56875, 64349, 1948, 65839, 38498, 68785, 39411, 67005, 16666, 37657, 8771, 53769, 56664, 28355, 53839, 6099, 19645, 23628, 75750, 63263, 63558, 60626, 8792, 69087, 17993, 63821, 69001, 20070, 7321, 75370, 56849, 17603, 43859, 75924, 2221, 52179, 38962, 21153, 54024, 6227, 12242, 3382, 4575, 52982, 42275, 32181, 64109, 70396, 8672, 9636, 66421, 24383, 44742, 53555, 37624, 22854, 34155, 24425, 19578, 26052, 34974, 39220, 65507, 40131, 47898, 73009, 36309, 47841, 71372, 4564, 56480, 34945, 39926, 66072, 39665, 69176, 49001, 52079, 24249, 62266, 2375, 6079, 2090, 12115, 74131, 13497, 18952, 8799, 74126, 1877, 32066, 40117, 8695, 66556, 45211, 63146, 65164, 36131, 55548, 37352, 44228, 12220, 18472, 9138, 39576, 23087, 10630, 60357, 49579, 1934, 1838, 7313, 53412, 3788, 39845, 23760, 7344, 22532, 17955, 18266, 43099, 63764, 54485, 54116, 56312, 43208, 22617, 38946, 23818, 51883, 35008, 20203, 65408, 24157, 38248, 72586, 34847, 53994, 19029, 1071, 12880, 20083, 36212, 54446, 62903, 52195, 42322, 54085, 34591, 3216, 39015, 22179, 5910, 71861, 76015, 1717, 43371, 13871, 53525, 37384, 22207, 64233, 13788, 12391, 62792, 22183, 65295, 44233, 33156, 22160, 10478, 42099, 63006, 68752, 40033, 10838, 12241, 30485, 37921, 67374, 47468, 37267, 65495, 49626, 75636, 68318, 59145, 7441, 19493, 12591, 13901, 44973, 3499, 71701, 15828, 71831, 74121, 63914, 59413, 34678, 75288, 4461, 69378, 65208, 12967, 9661, 64243, 52313, 75871, 2276, 73097, 12299, 4543, 24243, 58427, 75510, 25970, 26129, 47042, 22064, 1606, 19414, 45152, 56620, 43121, 53462, 34882, 64785, 36369, 34748, 41767, 71943, 22266, 52142, 43529, 7406, 41587, 27954, 18419, 12213, 22347, 43464, 64068, 34613, 37563, 15851, 29245, 9664, 66169, 22442, 40185, 42462, 52934, 1745, 74357, 55414, 38965, 19298, 26522, 34794, 18958, 1454, 43572, 68331, 55757, 52393, 19542, 42978, 2180, 72272, 68497, 34773, 17872, 53574, 18072, 35297, 15125, 75514, 23301, 63141, 47546, 34679, 44917, 23669, 6175, 20279, 20204, 62212, 62942, 73990, 31590, 73817, 21859, 74238, 22518, 75063, 12332, 73866, 37902, 63777, 3074, 62302, 55609, 1886, 888, 56805, 53604, 72186, 35379, 54782, 66789, 19462, 43830, 13305, 39534, 20679, 43190, 38993, 7364, 19730, 34148, 52589, 75182, 35471, 43314, 23600, 76257, 43553, 55762, 45147, 18130, 20928, 3277, 3018, 39399, 22544, 2343, 35260, 73625, 69178, 43497, 3506, 23124, 63657, 22365, 47950, 54727, 43068, 35056, 20039, 37548, 1854, 62354, 13035, 36431, 26290, 53480, 65497, 39405, 18725, 6100, 13307, 72530, 58434, 43010, 75709, 1673, 22026, 63023, 20266, 3366, 44951, 3066, 2146, 5814, 68200, 7383, 72804, 66661, 18948, 66176, 29722, 55829, 53030, 35123, 13220, 20269, 48978, 66560, 41969, 56612, 48996, 23431, 63963, 13172, 15904, 42357, 47892, 8260, 8263, 60800, 63565, 43076, 23204, 75404, 63840, 43238, 37448, 49879, 6168, 63009, 39871, 33207, 32065, 43478, 16717, 5350, 4252, 7306, 65082, 60158, 71785, 29378, 75491, 76256, 23005, 39873, 64025, 71790, 71707, 13617, 43539, 59029, 33255, 36476, 18726, 35184, 23532, 33189, 15622, 37691, 47955, 52390, 16545, 22849, 22214, 69261, 38948, 65141, 13500, 19262, 3254, 21183, 65083, 2293, 4496, 32001, 28231, 38956, 60559, 7289, 74494, 12315, 36423, 16504, 55944, 56412, 41821, 58433, 63139, 52329, 72730, 56469, 34688, 32097, 54534, 63800, 39305, 9070, 23813, 47540, 55648, 35396, 54051, 47223, 30401, 72606, 47741, 12556, 47449, 56438, 63885, 15211, 52416, 39114, 68833, 16034, 52631, 9911, 53177, 2188, 36066, 6137, 15898, 43666, 2207, 49887, 41606, 12314, 23335, 47993, 1942, 43551, 3764, 21218, 13314, 44142, 12927, 60239, 62293, 22684, 59088, 16739, 39566, 43672, 37356, 60294, 2857, 47871, 8644, 39408, 64815, 13126, 69350, 76444, 17816, 74177, 65168, 46854, 27457, 1487, 42021, 2011, 64183, 28009, 47253, 19988, 3481, 54125, 2069, 56365, 9119, 24210, 50118, 49684, 75885, 72999, 12523, 55470, 37577, 34713, 56912, 49839, 30384, 22549, 37845, 53430, 72074, 23396, 18080, 3789, 40321, 47098, 59147, 52145, 31992, 13129, 18776, 20209, 1726, 63167, 22354, 63978, 68322, 51831, 32032, 39217, 29522, 75974, 22472, 49666, 63137, 60351, 19551, 53573, 53490, 44238, 23762, 4581, 13098, 55525, 71304, 24181, 5859, 10984, 15892, 74288, 39829, 34564, 58435, 21747, 49007, 18491, 47953, 60431, 59059, 13203, 35063, 52321, 18301, 37639, 68203, 4351, 22408, 39116, 52316, 44891, 71857, 43341, 56375, 39372, 56444, 12123, 66699, 75371, 40118, 18502, 67187, 16493, 18568, 34805, 47936, 26104, 46873, 12406, 47074, 49577, 46783, 3769, 66869, 1116, 47909, 28360, 13187, 31597, 18575, 3558, 74042, 60423, 39451, 49861, 37538, 23093, 23392, 72892, 65542, 15417, 33185, 6225, 45182, 3447, 38963, 23318, 36325, 65723, 62982, 58986, 945, 49060, 52626, 21241, 37844, 64710, 35796, 32979, 34424, 47386, 54134, 26000, 2117, 23527, 1539, 37861, 17839, 36128, 65611, 55692, 34877, 54513, 49042, 53024, 42980, 37539, 10885, 23810, 68169, 67284, 37831, 64990, 56559, 68517, 36705, 69007, 71278, 58485, 34652, 66596, 74023, 22456, 34619, 59356, 64372, 63643, 23340, 22776, 73027, 70426, 6219, 26568, 44942, 66738, 19276, 7350, 33200, 54889, 19925, 34880, 48965, 34388, 3353, 27426, 24369, 15483, 19024, 32169, 52938, 52368, 53602, 60649, 23173, 49033, 34792, 53534, 9654, 58836, 22632, 10615, 43486, 22319, 31601, 20476, 43290, 37469, 24191, 1850, 22369, 1792, 26585, 21088, 63754, 12321, 37612, 18620, 64304, 26534, 22022, 2083, 23235, 5309, 68286, 55833, 18865, 31602, 3173, 60652, 47263, 15722, 2093, 63611, 11168, 43985, 75687, 19090, 7429, 33127, 75127, 41982, 10850, 10576, 41109, 40223, 22735, 13205, 8635, 43973, 48945, 69071, 7345, 34647, 9631, 70393, 46655, 17891, 38024, 66667, 65798, 18163, 9898, 22360, 16796, 22683, 68816, 26710, 49793, 73543, 24344, 23486, 75714, 9628, 37338, 9928, 19680, 65195, 64055, 46846, 13895, 2420, 49673, 55546, 56554, 53122, 43595, 48952, 56688, 41911, 4476, 42004, 61476, 20938, 12957, 1605, 29555, 69287, 34906, 10522, 52460, 8690, 39157, 32152, 19325, 76462, 41013, 39994, 64977, 12969, 19604, 13309, 22370, 46746, 47488, 1727, 56683, 7284, 36703, 53017, 28218, 47986, 32954, 37339, 19832, 17762, 47251, 40907, 49741, 38758, 33294, 63584, 56910, 52447, 36201, 63419, 8732, 65159, 66985, 43967, 18136, 67298, 37597, 58428, 22051, 20251, 55839, 39308, 42305, 3776, 29451, 54870, 52110, 65007, 71781, 855, 22691, 67334, 49644, 53864, 60550, 22824, 36446, 65487, 23828, 16812, 59178, 23710, 4693, 2887, 8265, 75781, 68559, 67211, 26070, 71912, 15740, 65048, 18251, 41944, 62345, 48918, 19018, 42287, 44829, 19873, 45245, 21737, 13244, 7285, 29412, 12339, 19458, 49685, 66803, 55474, 6058, 19858, 75347, 47225, 67082, 19001, 23679, 60599, 63681, 29763, 24235, 64902, 43522, 74195, 1899, 13654, 74669, 74179, 18833, 37412, 72129, 22301, 65026, 23168, 9090, 41017, 68509, 13252, 71596, 73830, 2064, 10717, 3126, 44111, 28330, 31959, 36113, 10815, 52227, 63877, 18884, 55695, 3581, 65341, 27804, 54854, 65089, 10942, 39791, 56874, 52948, 19281, 56675, 60302, 53473, 28297, 23775, 1547, 64066, 12061, 22205, 64206, 23127, 47411, 66093, 40220, 36263, 6215, 65148, 19877, 66976, 66735, 67351, 4358, 10461, 22196, 35054, 56421, 65435, 22359, 28070, 29373, 18800, 62796, 65599, 39651, 29454, 13354, 2031, 3171, 70422, 26613, 26075, 12255, 39290, 43385, 21147, 60693, 36147, 23285, 52202, 63649, 60402, 11299, 22055, 37785, 74968, 32177, 40201, 50097, 17937, 13124, 2910, 45077, 962, 55485, 19391, 3642, 52957, 63843, 76476, 1600, 64759, 73694, 43601, 55529, 71759, 42328, 62246, 29170, 65472, 41949, 22614, 18652, 13570, 53280, 68998, 22202, 2944, 53289, 3370, 7166, 47923, 39670, 42071, 49814, 72322, 25815, 34872, 3188, 39266, 64740, 7271, 43027, 76349, 39937, 52408, 30376, 6212, 21150, 18418, 25270, 44322, 13721, 64394, 62725, 4493, 36111, 52146, 74135, 21505), '0.00', True, '1/2319/%', True, '1/2319/%', ('waiting', 'confirmed', 'partially_available', 'assigned'), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL))' with params: [(12843, 18843, 47764, 53001, 30440, 61044, 19834, 40279, 76252, 56875, 64349, 1948, 65839, 38498, 68785, 39411, 67005, 16666, 37657, 8771, 53769, 56664, 28355, 53839, 6099, 19645, 23628, 75750, 63263, 63558, 60626, 8792, 69087, 17993, 63821, 69001, 20070, 7321, 75370, 56849, 17603, 43859, 75924, 2221, 52179, 38962, 21153, 54024, 6227, 12242, 3382, 4575, 52982, 42275, 32181, 64109, 70396, 8672, 9636, 66421, 24383, 44742, 53555, 37624, 22854, 34155, 24425, 19578, 26052, 34974, 39220, 65507, 40131, 47898, 73009, 36309, 47841, 71372, 4564, 56480, 34945, 39926, 66072, 39665, 69176, 49001, 52079, 24249, 62266, 2375, 6079, 2090, 12115, 74131, 13497, 18952, 8799, 74126, 1877, 32066, 40117, 8695, 66556, 45211, 63146, 65164, 36131, 55548, 37352, 44228, 12220, 18472, 9138, 39576, 23087, 10630, 60357, 49579, 1934, 1838, 7313, 53412, 3788, 39845, 23760, 7344, 22532, 17955, 18266, 43099, 63764, 54485, 54116, 56312, 43208, 22617, 38946, 23818, 51883, 35008, 20203, 65408, 24157, 38248, 72586, 34847, 53994, 19029, 1071, 12880, 20083, 36212, 54446, 62903, 52195, 42322, 54085, 34591, 3216, 39015, 22179, 5910, 71861, 76015, 1717, 43371, 13871, 53525, 37384, 22207, 64233, 13788, 12391, 62792, 22183, 65295, 44233, 33156, 22160, 10478, 42099, 63006, 68752, 40033, 10838, 12241, 30485, 37921, 67374, 47468, 37267, 65495, 49626, 75636, 68318, 59145, 7441, 19493, 12591, 13901, 44973, 3499, 71701, 15828, 71831, 74121, 63914, 59413, 34678, 75288, 4461, 69378, 65208, 12967, 9661, 64243, 52313, 75871, 2276, 73097, 12299, 4543, 24243, 58427, 75510, 25970, 26129, 47042, 22064, 1606, 19414, 45152, 56620, 43121, 53462, 34882, 64785, 36369, 34748, 41767, 71943, 22266, 52142, 43529, 7406, 41587, 27954, 18419, 12213, 22347, 43464, 64068, 34613, 37563, 15851, 29245, 9664, 66169, 22442, 40185, 42462, 52934, 1745, 74357, 55414, 38965, 19298, 26522, 34794, 18958, 1454, 43572, 68331, 55757, 52393, 19542, 42978, 2180, 72272, 68497, 34773, 17872, 53574, 18072, 35297, 15125, 75514, 23301, 63141, 47546, 34679, 44917, 23669, 6175, 20279, 20204, 62212, 62942, 73990, 31590, 73817, 21859, 74238, 22518, 75063, 12332, 73866, 37902, 63777, 3074, 62302, 55609, 1886, 888, 56805, 53604, 72186, 35379, 54782, 66789, 19462, 43830, 13305, 39534, 20679, 43190, 38993, 7364, 19730, 34148, 52589, 75182, 35471, 43314, 23600, 76257, 43553, 55762, 45147, 18130, 20928, 3277, 3018, 39399, 22544, 2343, 35260, 73625, 69178, 43497, 3506, 23124, 63657, 22365, 47950, 54727, 43068, 35056, 20039, 37548, 1854, 62354, 13035, 36431, 26290, 53480, 65497, 39405, 18725, 6100, 13307, 72530, 58434, 43010, 75709, 1673, 22026, 63023, 20266, 3366, 44951, 3066, 2146, 5814, 68200, 7383, 72804, 66661, 18948, 66176, 29722, 55829, 53030, 35123, 13220, 20269, 48978, 66560, 41969, 56612, 48996, 23431, 63963, 13172, 15904, 42357, 47892, 8260, 8263, 60800, 63565, 43076, 23204, 75404, 63840, 43238, 37448, 49879, 6168, 63009, 39871, 33207, 32065, 43478, 16717, 5350, 4252, 7306, 65082, 60158, 71785, 29378, 75491, 76256, 23005, 39873, 64025, 71790, 71707, 13617, 43539, 59029, 33255, 36476, 18726, 35184, 23532, 33189, 15622, 37691, 47955, 52390, 16545, 22849, 22214, 69261, 38948, 65141, 13500, 19262, 3254, 21183, 65083, 2293, 4496, 32001, 28231, 38956, 60559, 7289, 74494, 12315, 36423, 16504, 55944, 56412, 41821, 58433, 63139, 52329, 72730, 56469, 34688, 32097, 54534, 63800, 39305, 9070, 23813, 47540, 55648, 35396, 54051, 47223, 30401, 72606, 47741, 12556, 47449, 56438, 63885, 15211, 52416, 39114, 68833, 16034, 52631, 9911, 53177, 2188, 36066, 6137, 15898, 43666, 2207, 49887, 41606, 12314, 23335, 47993, 1942, 43551, 3764, 21218, 13314, 44142, 12927, 60239, 62293, 22684, 59088, 16739, 39566, 43672, 37356, 60294, 2857, 47871, 8644, 39408, 64815, 13126, 69350, 76444, 17816, 74177, 65168, 46854, 27457, 1487, 42021, 2011, 64183, 28009, 47253, 19988, 3481, 54125, 2069, 56365, 9119, 24210, 50118, 49684, 75885, 72999, 12523, 55470, 37577, 34713, 56912, 49839, 30384, 22549, 37845, 53430, 72074, 23396, 18080, 3789, 40321, 47098, 59147, 52145, 31992, 13129, 18776, 20209, 1726, 63167, 22354, 63978, 68322, 51831, 32032, 39217, 29522, 75974, 22472, 49666, 63137, 60351, 19551, 53573, 53490, 44238, 23762, 4581, 13098, 55525, 71304, 24181, 5859, 10984, 15892, 74288, 39829, 34564, 58435, 21747, 49007, 18491, 47953, 60431, 59059, 13203, 35063, 52321, 18301, 37639, 68203, 4351, 22408, 39116, 52316, 44891, 71857, 43341, 56375, 39372, 56444, 12123, 66699, 75371, 40118, 18502, 67187, 16493, 18568, 34805, 47936, 26104, 46873, 12406, 47074, 49577, 46783, 3769, 66869, 1116, 47909, 28360, 13187, 31597, 18575, 3558, 74042, 60423, 39451, 49861, 37538, 23093, 23392, 72892, 65542, 15417, 33185, 6225, 45182, 3447, 38963, 23318, 36325, 65723, 62982, 58986, 945, 49060, 52626, 21241, 37844, 64710, 35796, 32979, 34424, 47386, 54134, 26000, 2117, 23527, 1539, 37861, 17839, 36128, 65611, 55692, 34877, 54513, 49042, 53024, 42980, 37539, 10885, 23810, 68169, 67284, 37831, 64990, 56559, 68517, 36705, 69007, 71278, 58485, 34652, 66596, 74023, 22456, 34619, 59356, 64372, 63643, 23340, 22776, 73027, 70426, 6219, 26568, 44942, 66738, 19276, 7350, 33200, 54889, 19925, 34880, 48965, 34388, 3353, 27426, 24369, 15483, 19024, 32169, 52938, 52368, 53602, 60649, 23173, 49033, 34792, 53534, 9654, 58836, 22632, 10615, 43486, 22319, 31601, 20476, 43290, 37469, 24191, 1850, 22369, 1792, 26585, 21088, 63754, 12321, 37612, 18620, 64304, 26534, 22022, 2083, 23235, 5309, 68286, 55833, 18865, 31602, 3173, 60652, 47263, 15722, 2093, 63611, 11168, 43985, 75687, 19090, 7429, 33127, 75127, 41982, 10850, 10576, 41109, 40223, 22735, 13205, 8635, 43973, 48945, 69071, 7345, 34647, 9631, 70393, 46655, 17891, 38024, 66667, 65798, 18163, 9898, 22360, 16796, 22683, 68816, 26710, 49793, 73543, 24344, 23486, 75714, 9628, 37338, 9928, 19680, 65195, 64055, 46846, 13895, 2420, 49673, 55546, 56554, 53122, 43595, 48952, 56688, 41911, 4476, 42004, 61476, 20938, 12957, 1605, 29555, 69287, 34906, 10522, 52460, 8690, 39157, 32152, 19325, 76462, 41013, 39994, 64977, 12969, 19604, 13309, 22370, 46746, 47488, 1727, 56683, 7284, 36703, 53017, 28218, 47986, 32954, 37339, 19832, 17762, 47251, 40907, 49741, 38758, 33294, 63584, 56910, 52447, 36201, 63419, 8732, 65159, 66985, 43967, 18136, 67298, 37597, 58428, 22051, 20251, 55839, 39308, 42305, 3776, 29451, 54870, 52110, 65007, 71781, 855, 22691, 67334, 49644, 53864, 60550, 22824, 36446, 65487, 23828, 16812, 59178, 23710, 4693, 2887, 8265, 75781, 68559, 67211, 26070, 71912, 15740, 65048, 18251, 41944, 62345, 48918, 19018, 42287, 44829, 19873, 45245, 21737, 13244, 7285, 29412, 12339, 19458, 49685, 66803, 55474, 6058, 19858, 75347, 47225, 67082, 19001, 23679, 60599, 63681, 29763, 24235, 64902, 43522, 74195, 1899, 13654, 74669, 74179, 18833, 37412, 72129, 22301, 65026, 23168, 9090, 41017, 68509, 13252, 71596, 73830, 2064, 10717, 3126, 44111, 28330, 31959, 36113, 10815, 52227, 63877, 18884, 55695, 3581, 65341, 27804, 54854, 65089, 10942, 39791, 56874, 52948, 19281, 56675, 60302, 53473, 28297, 23775, 1547, 64066, 12061, 22205, 64206, 23127, 47411, 66093, 40220, 36263, 6215, 65148, 19877, 66976, 66735, 67351, 4358, 10461, 22196, 35054, 56421, 65435, 22359, 28070, 29373, 18800, 62796, 65599, 39651, 29454, 13354, 2031, 3171, 70422, 26613, 26075, 12255, 39290, 43385, 21147, 60693, 36147, 23285, 52202, 63649, 60402, 11299, 22055, 37785, 74968, 32177, 40201, 50097, 17937, 13124, 2910, 45077, 962, 55485, 19391, 3642, 52957, 63843, 76476, 1600, 64759, 73694, 43601, 55529, 71759, 42328, 62246, 29170, 65472, 41949, 22614, 18652, 13570, 53280, 68998, 22202, 2944, 53289, 3370, 7166, 47923, 39670, 42071, 49814, 72322, 25815, 34872, 3188, 39266, 64740, 7271, 43027, 76349, 39937, 52408, 30376, 6212, 21150, 18418, 25270, 44322, 13721, 64394, 62725, 4493, 36111, 52146, 74135, 21505), '0.00', True, '1/2319/%', True, '1/2319/%', ('waiting', 'confirmed', 'partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL))' with params: [(74724, 44817, 22882, 22235, 63278, 18893, 32120, 41201, 76162, 55518, 26639, 66532, 45073, 47222, 63684, 68779, 20085, 2324, 74103, 3175, 39528, 22955, 69392, 59357, 69313, 23820, 56565, 53824, 53410, 64060, 71596, 62219, 58379, 49551, 23790, 34678, 22738, 22604, 43163, 18434, 63247, 21254, 52114, 5797, 64095, 56359, 3597, 10932, 60286, 67055, 23480, 23745, 73275, 30433, 37884, 53442, 54839, 7448, 13298, 22518, 18102, 20278, 68446, 9093, 22276, 75518, 69207, 13157, 43260, 1703, 16509, 28370, 47454, 44902, 18172, 28055, 34583, 36081, 19400, 40897, 34850, 65851, 32158, 16488, 19637, 24307, 64970, 46770, 18302, 63319, 18042, 20089, 62947, 23318, 43519, 58437, 13327, 22989, 22792, 68944, 9913, 68731, 10558, 62217, 60034, 10757, 58429, 16035, 27912, 55279, 13417, 54537, 20975, 75344, 54132, 21720, 72356, 73320, 21144, 36763, 18456, 40157, 34909, 33067, 64389, 34588, 7374, 63481, 50084, 10508, 39583, 39861, 2875, 13840, 39141, 65051, 69075, 11545, 55694, 55574, 21121, 18030, 65114, 49745, 12079, 2935, 64835, 21147, 23751, 53270, 13160, 72346, 52389, 39340, 63755, 26291, 47408, 56810, 53370, 52595, 52499, 65161, 40902, 47965, 58921, 62974, 23355, 13322, 26580, 23499, 35194, 29758, 15129, 12393, 27944, 59002, 64711, 8774, 29417, 9586, 35296, 53264, 15894, 42197, 5902, 68230, 38991, 5322, 20423, 22783, 2890, 53463, 13898, 1746, 52677, 40293, 64773, 67196, 75388, 66366, 63052, 49627, 47361, 65789, 71752, 33199, 16672, 33084, 56380, 13852, 75449, 41917, 47713, 39366, 26193, 52475, 49566, 15930, 66631, 39078, 73444, 64233, 63772, 5819, 29560, 74002, 13763, 9061, 1090, 60307, 37882, 76275, 68892, 74517, 45184, 47476, 18604, 18949, 18279, 58275, 21077, 29701, 39209, 14739, 22415, 19281, 62902, 17855, 49762, 56402, 35290, 36430, 15847, 21257, 43927, 8285, 55625, 26182, 23203, 4594, 56923, 47191, 9137, 24138, 37396, 58301, 3642, 28220, 43285, 21752, 72595, 72766, 43714, 75676, 19966, 20079, 12503, 29456, 23726, 63974, 63911, 64379, 12428, 12173, 20952, 1242, 65748, 34417, 18692, 41999, 1849, 49562, 68745, 66415, 29540, 53505, 3162, 11111, 36057, 20087, 56947, 68273, 28027, 28067, 47840, 71884, 63430, 55798, 19493, 10742, 54731, 22581, 42347, 62345, 65558, 74092, 34894, 3284, 19032, 3425, 16680, 17811, 53915, 66500, 60263, 63462, 45215, 3372, 52655, 11160, 34804, 36476, 12287, 19346, 10967, 3785, 26234, 4324, 12308, 10810, 39413, 64375, 18532, 73936, 45034, 1477, 65649, 45070, 43563, 18793, 52934, 23091, 22221, 58354, 42302, 26575, 15744, 52557, 22550, 23237, 55472, 60579, 43226, 60053, 28061, 2211, 69218, 66352, 9798, 63163, 26205, 69147, 8747, 39344, 22625, 63951, 23354, 10467, 64873, 52634, 15624, 29386, 55516, 35377, 75480, 37584, 3182, 58321, 15883, 3405, 60249, 53569, 42106, 13722, 64673, 20300, 13611, 3514, 64944, 11648, 20299, 74739, 63680, 67357, 10663, 35396, 75477, 34935, 23384, 12194, 36308, 4527, 72526, 71650, 71775, 5402, 63109, 11728, 13668, 73917, 32049, 47473, 8642, 1516, 49062, 34624, 71308, 40180, 73428, 63606, 31577, 53110, 10637, 2058, 73941, 38252, 20399, 65678, 1442, 47838, 35105, 5397, 43203, 28116, 72398, 59342, 64757, 74247, 23294, 13255, 23238, 72499, 19256, 46634, 37343, 47190, 1706, 62725, 65653, 53034, 53664, 22728, 65277, 66446, 55615, 15951, 73546, 49033, 75803, 4506, 36054, 19854, 72543, 37507, 71398, 40189, 65410, 39166, 13234, 2229, 27964, 68242, 37763, 16846, 49041, 59033, 52477, 74932, 19799, 26597, 22374, 58400, 37335, 52362, 11162, 61063, 22501, 62936, 18696, 66785, 40172, 3199, 27943, 2340, 72549, 34592, 42950, 24137, 10783, 63382, 21591, 17756, 929, 12245, 31601, 53424, 36159, 34660, 23493, 52447, 65426, 23114, 44129, 53331, 71694, 13207, 74682, 28659, 18976, 43732, 10975, 65631, 62755, 58940, 17786, 38951, 41941, 18874, 35019, 1445, 42160, 27837, 1220, 63295, 64059, 39751, 3599, 29375, 11173, 32018, 10753, 55544, 73663, 5903, 4693, 13267, 65575, 53435, 22781, 34867, 2228, 28071, 75629, 1879, 42509, 6147, 18636, 71281, 65692, 75008, 19320, 35069, 36184, 65394, 43407, 12300, 21236, 8687, 29319, 7258, 13771, 19905, 1764, 63585, 63936, 4429, 38024, 44231, 65460, 44843, 24230, 74655, 55272, 66600, 9125, 17922, 71955, 52184, 65461, 13163, 68267, 64010, 22521, 39385, 29452, 23415, 15793, 68316, 21729, 43253, 42377, 40119, 66598, 19260, 72988, 2183, 65082, 60635, 75238, 13032, 55589, 23754, 56949, 44229, 9032, 54065, 60228, 1224, 44737, 55337, 10269, 6246, 23268, 19418, 62970, 55508, 34683, 4578, 42231, 42493, 23609, 56689, 26114, 3084, 9135, 60962, 53658, 60439, 53741, 26162, 54758, 34309, 73660, 55573, 41750, 10991, 44282, 56750, 72127, 39909, 60169, 53363, 53663, 36453, 60670, 60697, 34612, 35006, 69238, 1769, 22808, 24390, 75446, 64939, 37446, 3603, 71445, 18394, 19015, 35083, 16610, 13911, 56659, 49665, 65122, 55311, 55511, 72321, 16012, 55882, 56677, 53768, 23352, 10787, 72896, 41614, 75812, 65056, 59086, 15904, 23229, 1211, 18265, 39103, 36150, 22283, 3024, 68697, 33234, 62748, 36495, 63410, 73026, 10785, 9087, 20458, 21162, 18899, 73873, 20414, 76492, 52264, 47545, 23486, 19401, 40252, 67253, 66722, 10727, 68829, 28148, 1774, 68471, 72223, 22566, 59404, 7221, 63861, 68299, 42953, 39045, 1390, 3218, 47546, 8723, 76236, 55726, 22962, 29347, 22326, 65471, 63408, 76421, 49808, 36688, 18391, 75777, 10632, 41815, 1106, 10073, 65498, 36383, 9891, 53403, 18408, 68264, 28249, 65005, 54778, 1527, 64397, 10648, 66605, 10859, 22320, 52582, 47539, 45228, 55651, 1507, 36428, 29344, 66177, 67159, 33245, 33208, 52560, 10846, 49791, 44906, 64065, 66340, 43282, 2949, 44143, 24384, 22649, 28328, 59083, 75324, 62809, 20202, 66615, 39934, 34143, 64395, 20213, 43162, 44845, 43569, 28601, 3167, 19002, 49587, 74863, 18055, 2835, 37803, 71441, 66804, 49461, 39252, 41788, 53577, 39859, 18498, 41914, 52187, 52571, 29373, 68746, 47753, 65723, 23360, 19405, 13842, 65133, 7408, 73075, 42978, 71549, 68193, 56362, 8297, 74488, 3474, 43473, 39308, 19375, 23472, 18122, 19477, 1823, 56567, 10491, 34961, 18569, 22760, 74778, 13311, 63823, 1152, 47057, 64969, 24402, 75814, 65610, 2019, 60500, 20225, 34736, 46625, 23222, 49087, 58427, 22335, 29213, 1376, 58365, 1418, 16487, 27869, 15952, 15707, 41868, 56877, 41920, 19365, 16691, 32441, 76489, 41582, 39217, 42051, 73446, 56288, 74973, 47254, 42176, 6079, 75669, 3534, 52353, 75084, 65407, 39179, 56678, 19013, 31984, 55049, 66769, 25822, 16541, 27946, 23539, 43455, 912, 63149, 4487, 56798, 19463, 17807, 45016, 52272, 22902, 10565, 31873, 26243, 58405, 20157, 12846, 59417, 28520, 1702, 20016, 66546, 47517, 67177, 34127, 58869, 37465, 63562, 945, 1535, 64367, 36416, 17955, 27856, 13801, 65440, 26165, 45078, 1413, 13164, 42018, 55746, 46790, 23144, 10754, 52580, 41125, 20139, 66996, 74357, 1895, 10697, 9646, 4427, 74686, 71692, 34769, 52382, 21171, 18107, 26063, 33235, 63246, 3369, 16573, 18459, 40033, 28381, 58479, 71256, 43454, 1884, 64190, 44200, 10640, 49609, 22976, 43543, 2373, 74303, 73432, 73579, 23799, 35160, 47085, 17856, 26712, 60658, 64732, 17925, 9580, 66686, 42020, 49632, 3450, 22190, 21145, 23290, 1435, 1258, 68749, 12234, 3132, 1676, 22942), '0.00', True, '1/2335/%', True, '1/2335/%', ('waiting', 'confirmed', 'partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL)) AND ("stock_move"."state" in %s))' with params: [(74724, 44817, 22882, 22235, 63278, 18893, 32120, 41201, 76162, 55518, 26639, 66532, 45073, 47222, 63684, 68779, 20085, 2324, 74103, 3175, 39528, 22955, 69392, 59357, 69313, 23820, 56565, 53824, 53410, 64060, 71596, 62219, 58379, 49551, 23790, 34678, 22738, 22604, 43163, 18434, 63247, 21254, 52114, 5797, 64095, 56359, 3597, 10932, 60286, 67055, 23480, 23745, 73275, 30433, 37884, 53442, 54839, 7448, 13298, 22518, 18102, 20278, 68446, 9093, 22276, 75518, 69207, 13157, 43260, 1703, 16509, 28370, 47454, 44902, 18172, 28055, 34583, 36081, 19400, 40897, 34850, 65851, 32158, 16488, 19637, 24307, 64970, 46770, 18302, 63319, 18042, 20089, 62947, 23318, 43519, 58437, 13327, 22989, 22792, 68944, 9913, 68731, 10558, 62217, 60034, 10757, 58429, 16035, 27912, 55279, 13417, 54537, 20975, 75344, 54132, 21720, 72356, 73320, 21144, 36763, 18456, 40157, 34909, 33067, 64389, 34588, 7374, 63481, 50084, 10508, 39583, 39861, 2875, 13840, 39141, 65051, 69075, 11545, 55694, 55574, 21121, 18030, 65114, 49745, 12079, 2935, 64835, 21147, 23751, 53270, 13160, 72346, 52389, 39340, 63755, 26291, 47408, 56810, 53370, 52595, 52499, 65161, 40902, 47965, 58921, 62974, 23355, 13322, 26580, 23499, 35194, 29758, 15129, 12393, 27944, 59002, 64711, 8774, 29417, 9586, 35296, 53264, 15894, 42197, 5902, 68230, 38991, 5322, 20423, 22783, 2890, 53463, 13898, 1746, 52677, 40293, 64773, 67196, 75388, 66366, 63052, 49627, 47361, 65789, 71752, 33199, 16672, 33084, 56380, 13852, 75449, 41917, 47713, 39366, 26193, 52475, 49566, 15930, 66631, 39078, 73444, 64233, 63772, 5819, 29560, 74002, 13763, 9061, 1090, 60307, 37882, 76275, 68892, 74517, 45184, 47476, 18604, 18949, 18279, 58275, 21077, 29701, 39209, 14739, 22415, 19281, 62902, 17855, 49762, 56402, 35290, 36430, 15847, 21257, 43927, 8285, 55625, 26182, 23203, 4594, 56923, 47191, 9137, 24138, 37396, 58301, 3642, 28220, 43285, 21752, 72595, 72766, 43714, 75676, 19966, 20079, 12503, 29456, 23726, 63974, 63911, 64379, 12428, 12173, 20952, 1242, 65748, 34417, 18692, 41999, 1849, 49562, 68745, 66415, 29540, 53505, 3162, 11111, 36057, 20087, 56947, 68273, 28027, 28067, 47840, 71884, 63430, 55798, 19493, 10742, 54731, 22581, 42347, 62345, 65558, 74092, 34894, 3284, 19032, 3425, 16680, 17811, 53915, 66500, 60263, 63462, 45215, 3372, 52655, 11160, 34804, 36476, 12287, 19346, 10967, 3785, 26234, 4324, 12308, 10810, 39413, 64375, 18532, 73936, 45034, 1477, 65649, 45070, 43563, 18793, 52934, 23091, 22221, 58354, 42302, 26575, 15744, 52557, 22550, 23237, 55472, 60579, 43226, 60053, 28061, 2211, 69218, 66352, 9798, 63163, 26205, 69147, 8747, 39344, 22625, 63951, 23354, 10467, 64873, 52634, 15624, 29386, 55516, 35377, 75480, 37584, 3182, 58321, 15883, 3405, 60249, 53569, 42106, 13722, 64673, 20300, 13611, 3514, 64944, 11648, 20299, 74739, 63680, 67357, 10663, 35396, 75477, 34935, 23384, 12194, 36308, 4527, 72526, 71650, 71775, 5402, 63109, 11728, 13668, 73917, 32049, 47473, 8642, 1516, 49062, 34624, 71308, 40180, 73428, 63606, 31577, 53110, 10637, 2058, 73941, 38252, 20399, 65678, 1442, 47838, 35105, 5397, 43203, 28116, 72398, 59342, 64757, 74247, 23294, 13255, 23238, 72499, 19256, 46634, 37343, 47190, 1706, 62725, 65653, 53034, 53664, 22728, 65277, 66446, 55615, 15951, 73546, 49033, 75803, 4506, 36054, 19854, 72543, 37507, 71398, 40189, 65410, 39166, 13234, 2229, 27964, 68242, 37763, 16846, 49041, 59033, 52477, 74932, 19799, 26597, 22374, 58400, 37335, 52362, 11162, 61063, 22501, 62936, 18696, 66785, 40172, 3199, 27943, 2340, 72549, 34592, 42950, 24137, 10783, 63382, 21591, 17756, 929, 12245, 31601, 53424, 36159, 34660, 23493, 52447, 65426, 23114, 44129, 53331, 71694, 13207, 74682, 28659, 18976, 43732, 10975, 65631, 62755, 58940, 17786, 38951, 41941, 18874, 35019, 1445, 42160, 27837, 1220, 63295, 64059, 39751, 3599, 29375, 11173, 32018, 10753, 55544, 73663, 5903, 4693, 13267, 65575, 53435, 22781, 34867, 2228, 28071, 75629, 1879, 42509, 6147, 18636, 71281, 65692, 75008, 19320, 35069, 36184, 65394, 43407, 12300, 21236, 8687, 29319, 7258, 13771, 19905, 1764, 63585, 63936, 4429, 38024, 44231, 65460, 44843, 24230, 74655, 55272, 66600, 9125, 17922, 71955, 52184, 65461, 13163, 68267, 64010, 22521, 39385, 29452, 23415, 15793, 68316, 21729, 43253, 42377, 40119, 66598, 19260, 72988, 2183, 65082, 60635, 75238, 13032, 55589, 23754, 56949, 44229, 9032, 54065, 60228, 1224, 44737, 55337, 10269, 6246, 23268, 19418, 62970, 55508, 34683, 4578, 42231, 42493, 23609, 56689, 26114, 3084, 9135, 60962, 53658, 60439, 53741, 26162, 54758, 34309, 73660, 55573, 41750, 10991, 44282, 56750, 72127, 39909, 60169, 53363, 53663, 36453, 60670, 60697, 34612, 35006, 69238, 1769, 22808, 24390, 75446, 64939, 37446, 3603, 71445, 18394, 19015, 35083, 16610, 13911, 56659, 49665, 65122, 55311, 55511, 72321, 16012, 55882, 56677, 53768, 23352, 10787, 72896, 41614, 75812, 65056, 59086, 15904, 23229, 1211, 18265, 39103, 36150, 22283, 3024, 68697, 33234, 62748, 36495, 63410, 73026, 10785, 9087, 20458, 21162, 18899, 73873, 20414, 76492, 52264, 47545, 23486, 19401, 40252, 67253, 66722, 10727, 68829, 28148, 1774, 68471, 72223, 22566, 59404, 7221, 63861, 68299, 42953, 39045, 1390, 3218, 47546, 8723, 76236, 55726, 22962, 29347, 22326, 65471, 63408, 76421, 49808, 36688, 18391, 75777, 10632, 41815, 1106, 10073, 65498, 36383, 9891, 53403, 18408, 68264, 28249, 65005, 54778, 1527, 64397, 10648, 66605, 10859, 22320, 52582, 47539, 45228, 55651, 1507, 36428, 29344, 66177, 67159, 33245, 33208, 52560, 10846, 49791, 44906, 64065, 66340, 43282, 2949, 44143, 24384, 22649, 28328, 59083, 75324, 62809, 20202, 66615, 39934, 34143, 64395, 20213, 43162, 44845, 43569, 28601, 3167, 19002, 49587, 74863, 18055, 2835, 37803, 71441, 66804, 49461, 39252, 41788, 53577, 39859, 18498, 41914, 52187, 52571, 29373, 68746, 47753, 65723, 23360, 19405, 13842, 65133, 7408, 73075, 42978, 71549, 68193, 56362, 8297, 74488, 3474, 43473, 39308, 19375, 23472, 18122, 19477, 1823, 56567, 10491, 34961, 18569, 22760, 74778, 13311, 63823, 1152, 47057, 64969, 24402, 75814, 65610, 2019, 60500, 20225, 34736, 46625, 23222, 49087, 58427, 22335, 29213, 1376, 58365, 1418, 16487, 27869, 15952, 15707, 41868, 56877, 41920, 19365, 16691, 32441, 76489, 41582, 39217, 42051, 73446, 56288, 74973, 47254, 42176, 6079, 75669, 3534, 52353, 75084, 65407, 39179, 56678, 19013, 31984, 55049, 66769, 25822, 16541, 27946, 23539, 43455, 912, 63149, 4487, 56798, 19463, 17807, 45016, 52272, 22902, 10565, 31873, 26243, 58405, 20157, 12846, 59417, 28520, 1702, 20016, 66546, 47517, 67177, 34127, 58869, 37465, 63562, 945, 1535, 64367, 36416, 17955, 27856, 13801, 65440, 26165, 45078, 1413, 13164, 42018, 55746, 46790, 23144, 10754, 52580, 41125, 20139, 66996, 74357, 1895, 10697, 9646, 4427, 74686, 71692, 34769, 52382, 21171, 18107, 26063, 33235, 63246, 3369, 16573, 18459, 40033, 28381, 58479, 71256, 43454, 1884, 64190, 44200, 10640, 49609, 22976, 43543, 2373, 74303, 73432, 73579, 23799, 35160, 47085, 17856, 26712, 60658, 64732, 17925, 9580, 66686, 42020, 49632, 3450, 22190, 21145, 23290, 1435, 1258, 68749, 12234, 3132, 1676, 22942), '0.00', True, '1/2335/%', True, '1/2335/%', ('waiting', 'confirmed', 'partially_available', 'assigned'), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL))' with params: [(74724, 44817, 22882, 22235, 63278, 18893, 32120, 41201, 76162, 55518, 26639, 66532, 45073, 47222, 63684, 68779, 20085, 2324, 74103, 3175, 39528, 22955, 69392, 59357, 69313, 23820, 56565, 53824, 53410, 64060, 71596, 62219, 58379, 49551, 23790, 34678, 22738, 22604, 43163, 18434, 63247, 21254, 52114, 5797, 64095, 56359, 3597, 10932, 60286, 67055, 23480, 23745, 73275, 30433, 37884, 53442, 54839, 7448, 13298, 22518, 18102, 20278, 68446, 9093, 22276, 75518, 69207, 13157, 43260, 1703, 16509, 28370, 47454, 44902, 18172, 28055, 34583, 36081, 19400, 40897, 34850, 65851, 32158, 16488, 19637, 24307, 64970, 46770, 18302, 63319, 18042, 20089, 62947, 23318, 43519, 58437, 13327, 22989, 22792, 68944, 9913, 68731, 10558, 62217, 60034, 10757, 58429, 16035, 27912, 55279, 13417, 54537, 20975, 75344, 54132, 21720, 72356, 73320, 21144, 36763, 18456, 40157, 34909, 33067, 64389, 34588, 7374, 63481, 50084, 10508, 39583, 39861, 2875, 13840, 39141, 65051, 69075, 11545, 55694, 55574, 21121, 18030, 65114, 49745, 12079, 2935, 64835, 21147, 23751, 53270, 13160, 72346, 52389, 39340, 63755, 26291, 47408, 56810, 53370, 52595, 52499, 65161, 40902, 47965, 58921, 62974, 23355, 13322, 26580, 23499, 35194, 29758, 15129, 12393, 27944, 59002, 64711, 8774, 29417, 9586, 35296, 53264, 15894, 42197, 5902, 68230, 38991, 5322, 20423, 22783, 2890, 53463, 13898, 1746, 52677, 40293, 64773, 67196, 75388, 66366, 63052, 49627, 47361, 65789, 71752, 33199, 16672, 33084, 56380, 13852, 75449, 41917, 47713, 39366, 26193, 52475, 49566, 15930, 66631, 39078, 73444, 64233, 63772, 5819, 29560, 74002, 13763, 9061, 1090, 60307, 37882, 76275, 68892, 74517, 45184, 47476, 18604, 18949, 18279, 58275, 21077, 29701, 39209, 14739, 22415, 19281, 62902, 17855, 49762, 56402, 35290, 36430, 15847, 21257, 43927, 8285, 55625, 26182, 23203, 4594, 56923, 47191, 9137, 24138, 37396, 58301, 3642, 28220, 43285, 21752, 72595, 72766, 43714, 75676, 19966, 20079, 12503, 29456, 23726, 63974, 63911, 64379, 12428, 12173, 20952, 1242, 65748, 34417, 18692, 41999, 1849, 49562, 68745, 66415, 29540, 53505, 3162, 11111, 36057, 20087, 56947, 68273, 28027, 28067, 47840, 71884, 63430, 55798, 19493, 10742, 54731, 22581, 42347, 62345, 65558, 74092, 34894, 3284, 19032, 3425, 16680, 17811, 53915, 66500, 60263, 63462, 45215, 3372, 52655, 11160, 34804, 36476, 12287, 19346, 10967, 3785, 26234, 4324, 12308, 10810, 39413, 64375, 18532, 73936, 45034, 1477, 65649, 45070, 43563, 18793, 52934, 23091, 22221, 58354, 42302, 26575, 15744, 52557, 22550, 23237, 55472, 60579, 43226, 60053, 28061, 2211, 69218, 66352, 9798, 63163, 26205, 69147, 8747, 39344, 22625, 63951, 23354, 10467, 64873, 52634, 15624, 29386, 55516, 35377, 75480, 37584, 3182, 58321, 15883, 3405, 60249, 53569, 42106, 13722, 64673, 20300, 13611, 3514, 64944, 11648, 20299, 74739, 63680, 67357, 10663, 35396, 75477, 34935, 23384, 12194, 36308, 4527, 72526, 71650, 71775, 5402, 63109, 11728, 13668, 73917, 32049, 47473, 8642, 1516, 49062, 34624, 71308, 40180, 73428, 63606, 31577, 53110, 10637, 2058, 73941, 38252, 20399, 65678, 1442, 47838, 35105, 5397, 43203, 28116, 72398, 59342, 64757, 74247, 23294, 13255, 23238, 72499, 19256, 46634, 37343, 47190, 1706, 62725, 65653, 53034, 53664, 22728, 65277, 66446, 55615, 15951, 73546, 49033, 75803, 4506, 36054, 19854, 72543, 37507, 71398, 40189, 65410, 39166, 13234, 2229, 27964, 68242, 37763, 16846, 49041, 59033, 52477, 74932, 19799, 26597, 22374, 58400, 37335, 52362, 11162, 61063, 22501, 62936, 18696, 66785, 40172, 3199, 27943, 2340, 72549, 34592, 42950, 24137, 10783, 63382, 21591, 17756, 929, 12245, 31601, 53424, 36159, 34660, 23493, 52447, 65426, 23114, 44129, 53331, 71694, 13207, 74682, 28659, 18976, 43732, 10975, 65631, 62755, 58940, 17786, 38951, 41941, 18874, 35019, 1445, 42160, 27837, 1220, 63295, 64059, 39751, 3599, 29375, 11173, 32018, 10753, 55544, 73663, 5903, 4693, 13267, 65575, 53435, 22781, 34867, 2228, 28071, 75629, 1879, 42509, 6147, 18636, 71281, 65692, 75008, 19320, 35069, 36184, 65394, 43407, 12300, 21236, 8687, 29319, 7258, 13771, 19905, 1764, 63585, 63936, 4429, 38024, 44231, 65460, 44843, 24230, 74655, 55272, 66600, 9125, 17922, 71955, 52184, 65461, 13163, 68267, 64010, 22521, 39385, 29452, 23415, 15793, 68316, 21729, 43253, 42377, 40119, 66598, 19260, 72988, 2183, 65082, 60635, 75238, 13032, 55589, 23754, 56949, 44229, 9032, 54065, 60228, 1224, 44737, 55337, 10269, 6246, 23268, 19418, 62970, 55508, 34683, 4578, 42231, 42493, 23609, 56689, 26114, 3084, 9135, 60962, 53658, 60439, 53741, 26162, 54758, 34309, 73660, 55573, 41750, 10991, 44282, 56750, 72127, 39909, 60169, 53363, 53663, 36453, 60670, 60697, 34612, 35006, 69238, 1769, 22808, 24390, 75446, 64939, 37446, 3603, 71445, 18394, 19015, 35083, 16610, 13911, 56659, 49665, 65122, 55311, 55511, 72321, 16012, 55882, 56677, 53768, 23352, 10787, 72896, 41614, 75812, 65056, 59086, 15904, 23229, 1211, 18265, 39103, 36150, 22283, 3024, 68697, 33234, 62748, 36495, 63410, 73026, 10785, 9087, 20458, 21162, 18899, 73873, 20414, 76492, 52264, 47545, 23486, 19401, 40252, 67253, 66722, 10727, 68829, 28148, 1774, 68471, 72223, 22566, 59404, 7221, 63861, 68299, 42953, 39045, 1390, 3218, 47546, 8723, 76236, 55726, 22962, 29347, 22326, 65471, 63408, 76421, 49808, 36688, 18391, 75777, 10632, 41815, 1106, 10073, 65498, 36383, 9891, 53403, 18408, 68264, 28249, 65005, 54778, 1527, 64397, 10648, 66605, 10859, 22320, 52582, 47539, 45228, 55651, 1507, 36428, 29344, 66177, 67159, 33245, 33208, 52560, 10846, 49791, 44906, 64065, 66340, 43282, 2949, 44143, 24384, 22649, 28328, 59083, 75324, 62809, 20202, 66615, 39934, 34143, 64395, 20213, 43162, 44845, 43569, 28601, 3167, 19002, 49587, 74863, 18055, 2835, 37803, 71441, 66804, 49461, 39252, 41788, 53577, 39859, 18498, 41914, 52187, 52571, 29373, 68746, 47753, 65723, 23360, 19405, 13842, 65133, 7408, 73075, 42978, 71549, 68193, 56362, 8297, 74488, 3474, 43473, 39308, 19375, 23472, 18122, 19477, 1823, 56567, 10491, 34961, 18569, 22760, 74778, 13311, 63823, 1152, 47057, 64969, 24402, 75814, 65610, 2019, 60500, 20225, 34736, 46625, 23222, 49087, 58427, 22335, 29213, 1376, 58365, 1418, 16487, 27869, 15952, 15707, 41868, 56877, 41920, 19365, 16691, 32441, 76489, 41582, 39217, 42051, 73446, 56288, 74973, 47254, 42176, 6079, 75669, 3534, 52353, 75084, 65407, 39179, 56678, 19013, 31984, 55049, 66769, 25822, 16541, 27946, 23539, 43455, 912, 63149, 4487, 56798, 19463, 17807, 45016, 52272, 22902, 10565, 31873, 26243, 58405, 20157, 12846, 59417, 28520, 1702, 20016, 66546, 47517, 67177, 34127, 58869, 37465, 63562, 945, 1535, 64367, 36416, 17955, 27856, 13801, 65440, 26165, 45078, 1413, 13164, 42018, 55746, 46790, 23144, 10754, 52580, 41125, 20139, 66996, 74357, 1895, 10697, 9646, 4427, 74686, 71692, 34769, 52382, 21171, 18107, 26063, 33235, 63246, 3369, 16573, 18459, 40033, 28381, 58479, 71256, 43454, 1884, 64190, 44200, 10640, 49609, 22976, 43543, 2373, 74303, 73432, 73579, 23799, 35160, 47085, 17856, 26712, 60658, 64732, 17925, 9580, 66686, 42020, 49632, 3450, 22190, 21145, 23290, 1435, 1258, 68749, 12234, 3132, 1676, 22942), '0.00', True, '1/2335/%', True, '1/2335/%', ('waiting', 'confirmed', 'partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL))' with params: [(74774, 76139, 76126, 75255, 72687, 72647, 72314, 72513, 74921, 76494, 74288, 75852, 73391, 76075, 73351, 73449, 74994), '0.00', True, '1/2495/%', True, '1/2495/%', ('waiting', 'confirmed', 'partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL)) AND ("stock_move"."state" in %s))' with params: [(74774, 76139, 76126, 75255, 72687, 72647, 72314, 72513, 74921, 76494, 74288, 75852, 73391, 76075, 73351, 73449, 74994), '0.00', True, '1/2495/%', True, '1/2495/%', ('waiting', 'confirmed', 'partially_available', 'assigned'), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL))' with params: [(74774, 76139, 76126, 75255, 72687, 72647, 72314, 72513, 74921, 76494, 74288, 75852, 73391, 76075, 73351, 73449, 74994), '0.00', True, '1/2495/%', True, '1/2495/%', ('waiting', 'confirmed', 'partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL))' with params: [(75760, 74277, 73930, 72780, 72887, 73359), '0.00', True, '1/2415/%', True, '1/2415/%', ('waiting', 'confirmed', 'partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL)) AND ("stock_move"."state" in %s))' with params: [(75760, 74277, 73930, 72780, 72887, 73359), '0.00', True, '1/2415/%', True, '1/2415/%', ('waiting', 'confirmed', 'partially_available', 'assigned'), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL))' with params: [(75760, 74277, 73930, 72780, 72887, 73359), '0.00', True, '1/2415/%', True, '1/2415/%', ('waiting', 'confirmed', 'partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL))' with params: [(75008, 72789), '0.00', True, '1/2503/%', True, '1/2503/%', ('waiting', 'confirmed', 'partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL)) AND ("stock_move"."state" in %s))' with params: [(75008, 72789), '0.00', True, '1/2503/%', True, '1/2503/%', ('waiting', 'confirmed', 'partially_available', 'assigned'), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL))' with params: [(75008, 72789), '0.00', True, '1/2503/%', True, '1/2503/%', ('waiting', 'confirmed', 'partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL))' with params: [(75997, 76396, 75700, 71707, 71535, 75723, 72558, 75535, 75565, 75366, 72929, 71509, 72212, 73441, 75726, 75895, 75972, 72242, 75349), '0.00', True, '1/2431/%', True, '1/2431/%', ('waiting', 'confirmed', 'partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL)) AND ("stock_move"."state" in %s))' with params: [(75997, 76396, 75700, 71707, 71535, 75723, 72558, 75535, 75565, 75366, 72929, 71509, 72212, 73441, 75726, 75895, 75972, 72242, 75349), '0.00', True, '1/2431/%', True, '1/2431/%', ('waiting', 'confirmed', 'partially_available', 'assigned'), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL))' with params: [(75997, 76396, 75700, 71707, 71535, 75723, 72558, 75535, 75565, 75366, 72929, 71509, 72212, 73441, 75726, 75895, 75972, 72242, 75349), '0.00', True, '1/2431/%', True, '1/2431/%', ('waiting', 'confirmed', 'partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL))' with params: [(74029, 71755, 73678, 72017, 75967, 75151, 72969, 74976, 73968, 72393), '0.00', True, '1/2479/%', True, '1/2479/%', ('waiting', 'confirmed', 'partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL)) AND ("stock_move"."state" in %s))' with params: [(74029, 71755, 73678, 72017, 75967, 75151, 72969, 74976, 73968, 72393), '0.00', True, '1/2479/%', True, '1/2479/%', ('waiting', 'confirmed', 'partially_available', 'assigned'), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL))' with params: [(74029, 71755, 73678, 72017, 75967, 75151, 72969, 74976, 73968, 72393), '0.00', True, '1/2479/%', True, '1/2479/%', ('waiting', 'confirmed', 'partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL))' with params: [(16, 31), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL)) AND ("stock_move"."state" in %s))' with params: [(16, 31), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned'), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL))' with params: [(16, 31), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL))' with params: [(22208, 13403, 21501, 26054, 62259, 64085, 30488, 7430, 3096, 64535, 7330, 47168, 24401, 20129, 66897, 47584, 23468, 72972, 65115, 71347, 39064, 45150, 69271, 55724, 63406, 18121, 39906, 23188, 56769, 63714, 21771, 11328, 34619, 16677, 15714, 52566, 65110, 3497, 20894, 61062, 55790, 7326, 1167, 47093, 26099, 60159, 33139, 1064, 53397, 52443, 41904, 63465, 18017, 62767, 26180, 10781, 63310, 73409, 54851, 73761, 13254, 76367, 52964, 20235, 21174, 49036, 11661, 10985, 76457, 63122, 38998, 1225, 21209, 49891, 34645, 47976, 44823, 18022, 39477, 46830, 36473, 65851, 29526, 39394, 30470, 55909, 47560, 60550, 40773, 1284, 75984, 22841, 36170, 42947, 63769, 4591, 1835, 33210, 22904, 16801, 68167, 23284, 23587, 23425, 43362, 1646, 34986, 40311, 20125, 47864, 69423, 32067, 15831, 40289, 43080, 63539, 66164, 39913, 5284, 44853, 29356, 6146, 42364, 66779, 9135, 52497, 37945, 55865, 47176, 42344, 46826, 39656, 65448, 28494, 15704, 37479, 63652, 12364, 22484, 60256, 2177, 9894, 35218, 62794, 16706, 22299, 65175, 75787, 73632, 34749, 44202, 42282, 22572, 895, 64848, 34673, 7451, 19348, 56765, 71448, 52459, 37674, 73579, 11460, 22744, 23416, 3530, 23684, 42331, 11307, 60963, 56317, 1572, 69320, 71261, 64827, 21156, 35455, 63252, 53544, 22047, 52511, 52307, 19979, 13388, 51857, 21857, 25354, 10893, 19594, 55333, 5811, 1941, 12847, 69232, 52400, 20930, 66316, 74611, 72967, 53817, 23449, 72727, 59362, 48921, 21858, 69290, 74487, 75727, 19275, 45240, 52586, 9094, 71767, 65710, 21193, 63339, 18837, 53631, 3065, 47442, 41840, 75286, 22996, 5792, 72190, 35170, 35382, 23805, 9056, 16629, 63837, 74739, 75920, 19921, 48991, 18636, 13862, 2346, 75791, 56813, 16039, 43805, 53279, 63550, 21270, 28163, 60236, 62716, 21076, 10070, 22735, 37298, 56398, 43027, 39872, 65233, 19012, 71511, 7377, 20092, 56366, 3331, 21201, 16489, 33374, 21055, 22871, 828, 63870, 20962, 52192, 68767, 18076, 53626, 32031, 72576, 13354, 55890, 59330, 20469, 69011, 58321, 41799, 1497, 35311, 42485, 13678, 23111, 66163, 56548, 18895, 26082, 65838, 47227, 56587, 60815, 12122, 56477, 7439, 65330, 35433, 41800, 17781, 13568, 28384, 67413, 56810, 63162, 12901, 42976, 2189, 34671, 23224, 25314, 39411, 45153, 66889, 23157, 49709, 10898, 2217, 5887, 27950, 10583, 21755, 74667, 25345, 27786, 49636, 73278, 72598, 36419, 19332, 28285, 63601, 23048, 47877, 44299, 15407, 68979, 52599, 71669, 2207, 44854, 76327, 953, 20922, 62826, 7446, 28164, 2455, 3024, 37141, 60378, 54679, 56851, 60079, 56278, 43054, 52248, 63210, 62237, 20138, 56322, 26169, 19897, 54879, 13838, 2873, 19068, 71842, 13536, 37159, 16735, 19515, 18451, 64531, 19904, 37586, 920, 17705, 26556, 66385, 18679, 41953, 3551, 9892, 20964, 4414, 2966, 22526, 22982, 3324, 74631, 65594, 63170, 49966, 55551, 54771, 63562, 61069, 35101, 1389, 60620, 26004, 28343, 65595, 34293, 11179, 49662, 3791, 44304, 74919, 39841, 63690, 18422, 32462, 37864, 22544, 59390, 42166, 75831, 74460, 22332, 15707, 15850, 24337, 41853, 39605, 22799, 4252, 3523, 4392, 72550, 18898, 74733, 59337, 49961, 10816, 36741, 55851, 48961, 64097, 19380, 76082, 28086, 49799, 10809, 19647, 20294, 2157, 22110, 55406, 44944, 66075, 22087, 52625, 47218, 60434, 63738, 24416, 65093, 43436, 22595, 18792, 22149, 46849, 28374, 29579, 67299, 23572, 16719, 63650, 37316, 60230, 5874, 53906, 68950, 33270, 29508, 56291, 53762, 1084, 66094, 53494, 64206, 10579, 29771, 3484, 64195, 32364, 75379, 1981, 39870, 17775, 66629, 68495, 48957, 49807, 75526, 40776, 23380, 36738, 53359, 19578, 35791, 20127, 13533, 63148, 74686, 34372, 18536, 55284, 76218, 32082, 25991, 46758, 73402, 53381, 74977, 18271, 855, 60799, 10493, 65625, 3385, 41598, 34156, 34119, 27441, 9664, 4301, 73389, 7347, 43801, 76391, 62790, 28173, 21267, 49601, 30452, 61051, 53301, 40091, 64541, 13830, 1801, 62713, 35229, 53551, 32027, 22067, 75612, 53743, 66319, 69040, 49790, 32170, 65976, 2901, 34724, 42186, 65151, 26150, 66405, 15894, 55841, 74077, 55634, 64766, 18383, 66985, 47915, 23658, 13711, 23176, 63966, 68729, 64372, 28529, 32452, 69195, 1416, 39017, 32075, 35087, 19383, 65424, 2846, 23609, 2248, 36809, 1598, 16499, 11141, 13088, 43414, 43736, 48987, 29440, 17974, 49748, 40280, 47984, 12967, 4449, 11305, 3495, 21208, 62730, 36465, 23780, 5351, 5280, 20101, 18280, 26116, 47939, 46791, 5906, 26030, 40079, 64720, 16715, 55749, 49620, 17893, 74381, 23585, 22372, 18348, 63807, 31600, 39842, 13393, 43191, 31911, 66718, 2334, 47187, 69233, 64756, 65828, 72408, 66364, 52271, 20949, 34969, 36484, 73742, 69114, 60462, 60578, 66136, 72157, 5359, 8294, 22797, 65836, 13466, 35000, 53933, 53297, 1667, 35447, 75567, 76386, 47228, 60403, 18888, 53923, 75914, 72626, 24351, 71318, 28574, 35349, 49089, 68520, 18736, 1722, 49707, 66574, 15211, 36763, 43735, 54494, 72782, 15914, 39645, 64216, 73798, 40771, 68795, 64364, 36044, 65296, 2206, 53835, 12279, 22822, 68749, 35173, 10612, 17772, 16814, 68710, 19418, 56666, 15844, 41841, 35003, 68447, 20371, 13391, 58431, 39148, 9577, 55304, 39359, 44954, 9799, 65840, 71380, 28366, 2108, 18373, 35393, 17753, 56604, 23127, 53984, 37608, 47393, 39452, 7429, 19030, 67197, 54858, 1381, 27897, 31962, 68721, 52176, 2889, 42986, 43537, 26216, 71528, 38032, 37312, 66428, 71691, 23467, 10941, 64946, 39003, 3178, 13174, 52305, 69277, 22301, 42397, 5868, 16710, 4700, 26543, 68709, 28314, 43583, 5885, 39767, 60179, 19455, 13164, 51851, 12287, 35164, 9126, 63759, 71875, 65321, 23337, 1286, 28187, 60402, 56409, 36050, 63614, 39084, 71678, 20227, 7283, 66523, 12836, 19532, 47923, 13741, 18374, 65626, 19075, 43138, 12603, 44930, 32962, 43182, 55384, 18961, 56729, 74165, 66667, 71992, 75108, 23260, 19946, 41846, 43569, 36228, 62847, 37542, 64810, 56475, 12227, 58178, 19438, 18041, 1173, 43482, 32127, 43750, 46828, 23649, 53576, 4271, 60647, 58454, 55708, 3535, 32096, 71695, 34919, 8733, 39352, 59096, 67345, 47502, 63171, 3492, 47036, 75328, 27975, 1500, 62215, 53401, 60338, 19882, 59347, 36070, 36211, 65195, 952, 39888, 55359, 76446, 42448, 43678, 42350, 73391, 52546, 2897, 37872, 39147, 69375, 35430, 13205, 65221, 36662, 35376, 39333, 49558, 65085, 1962, 39234, 19951, 53432, 12420, 36219, 34898, 69321, 66443, 37455, 26278, 2122, 16589, 24328, 22271, 66063, 21183, 2357, 21751, 22198, 43118, 36343, 63173, 36309, 22601, 43825, 22552, 34868, 50086, 39883, 34711, 42999, 72913, 15793, 55560, 36811, 22762, 35069, 55529, 55751, 22787, 74411, 19729, 21749, 18560, 20179, 26007, 54877, 46810, 56883, 43604, 41790, 10529, 10842, 21296, 53313, 28035, 26153, 3456, 55898, 43144, 53460, 37138, 53573, 15855, 65550, 60267, 22322, 10743, 65589, 17951, 28185, 15956, 39112, 74966, 28140, 15769, 69224, 2339, 47174, 56268, 76462, 33371, 17935, 3317, 18163, 44925, 66848, 13220, 17777, 54732, 35171, 12167, 64270, 23211, 40735, 73046, 2394, 43121, 68491, 13569, 22516, 19044, 54029, 75736, 44950, 3401, 20393, 43235, 15665, 13323, 13963, 12123, 18249, 63910, 49647, 35317, 1967, 45209, 36318, 49855, 75377, 16566, 58452, 55492, 18634, 6157, 21151, 2092, 20364, 44325, 25250, 16845, 63620, 34326, 61035, 65570, 19090, 22794, 62831, 43547, 53398, 47861, 28481, 41117, 76208, 63479, 1504, 55637, 41796, 60556, 72672, 15719, 23774, 39880, 52998, 69041, 43101, 34114, 22337, 1990, 11120, 65246, 37690, 43226, 64497, 34650, 62364, 35111, 10779, 52488, 39781, 18033, 63120, 20402, 13665, 18226, 2067, 20454, 35300, 55871, 53017, 40911, 55268, 68328, 13151, 34796, 54128, 34841, 43155, 60030, 16553, 54476, 56659, 20953, 41877, 65363, 19668, 35146, 18019, 73864, 29703, 39457, 6186, 23560, 18370, 2261, 10851, 63755, 62902, 23612, 26175, 38954, 1902, 28484, 75647, 34320, 28572, 47085, 15226, 63397, 65530, 60626, 53949, 37830, 7260, 47999, 68741, 75825, 7268, 12163, 69261, 69130, 58944, 72309, 28360, 44080, 52609, 3490, 43190, 39582, 29384, 16524, 34755, 21197, 75824), '0.00', True, '1/2327/%', True, '1/2327/%', ('waiting', 'confirmed', 'partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL)) AND ("stock_move"."state" in %s))' with params: [(22208, 13403, 21501, 26054, 62259, 64085, 30488, 7430, 3096, 64535, 7330, 47168, 24401, 20129, 66897, 47584, 23468, 72972, 65115, 71347, 39064, 45150, 69271, 55724, 63406, 18121, 39906, 23188, 56769, 63714, 21771, 11328, 34619, 16677, 15714, 52566, 65110, 3497, 20894, 61062, 55790, 7326, 1167, 47093, 26099, 60159, 33139, 1064, 53397, 52443, 41904, 63465, 18017, 62767, 26180, 10781, 63310, 73409, 54851, 73761, 13254, 76367, 52964, 20235, 21174, 49036, 11661, 10985, 76457, 63122, 38998, 1225, 21209, 49891, 34645, 47976, 44823, 18022, 39477, 46830, 36473, 65851, 29526, 39394, 30470, 55909, 47560, 60550, 40773, 1284, 75984, 22841, 36170, 42947, 63769, 4591, 1835, 33210, 22904, 16801, 68167, 23284, 23587, 23425, 43362, 1646, 34986, 40311, 20125, 47864, 69423, 32067, 15831, 40289, 43080, 63539, 66164, 39913, 5284, 44853, 29356, 6146, 42364, 66779, 9135, 52497, 37945, 55865, 47176, 42344, 46826, 39656, 65448, 28494, 15704, 37479, 63652, 12364, 22484, 60256, 2177, 9894, 35218, 62794, 16706, 22299, 65175, 75787, 73632, 34749, 44202, 42282, 22572, 895, 64848, 34673, 7451, 19348, 56765, 71448, 52459, 37674, 73579, 11460, 22744, 23416, 3530, 23684, 42331, 11307, 60963, 56317, 1572, 69320, 71261, 64827, 21156, 35455, 63252, 53544, 22047, 52511, 52307, 19979, 13388, 51857, 21857, 25354, 10893, 19594, 55333, 5811, 1941, 12847, 69232, 52400, 20930, 66316, 74611, 72967, 53817, 23449, 72727, 59362, 48921, 21858, 69290, 74487, 75727, 19275, 45240, 52586, 9094, 71767, 65710, 21193, 63339, 18837, 53631, 3065, 47442, 41840, 75286, 22996, 5792, 72190, 35170, 35382, 23805, 9056, 16629, 63837, 74739, 75920, 19921, 48991, 18636, 13862, 2346, 75791, 56813, 16039, 43805, 53279, 63550, 21270, 28163, 60236, 62716, 21076, 10070, 22735, 37298, 56398, 43027, 39872, 65233, 19012, 71511, 7377, 20092, 56366, 3331, 21201, 16489, 33374, 21055, 22871, 828, 63870, 20962, 52192, 68767, 18076, 53626, 32031, 72576, 13354, 55890, 59330, 20469, 69011, 58321, 41799, 1497, 35311, 42485, 13678, 23111, 66163, 56548, 18895, 26082, 65838, 47227, 56587, 60815, 12122, 56477, 7439, 65330, 35433, 41800, 17781, 13568, 28384, 67413, 56810, 63162, 12901, 42976, 2189, 34671, 23224, 25314, 39411, 45153, 66889, 23157, 49709, 10898, 2217, 5887, 27950, 10583, 21755, 74667, 25345, 27786, 49636, 73278, 72598, 36419, 19332, 28285, 63601, 23048, 47877, 44299, 15407, 68979, 52599, 71669, 2207, 44854, 76327, 953, 20922, 62826, 7446, 28164, 2455, 3024, 37141, 60378, 54679, 56851, 60079, 56278, 43054, 52248, 63210, 62237, 20138, 56322, 26169, 19897, 54879, 13838, 2873, 19068, 71842, 13536, 37159, 16735, 19515, 18451, 64531, 19904, 37586, 920, 17705, 26556, 66385, 18679, 41953, 3551, 9892, 20964, 4414, 2966, 22526, 22982, 3324, 74631, 65594, 63170, 49966, 55551, 54771, 63562, 61069, 35101, 1389, 60620, 26004, 28343, 65595, 34293, 11179, 49662, 3791, 44304, 74919, 39841, 63690, 18422, 32462, 37864, 22544, 59390, 42166, 75831, 74460, 22332, 15707, 15850, 24337, 41853, 39605, 22799, 4252, 3523, 4392, 72550, 18898, 74733, 59337, 49961, 10816, 36741, 55851, 48961, 64097, 19380, 76082, 28086, 49799, 10809, 19647, 20294, 2157, 22110, 55406, 44944, 66075, 22087, 52625, 47218, 60434, 63738, 24416, 65093, 43436, 22595, 18792, 22149, 46849, 28374, 29579, 67299, 23572, 16719, 63650, 37316, 60230, 5874, 53906, 68950, 33270, 29508, 56291, 53762, 1084, 66094, 53494, 64206, 10579, 29771, 3484, 64195, 32364, 75379, 1981, 39870, 17775, 66629, 68495, 48957, 49807, 75526, 40776, 23380, 36738, 53359, 19578, 35791, 20127, 13533, 63148, 74686, 34372, 18536, 55284, 76218, 32082, 25991, 46758, 73402, 53381, 74977, 18271, 855, 60799, 10493, 65625, 3385, 41598, 34156, 34119, 27441, 9664, 4301, 73389, 7347, 43801, 76391, 62790, 28173, 21267, 49601, 30452, 61051, 53301, 40091, 64541, 13830, 1801, 62713, 35229, 53551, 32027, 22067, 75612, 53743, 66319, 69040, 49790, 32170, 65976, 2901, 34724, 42186, 65151, 26150, 66405, 15894, 55841, 74077, 55634, 64766, 18383, 66985, 47915, 23658, 13711, 23176, 63966, 68729, 64372, 28529, 32452, 69195, 1416, 39017, 32075, 35087, 19383, 65424, 2846, 23609, 2248, 36809, 1598, 16499, 11141, 13088, 43414, 43736, 48987, 29440, 17974, 49748, 40280, 47984, 12967, 4449, 11305, 3495, 21208, 62730, 36465, 23780, 5351, 5280, 20101, 18280, 26116, 47939, 46791, 5906, 26030, 40079, 64720, 16715, 55749, 49620, 17893, 74381, 23585, 22372, 18348, 63807, 31600, 39842, 13393, 43191, 31911, 66718, 2334, 47187, 69233, 64756, 65828, 72408, 66364, 52271, 20949, 34969, 36484, 73742, 69114, 60462, 60578, 66136, 72157, 5359, 8294, 22797, 65836, 13466, 35000, 53933, 53297, 1667, 35447, 75567, 76386, 47228, 60403, 18888, 53923, 75914, 72626, 24351, 71318, 28574, 35349, 49089, 68520, 18736, 1722, 49707, 66574, 15211, 36763, 43735, 54494, 72782, 15914, 39645, 64216, 73798, 40771, 68795, 64364, 36044, 65296, 2206, 53835, 12279, 22822, 68749, 35173, 10612, 17772, 16814, 68710, 19418, 56666, 15844, 41841, 35003, 68447, 20371, 13391, 58431, 39148, 9577, 55304, 39359, 44954, 9799, 65840, 71380, 28366, 2108, 18373, 35393, 17753, 56604, 23127, 53984, 37608, 47393, 39452, 7429, 19030, 67197, 54858, 1381, 27897, 31962, 68721, 52176, 2889, 42986, 43537, 26216, 71528, 38032, 37312, 66428, 71691, 23467, 10941, 64946, 39003, 3178, 13174, 52305, 69277, 22301, 42397, 5868, 16710, 4700, 26543, 68709, 28314, 43583, 5885, 39767, 60179, 19455, 13164, 51851, 12287, 35164, 9126, 63759, 71875, 65321, 23337, 1286, 28187, 60402, 56409, 36050, 63614, 39084, 71678, 20227, 7283, 66523, 12836, 19532, 47923, 13741, 18374, 65626, 19075, 43138, 12603, 44930, 32962, 43182, 55384, 18961, 56729, 74165, 66667, 71992, 75108, 23260, 19946, 41846, 43569, 36228, 62847, 37542, 64810, 56475, 12227, 58178, 19438, 18041, 1173, 43482, 32127, 43750, 46828, 23649, 53576, 4271, 60647, 58454, 55708, 3535, 32096, 71695, 34919, 8733, 39352, 59096, 67345, 47502, 63171, 3492, 47036, 75328, 27975, 1500, 62215, 53401, 60338, 19882, 59347, 36070, 36211, 65195, 952, 39888, 55359, 76446, 42448, 43678, 42350, 73391, 52546, 2897, 37872, 39147, 69375, 35430, 13205, 65221, 36662, 35376, 39333, 49558, 65085, 1962, 39234, 19951, 53432, 12420, 36219, 34898, 69321, 66443, 37455, 26278, 2122, 16589, 24328, 22271, 66063, 21183, 2357, 21751, 22198, 43118, 36343, 63173, 36309, 22601, 43825, 22552, 34868, 50086, 39883, 34711, 42999, 72913, 15793, 55560, 36811, 22762, 35069, 55529, 55751, 22787, 74411, 19729, 21749, 18560, 20179, 26007, 54877, 46810, 56883, 43604, 41790, 10529, 10842, 21296, 53313, 28035, 26153, 3456, 55898, 43144, 53460, 37138, 53573, 15855, 65550, 60267, 22322, 10743, 65589, 17951, 28185, 15956, 39112, 74966, 28140, 15769, 69224, 2339, 47174, 56268, 76462, 33371, 17935, 3317, 18163, 44925, 66848, 13220, 17777, 54732, 35171, 12167, 64270, 23211, 40735, 73046, 2394, 43121, 68491, 13569, 22516, 19044, 54029, 75736, 44950, 3401, 20393, 43235, 15665, 13323, 13963, 12123, 18249, 63910, 49647, 35317, 1967, 45209, 36318, 49855, 75377, 16566, 58452, 55492, 18634, 6157, 21151, 2092, 20364, 44325, 25250, 16845, 63620, 34326, 61035, 65570, 19090, 22794, 62831, 43547, 53398, 47861, 28481, 41117, 76208, 63479, 1504, 55637, 41796, 60556, 72672, 15719, 23774, 39880, 52998, 69041, 43101, 34114, 22337, 1990, 11120, 65246, 37690, 43226, 64497, 34650, 62364, 35111, 10779, 52488, 39781, 18033, 63120, 20402, 13665, 18226, 2067, 20454, 35300, 55871, 53017, 40911, 55268, 68328, 13151, 34796, 54128, 34841, 43155, 60030, 16553, 54476, 56659, 20953, 41877, 65363, 19668, 35146, 18019, 73864, 29703, 39457, 6186, 23560, 18370, 2261, 10851, 63755, 62902, 23612, 26175, 38954, 1902, 28484, 75647, 34320, 28572, 47085, 15226, 63397, 65530, 60626, 53949, 37830, 7260, 47999, 68741, 75825, 7268, 12163, 69261, 69130, 58944, 72309, 28360, 44080, 52609, 3490, 43190, 39582, 29384, 16524, 34755, 21197, 75824), '0.00', True, '1/2327/%', True, '1/2327/%', ('waiting', 'confirmed', 'partially_available', 'assigned'), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL))' with params: [(22208, 13403, 21501, 26054, 62259, 64085, 30488, 7430, 3096, 64535, 7330, 47168, 24401, 20129, 66897, 47584, 23468, 72972, 65115, 71347, 39064, 45150, 69271, 55724, 63406, 18121, 39906, 23188, 56769, 63714, 21771, 11328, 34619, 16677, 15714, 52566, 65110, 3497, 20894, 61062, 55790, 7326, 1167, 47093, 26099, 60159, 33139, 1064, 53397, 52443, 41904, 63465, 18017, 62767, 26180, 10781, 63310, 73409, 54851, 73761, 13254, 76367, 52964, 20235, 21174, 49036, 11661, 10985, 76457, 63122, 38998, 1225, 21209, 49891, 34645, 47976, 44823, 18022, 39477, 46830, 36473, 65851, 29526, 39394, 30470, 55909, 47560, 60550, 40773, 1284, 75984, 22841, 36170, 42947, 63769, 4591, 1835, 33210, 22904, 16801, 68167, 23284, 23587, 23425, 43362, 1646, 34986, 40311, 20125, 47864, 69423, 32067, 15831, 40289, 43080, 63539, 66164, 39913, 5284, 44853, 29356, 6146, 42364, 66779, 9135, 52497, 37945, 55865, 47176, 42344, 46826, 39656, 65448, 28494, 15704, 37479, 63652, 12364, 22484, 60256, 2177, 9894, 35218, 62794, 16706, 22299, 65175, 75787, 73632, 34749, 44202, 42282, 22572, 895, 64848, 34673, 7451, 19348, 56765, 71448, 52459, 37674, 73579, 11460, 22744, 23416, 3530, 23684, 42331, 11307, 60963, 56317, 1572, 69320, 71261, 64827, 21156, 35455, 63252, 53544, 22047, 52511, 52307, 19979, 13388, 51857, 21857, 25354, 10893, 19594, 55333, 5811, 1941, 12847, 69232, 52400, 20930, 66316, 74611, 72967, 53817, 23449, 72727, 59362, 48921, 21858, 69290, 74487, 75727, 19275, 45240, 52586, 9094, 71767, 65710, 21193, 63339, 18837, 53631, 3065, 47442, 41840, 75286, 22996, 5792, 72190, 35170, 35382, 23805, 9056, 16629, 63837, 74739, 75920, 19921, 48991, 18636, 13862, 2346, 75791, 56813, 16039, 43805, 53279, 63550, 21270, 28163, 60236, 62716, 21076, 10070, 22735, 37298, 56398, 43027, 39872, 65233, 19012, 71511, 7377, 20092, 56366, 3331, 21201, 16489, 33374, 21055, 22871, 828, 63870, 20962, 52192, 68767, 18076, 53626, 32031, 72576, 13354, 55890, 59330, 20469, 69011, 58321, 41799, 1497, 35311, 42485, 13678, 23111, 66163, 56548, 18895, 26082, 65838, 47227, 56587, 60815, 12122, 56477, 7439, 65330, 35433, 41800, 17781, 13568, 28384, 67413, 56810, 63162, 12901, 42976, 2189, 34671, 23224, 25314, 39411, 45153, 66889, 23157, 49709, 10898, 2217, 5887, 27950, 10583, 21755, 74667, 25345, 27786, 49636, 73278, 72598, 36419, 19332, 28285, 63601, 23048, 47877, 44299, 15407, 68979, 52599, 71669, 2207, 44854, 76327, 953, 20922, 62826, 7446, 28164, 2455, 3024, 37141, 60378, 54679, 56851, 60079, 56278, 43054, 52248, 63210, 62237, 20138, 56322, 26169, 19897, 54879, 13838, 2873, 19068, 71842, 13536, 37159, 16735, 19515, 18451, 64531, 19904, 37586, 920, 17705, 26556, 66385, 18679, 41953, 3551, 9892, 20964, 4414, 2966, 22526, 22982, 3324, 74631, 65594, 63170, 49966, 55551, 54771, 63562, 61069, 35101, 1389, 60620, 26004, 28343, 65595, 34293, 11179, 49662, 3791, 44304, 74919, 39841, 63690, 18422, 32462, 37864, 22544, 59390, 42166, 75831, 74460, 22332, 15707, 15850, 24337, 41853, 39605, 22799, 4252, 3523, 4392, 72550, 18898, 74733, 59337, 49961, 10816, 36741, 55851, 48961, 64097, 19380, 76082, 28086, 49799, 10809, 19647, 20294, 2157, 22110, 55406, 44944, 66075, 22087, 52625, 47218, 60434, 63738, 24416, 65093, 43436, 22595, 18792, 22149, 46849, 28374, 29579, 67299, 23572, 16719, 63650, 37316, 60230, 5874, 53906, 68950, 33270, 29508, 56291, 53762, 1084, 66094, 53494, 64206, 10579, 29771, 3484, 64195, 32364, 75379, 1981, 39870, 17775, 66629, 68495, 48957, 49807, 75526, 40776, 23380, 36738, 53359, 19578, 35791, 20127, 13533, 63148, 74686, 34372, 18536, 55284, 76218, 32082, 25991, 46758, 73402, 53381, 74977, 18271, 855, 60799, 10493, 65625, 3385, 41598, 34156, 34119, 27441, 9664, 4301, 73389, 7347, 43801, 76391, 62790, 28173, 21267, 49601, 30452, 61051, 53301, 40091, 64541, 13830, 1801, 62713, 35229, 53551, 32027, 22067, 75612, 53743, 66319, 69040, 49790, 32170, 65976, 2901, 34724, 42186, 65151, 26150, 66405, 15894, 55841, 74077, 55634, 64766, 18383, 66985, 47915, 23658, 13711, 23176, 63966, 68729, 64372, 28529, 32452, 69195, 1416, 39017, 32075, 35087, 19383, 65424, 2846, 23609, 2248, 36809, 1598, 16499, 11141, 13088, 43414, 43736, 48987, 29440, 17974, 49748, 40280, 47984, 12967, 4449, 11305, 3495, 21208, 62730, 36465, 23780, 5351, 5280, 20101, 18280, 26116, 47939, 46791, 5906, 26030, 40079, 64720, 16715, 55749, 49620, 17893, 74381, 23585, 22372, 18348, 63807, 31600, 39842, 13393, 43191, 31911, 66718, 2334, 47187, 69233, 64756, 65828, 72408, 66364, 52271, 20949, 34969, 36484, 73742, 69114, 60462, 60578, 66136, 72157, 5359, 8294, 22797, 65836, 13466, 35000, 53933, 53297, 1667, 35447, 75567, 76386, 47228, 60403, 18888, 53923, 75914, 72626, 24351, 71318, 28574, 35349, 49089, 68520, 18736, 1722, 49707, 66574, 15211, 36763, 43735, 54494, 72782, 15914, 39645, 64216, 73798, 40771, 68795, 64364, 36044, 65296, 2206, 53835, 12279, 22822, 68749, 35173, 10612, 17772, 16814, 68710, 19418, 56666, 15844, 41841, 35003, 68447, 20371, 13391, 58431, 39148, 9577, 55304, 39359, 44954, 9799, 65840, 71380, 28366, 2108, 18373, 35393, 17753, 56604, 23127, 53984, 37608, 47393, 39452, 7429, 19030, 67197, 54858, 1381, 27897, 31962, 68721, 52176, 2889, 42986, 43537, 26216, 71528, 38032, 37312, 66428, 71691, 23467, 10941, 64946, 39003, 3178, 13174, 52305, 69277, 22301, 42397, 5868, 16710, 4700, 26543, 68709, 28314, 43583, 5885, 39767, 60179, 19455, 13164, 51851, 12287, 35164, 9126, 63759, 71875, 65321, 23337, 1286, 28187, 60402, 56409, 36050, 63614, 39084, 71678, 20227, 7283, 66523, 12836, 19532, 47923, 13741, 18374, 65626, 19075, 43138, 12603, 44930, 32962, 43182, 55384, 18961, 56729, 74165, 66667, 71992, 75108, 23260, 19946, 41846, 43569, 36228, 62847, 37542, 64810, 56475, 12227, 58178, 19438, 18041, 1173, 43482, 32127, 43750, 46828, 23649, 53576, 4271, 60647, 58454, 55708, 3535, 32096, 71695, 34919, 8733, 39352, 59096, 67345, 47502, 63171, 3492, 47036, 75328, 27975, 1500, 62215, 53401, 60338, 19882, 59347, 36070, 36211, 65195, 952, 39888, 55359, 76446, 42448, 43678, 42350, 73391, 52546, 2897, 37872, 39147, 69375, 35430, 13205, 65221, 36662, 35376, 39333, 49558, 65085, 1962, 39234, 19951, 53432, 12420, 36219, 34898, 69321, 66443, 37455, 26278, 2122, 16589, 24328, 22271, 66063, 21183, 2357, 21751, 22198, 43118, 36343, 63173, 36309, 22601, 43825, 22552, 34868, 50086, 39883, 34711, 42999, 72913, 15793, 55560, 36811, 22762, 35069, 55529, 55751, 22787, 74411, 19729, 21749, 18560, 20179, 26007, 54877, 46810, 56883, 43604, 41790, 10529, 10842, 21296, 53313, 28035, 26153, 3456, 55898, 43144, 53460, 37138, 53573, 15855, 65550, 60267, 22322, 10743, 65589, 17951, 28185, 15956, 39112, 74966, 28140, 15769, 69224, 2339, 47174, 56268, 76462, 33371, 17935, 3317, 18163, 44925, 66848, 13220, 17777, 54732, 35171, 12167, 64270, 23211, 40735, 73046, 2394, 43121, 68491, 13569, 22516, 19044, 54029, 75736, 44950, 3401, 20393, 43235, 15665, 13323, 13963, 12123, 18249, 63910, 49647, 35317, 1967, 45209, 36318, 49855, 75377, 16566, 58452, 55492, 18634, 6157, 21151, 2092, 20364, 44325, 25250, 16845, 63620, 34326, 61035, 65570, 19090, 22794, 62831, 43547, 53398, 47861, 28481, 41117, 76208, 63479, 1504, 55637, 41796, 60556, 72672, 15719, 23774, 39880, 52998, 69041, 43101, 34114, 22337, 1990, 11120, 65246, 37690, 43226, 64497, 34650, 62364, 35111, 10779, 52488, 39781, 18033, 63120, 20402, 13665, 18226, 2067, 20454, 35300, 55871, 53017, 40911, 55268, 68328, 13151, 34796, 54128, 34841, 43155, 60030, 16553, 54476, 56659, 20953, 41877, 65363, 19668, 35146, 18019, 73864, 29703, 39457, 6186, 23560, 18370, 2261, 10851, 63755, 62902, 23612, 26175, 38954, 1902, 28484, 75647, 34320, 28572, 47085, 15226, 63397, 65530, 60626, 53949, 37830, 7260, 47999, 68741, 75825, 7268, 12163, 69261, 69130, 58944, 72309, 28360, 44080, 52609, 3490, 43190, 39582, 29384, 16524, 34755, 21197, 75824), '0.00', True, '1/2327/%', True, '1/2327/%', ('waiting', 'confirmed', 'partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL))' with params: [(12843, 18843, 47764, 53001, 30440, 61044, 19834, 40279, 76252, 56875, 64349, 1948, 65839, 38498, 68785, 39411, 67005, 16666, 37657, 8771, 53769, 56664, 28355, 53839, 6099, 19645, 23628, 75750, 63263, 63558, 60626, 8792, 69087, 17993, 63821, 69001, 20070, 7321, 75370, 56849, 17603, 43859, 75924, 2221, 52179, 38962, 21153, 54024, 6227, 12242, 3382, 4575, 52982, 42275, 32181, 64109, 70396, 8672, 9636, 66421, 24383, 44742, 53555, 37624, 22854, 34155, 24425, 19578, 26052, 34974, 39220, 65507, 40131, 47898, 73009, 36309, 47841, 71372, 4564, 56480, 34945, 39926, 66072, 39665, 69176, 49001, 52079, 24249, 62266, 2375, 6079, 2090, 12115, 74131, 13497, 18952, 8799, 74126, 1877, 32066, 40117, 8695, 66556, 45211, 63146, 65164, 36131, 55548, 37352, 44228, 12220, 18472, 9138, 39576, 23087, 10630, 60357, 49579, 1934, 1838, 7313, 53412, 3788, 39845, 23760, 7344, 22532, 17955, 18266, 43099, 63764, 54485, 54116, 56312, 43208, 22617, 38946, 23818, 51883, 35008, 20203, 65408, 24157, 38248, 72586, 34847, 53994, 19029, 1071, 12880, 20083, 36212, 54446, 62903, 52195, 42322, 54085, 34591, 3216, 39015, 22179, 5910, 71861, 76015, 1717, 43371, 13871, 53525, 37384, 22207, 64233, 13788, 12391, 62792, 22183, 65295, 44233, 33156, 22160, 10478, 42099, 63006, 68752, 40033, 10838, 12241, 30485, 37921, 67374, 47468, 37267, 65495, 49626, 75636, 68318, 59145, 7441, 19493, 12591, 13901, 44973, 3499, 71701, 15828, 71831, 74121, 63914, 59413, 34678, 75288, 4461, 69378, 65208, 12967, 9661, 64243, 52313, 75871, 2276, 73097, 12299, 4543, 24243, 58427, 75510, 25970, 26129, 47042, 22064, 1606, 19414, 45152, 56620, 43121, 53462, 34882, 64785, 36369, 34748, 41767, 71943, 22266, 52142, 43529, 7406, 41587, 27954, 18419, 12213, 22347, 43464, 64068, 34613, 37563, 15851, 29245, 9664, 66169, 22442, 40185, 42462, 52934, 1745, 74357, 55414, 38965, 19298, 26522, 34794, 18958, 1454, 43572, 68331, 55757, 52393, 19542, 42978, 2180, 72272, 68497, 34773, 17872, 53574, 18072, 35297, 15125, 75514, 23301, 63141, 47546, 34679, 44917, 23669, 6175, 20279, 20204, 62212, 62942, 73990, 31590, 73817, 21859, 74238, 22518, 75063, 12332, 73866, 37902, 63777, 3074, 62302, 55609, 1886, 888, 56805, 53604, 72186, 35379, 54782, 66789, 19462, 43830, 13305, 39534, 20679, 43190, 38993, 7364, 19730, 34148, 52589, 75182, 35471, 43314, 23600, 76257, 43553, 55762, 45147, 18130, 20928, 3277, 3018, 39399, 22544, 2343, 35260, 73625, 69178, 43497, 3506, 23124, 63657, 22365, 47950, 54727, 43068, 35056, 20039, 37548, 1854, 62354, 13035, 36431, 26290, 53480, 65497, 39405, 18725, 6100, 13307, 72530, 58434, 43010, 75709, 1673, 22026, 63023, 20266, 3366, 44951, 3066, 2146, 5814, 68200, 7383, 72804, 66661, 18948, 66176, 29722, 55829, 53030, 35123, 13220, 20269, 48978, 66560, 41969, 56612, 48996, 23431, 63963, 13172, 15904, 42357, 47892, 8260, 8263, 60800, 63565, 43076, 23204, 75404, 63840, 43238, 37448, 49879, 6168, 63009, 39871, 33207, 32065, 43478, 16717, 5350, 4252, 7306, 65082, 60158, 71785, 29378, 75491, 76256, 23005, 39873, 64025, 71790, 71707, 13617, 43539, 59029, 33255, 36476, 18726, 35184, 23532, 33189, 15622, 37691, 47955, 52390, 16545, 22849, 22214, 69261, 38948, 65141, 13500, 19262, 3254, 21183, 65083, 2293, 4496, 32001, 28231, 38956, 60559, 7289, 74494, 12315, 36423, 16504, 55944, 56412, 41821, 58433, 63139, 52329, 72730, 56469, 34688, 32097, 54534, 63800, 39305, 9070, 23813, 47540, 55648, 35396, 54051, 47223, 30401, 72606, 47741, 12556, 47449, 56438, 63885, 15211, 52416, 39114, 68833, 16034, 52631, 9911, 53177, 2188, 36066, 6137, 15898, 43666, 2207, 49887, 41606, 12314, 23335, 47993, 1942, 43551, 3764, 21218, 13314, 44142, 12927, 60239, 62293, 22684, 59088, 16739, 39566, 43672, 37356, 60294, 2857, 47871, 8644, 39408, 64815, 13126, 69350, 76444, 17816, 74177, 65168, 46854, 27457, 1487, 42021, 2011, 64183, 28009, 47253, 19988, 3481, 54125, 2069, 56365, 9119, 24210, 50118, 49684, 75885, 72999, 12523, 55470, 37577, 34713, 56912, 49839, 30384, 22549, 37845, 53430, 72074, 23396, 18080, 3789, 40321, 47098, 59147, 52145, 31992, 13129, 18776, 20209, 1726, 63167, 22354, 63978, 68322, 51831, 32032, 39217, 29522, 75974, 22472, 49666, 63137, 60351, 19551, 53573, 53490, 44238, 23762, 4581, 13098, 55525, 71304, 24181, 5859, 10984, 15892, 74288, 39829, 34564, 58435, 21747, 49007, 18491, 47953, 60431, 59059, 13203, 35063, 52321, 18301, 37639, 68203, 4351, 22408, 39116, 52316, 44891, 71857, 43341, 56375, 39372, 56444, 12123, 66699, 75371, 40118, 18502, 67187, 16493, 18568, 34805, 47936, 26104, 46873, 12406, 47074, 49577, 46783, 3769, 66869, 1116, 47909, 28360, 13187, 31597, 18575, 3558, 74042, 60423, 39451, 49861, 37538, 23093, 23392, 72892, 65542, 15417, 33185, 6225, 45182, 3447, 38963, 23318, 36325, 65723, 62982, 58986, 945, 49060, 52626, 21241, 37844, 64710, 35796, 32979, 34424, 47386, 54134, 26000, 2117, 23527, 1539, 37861, 17839, 36128, 65611, 55692, 34877, 54513, 49042, 53024, 42980, 37539, 10885, 23810, 68169, 67284, 37831, 64990, 56559, 68517, 36705, 69007, 71278, 58485, 34652, 66596, 74023, 22456, 34619, 59356, 64372, 63643, 23340, 22776, 73027, 70426, 6219, 26568, 44942, 66738, 19276, 7350, 33200, 54889, 19925, 34880, 48965, 34388, 3353, 27426, 24369, 15483, 19024, 32169, 52938, 52368, 53602, 60649, 23173, 49033, 34792, 53534, 9654, 58836, 22632, 10615, 43486, 22319, 31601, 20476, 43290, 37469, 24191, 1850, 22369, 1792, 26585, 21088, 63754, 12321, 37612, 18620, 64304, 26534, 22022, 2083, 23235, 5309, 68286, 55833, 18865, 31602, 3173, 60652, 47263, 15722, 2093, 63611, 11168, 43985, 75687, 19090, 7429, 33127, 75127, 41982, 10850, 10576, 41109, 40223, 22735, 13205, 8635, 43973, 48945, 69071, 7345, 34647, 9631, 70393, 46655, 17891, 38024, 66667, 65798, 18163, 9898, 22360, 16796, 22683, 68816, 26710, 49793, 73543, 24344, 23486, 75714, 9628, 37338, 9928, 19680, 65195, 64055, 46846, 13895, 2420, 49673, 55546, 56554, 53122, 43595, 48952, 56688, 41911, 4476, 42004, 61476, 20938, 12957, 1605, 29555, 69287, 34906, 10522, 52460, 8690, 39157, 32152, 19325, 76462, 41013, 39994, 64977, 12969, 19604, 13309, 22370, 46746, 47488, 1727, 56683, 7284, 36703, 53017, 28218, 47986, 32954, 37339, 19832, 17762, 47251, 40907, 49741, 38758, 33294, 63584, 56910, 52447, 36201, 63419, 8732, 65159, 66985, 43967, 18136, 67298, 37597, 58428, 22051, 20251, 55839, 39308, 42305, 3776, 29451, 54870, 52110, 65007, 71781, 855, 22691, 67334, 49644, 53864, 60550, 22824, 36446, 65487, 23828, 16812, 59178, 23710, 4693, 2887, 8265, 75781, 68559, 67211, 26070, 71912, 15740, 65048, 18251, 41944, 62345, 48918, 19018, 42287, 44829, 19873, 45245, 21737, 13244, 7285, 29412, 12339, 19458, 49685, 66803, 55474, 6058, 19858, 75347, 47225, 67082, 19001, 23679, 60599, 63681, 29763, 24235, 64902, 43522, 74195, 1899, 13654, 74669, 74179, 18833, 37412, 72129, 22301, 65026, 23168, 9090, 41017, 68509, 13252, 71596, 73830, 2064, 10717, 3126, 44111, 28330, 31959, 36113, 10815, 52227, 63877, 18884, 55695, 3581, 65341, 27804, 54854, 65089, 10942, 39791, 56874, 52948, 19281, 56675, 60302, 53473, 28297, 23775, 1547, 64066, 12061, 22205, 64206, 23127, 47411, 66093, 40220, 36263, 6215, 65148, 19877, 66976, 66735, 67351, 4358, 10461, 22196, 35054, 56421, 65435, 22359, 28070, 29373, 18800, 62796, 65599, 39651, 29454, 13354, 2031, 3171, 70422, 26613, 26075, 12255, 39290, 43385, 21147, 60693, 36147, 23285, 52202, 63649, 60402, 11299, 22055, 37785, 74968, 32177, 40201, 50097, 17937, 13124, 2910, 45077, 962, 55485, 19391, 3642, 52957, 63843, 76476, 1600, 64759, 73694, 43601, 55529, 71759, 42328, 62246, 29170, 65472, 41949, 22614, 18652, 13570, 53280, 68998, 22202, 2944, 53289, 3370, 7166, 47923, 39670, 42071, 49814, 72322, 25815, 34872, 3188, 39266, 64740, 7271, 43027, 76349, 39937, 52408, 30376, 6212, 21150, 18418, 25270, 44322, 13721, 64394, 62725, 4493, 36111, 52146, 74135, 21505), '0.00', True, '1/2319/%', True, '1/2319/%', ('waiting', 'confirmed', 'partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL)) AND ("stock_move"."state" in %s))' with params: [(12843, 18843, 47764, 53001, 30440, 61044, 19834, 40279, 76252, 56875, 64349, 1948, 65839, 38498, 68785, 39411, 67005, 16666, 37657, 8771, 53769, 56664, 28355, 53839, 6099, 19645, 23628, 75750, 63263, 63558, 60626, 8792, 69087, 17993, 63821, 69001, 20070, 7321, 75370, 56849, 17603, 43859, 75924, 2221, 52179, 38962, 21153, 54024, 6227, 12242, 3382, 4575, 52982, 42275, 32181, 64109, 70396, 8672, 9636, 66421, 24383, 44742, 53555, 37624, 22854, 34155, 24425, 19578, 26052, 34974, 39220, 65507, 40131, 47898, 73009, 36309, 47841, 71372, 4564, 56480, 34945, 39926, 66072, 39665, 69176, 49001, 52079, 24249, 62266, 2375, 6079, 2090, 12115, 74131, 13497, 18952, 8799, 74126, 1877, 32066, 40117, 8695, 66556, 45211, 63146, 65164, 36131, 55548, 37352, 44228, 12220, 18472, 9138, 39576, 23087, 10630, 60357, 49579, 1934, 1838, 7313, 53412, 3788, 39845, 23760, 7344, 22532, 17955, 18266, 43099, 63764, 54485, 54116, 56312, 43208, 22617, 38946, 23818, 51883, 35008, 20203, 65408, 24157, 38248, 72586, 34847, 53994, 19029, 1071, 12880, 20083, 36212, 54446, 62903, 52195, 42322, 54085, 34591, 3216, 39015, 22179, 5910, 71861, 76015, 1717, 43371, 13871, 53525, 37384, 22207, 64233, 13788, 12391, 62792, 22183, 65295, 44233, 33156, 22160, 10478, 42099, 63006, 68752, 40033, 10838, 12241, 30485, 37921, 67374, 47468, 37267, 65495, 49626, 75636, 68318, 59145, 7441, 19493, 12591, 13901, 44973, 3499, 71701, 15828, 71831, 74121, 63914, 59413, 34678, 75288, 4461, 69378, 65208, 12967, 9661, 64243, 52313, 75871, 2276, 73097, 12299, 4543, 24243, 58427, 75510, 25970, 26129, 47042, 22064, 1606, 19414, 45152, 56620, 43121, 53462, 34882, 64785, 36369, 34748, 41767, 71943, 22266, 52142, 43529, 7406, 41587, 27954, 18419, 12213, 22347, 43464, 64068, 34613, 37563, 15851, 29245, 9664, 66169, 22442, 40185, 42462, 52934, 1745, 74357, 55414, 38965, 19298, 26522, 34794, 18958, 1454, 43572, 68331, 55757, 52393, 19542, 42978, 2180, 72272, 68497, 34773, 17872, 53574, 18072, 35297, 15125, 75514, 23301, 63141, 47546, 34679, 44917, 23669, 6175, 20279, 20204, 62212, 62942, 73990, 31590, 73817, 21859, 74238, 22518, 75063, 12332, 73866, 37902, 63777, 3074, 62302, 55609, 1886, 888, 56805, 53604, 72186, 35379, 54782, 66789, 19462, 43830, 13305, 39534, 20679, 43190, 38993, 7364, 19730, 34148, 52589, 75182, 35471, 43314, 23600, 76257, 43553, 55762, 45147, 18130, 20928, 3277, 3018, 39399, 22544, 2343, 35260, 73625, 69178, 43497, 3506, 23124, 63657, 22365, 47950, 54727, 43068, 35056, 20039, 37548, 1854, 62354, 13035, 36431, 26290, 53480, 65497, 39405, 18725, 6100, 13307, 72530, 58434, 43010, 75709, 1673, 22026, 63023, 20266, 3366, 44951, 3066, 2146, 5814, 68200, 7383, 72804, 66661, 18948, 66176, 29722, 55829, 53030, 35123, 13220, 20269, 48978, 66560, 41969, 56612, 48996, 23431, 63963, 13172, 15904, 42357, 47892, 8260, 8263, 60800, 63565, 43076, 23204, 75404, 63840, 43238, 37448, 49879, 6168, 63009, 39871, 33207, 32065, 43478, 16717, 5350, 4252, 7306, 65082, 60158, 71785, 29378, 75491, 76256, 23005, 39873, 64025, 71790, 71707, 13617, 43539, 59029, 33255, 36476, 18726, 35184, 23532, 33189, 15622, 37691, 47955, 52390, 16545, 22849, 22214, 69261, 38948, 65141, 13500, 19262, 3254, 21183, 65083, 2293, 4496, 32001, 28231, 38956, 60559, 7289, 74494, 12315, 36423, 16504, 55944, 56412, 41821, 58433, 63139, 52329, 72730, 56469, 34688, 32097, 54534, 63800, 39305, 9070, 23813, 47540, 55648, 35396, 54051, 47223, 30401, 72606, 47741, 12556, 47449, 56438, 63885, 15211, 52416, 39114, 68833, 16034, 52631, 9911, 53177, 2188, 36066, 6137, 15898, 43666, 2207, 49887, 41606, 12314, 23335, 47993, 1942, 43551, 3764, 21218, 13314, 44142, 12927, 60239, 62293, 22684, 59088, 16739, 39566, 43672, 37356, 60294, 2857, 47871, 8644, 39408, 64815, 13126, 69350, 76444, 17816, 74177, 65168, 46854, 27457, 1487, 42021, 2011, 64183, 28009, 47253, 19988, 3481, 54125, 2069, 56365, 9119, 24210, 50118, 49684, 75885, 72999, 12523, 55470, 37577, 34713, 56912, 49839, 30384, 22549, 37845, 53430, 72074, 23396, 18080, 3789, 40321, 47098, 59147, 52145, 31992, 13129, 18776, 20209, 1726, 63167, 22354, 63978, 68322, 51831, 32032, 39217, 29522, 75974, 22472, 49666, 63137, 60351, 19551, 53573, 53490, 44238, 23762, 4581, 13098, 55525, 71304, 24181, 5859, 10984, 15892, 74288, 39829, 34564, 58435, 21747, 49007, 18491, 47953, 60431, 59059, 13203, 35063, 52321, 18301, 37639, 68203, 4351, 22408, 39116, 52316, 44891, 71857, 43341, 56375, 39372, 56444, 12123, 66699, 75371, 40118, 18502, 67187, 16493, 18568, 34805, 47936, 26104, 46873, 12406, 47074, 49577, 46783, 3769, 66869, 1116, 47909, 28360, 13187, 31597, 18575, 3558, 74042, 60423, 39451, 49861, 37538, 23093, 23392, 72892, 65542, 15417, 33185, 6225, 45182, 3447, 38963, 23318, 36325, 65723, 62982, 58986, 945, 49060, 52626, 21241, 37844, 64710, 35796, 32979, 34424, 47386, 54134, 26000, 2117, 23527, 1539, 37861, 17839, 36128, 65611, 55692, 34877, 54513, 49042, 53024, 42980, 37539, 10885, 23810, 68169, 67284, 37831, 64990, 56559, 68517, 36705, 69007, 71278, 58485, 34652, 66596, 74023, 22456, 34619, 59356, 64372, 63643, 23340, 22776, 73027, 70426, 6219, 26568, 44942, 66738, 19276, 7350, 33200, 54889, 19925, 34880, 48965, 34388, 3353, 27426, 24369, 15483, 19024, 32169, 52938, 52368, 53602, 60649, 23173, 49033, 34792, 53534, 9654, 58836, 22632, 10615, 43486, 22319, 31601, 20476, 43290, 37469, 24191, 1850, 22369, 1792, 26585, 21088, 63754, 12321, 37612, 18620, 64304, 26534, 22022, 2083, 23235, 5309, 68286, 55833, 18865, 31602, 3173, 60652, 47263, 15722, 2093, 63611, 11168, 43985, 75687, 19090, 7429, 33127, 75127, 41982, 10850, 10576, 41109, 40223, 22735, 13205, 8635, 43973, 48945, 69071, 7345, 34647, 9631, 70393, 46655, 17891, 38024, 66667, 65798, 18163, 9898, 22360, 16796, 22683, 68816, 26710, 49793, 73543, 24344, 23486, 75714, 9628, 37338, 9928, 19680, 65195, 64055, 46846, 13895, 2420, 49673, 55546, 56554, 53122, 43595, 48952, 56688, 41911, 4476, 42004, 61476, 20938, 12957, 1605, 29555, 69287, 34906, 10522, 52460, 8690, 39157, 32152, 19325, 76462, 41013, 39994, 64977, 12969, 19604, 13309, 22370, 46746, 47488, 1727, 56683, 7284, 36703, 53017, 28218, 47986, 32954, 37339, 19832, 17762, 47251, 40907, 49741, 38758, 33294, 63584, 56910, 52447, 36201, 63419, 8732, 65159, 66985, 43967, 18136, 67298, 37597, 58428, 22051, 20251, 55839, 39308, 42305, 3776, 29451, 54870, 52110, 65007, 71781, 855, 22691, 67334, 49644, 53864, 60550, 22824, 36446, 65487, 23828, 16812, 59178, 23710, 4693, 2887, 8265, 75781, 68559, 67211, 26070, 71912, 15740, 65048, 18251, 41944, 62345, 48918, 19018, 42287, 44829, 19873, 45245, 21737, 13244, 7285, 29412, 12339, 19458, 49685, 66803, 55474, 6058, 19858, 75347, 47225, 67082, 19001, 23679, 60599, 63681, 29763, 24235, 64902, 43522, 74195, 1899, 13654, 74669, 74179, 18833, 37412, 72129, 22301, 65026, 23168, 9090, 41017, 68509, 13252, 71596, 73830, 2064, 10717, 3126, 44111, 28330, 31959, 36113, 10815, 52227, 63877, 18884, 55695, 3581, 65341, 27804, 54854, 65089, 10942, 39791, 56874, 52948, 19281, 56675, 60302, 53473, 28297, 23775, 1547, 64066, 12061, 22205, 64206, 23127, 47411, 66093, 40220, 36263, 6215, 65148, 19877, 66976, 66735, 67351, 4358, 10461, 22196, 35054, 56421, 65435, 22359, 28070, 29373, 18800, 62796, 65599, 39651, 29454, 13354, 2031, 3171, 70422, 26613, 26075, 12255, 39290, 43385, 21147, 60693, 36147, 23285, 52202, 63649, 60402, 11299, 22055, 37785, 74968, 32177, 40201, 50097, 17937, 13124, 2910, 45077, 962, 55485, 19391, 3642, 52957, 63843, 76476, 1600, 64759, 73694, 43601, 55529, 71759, 42328, 62246, 29170, 65472, 41949, 22614, 18652, 13570, 53280, 68998, 22202, 2944, 53289, 3370, 7166, 47923, 39670, 42071, 49814, 72322, 25815, 34872, 3188, 39266, 64740, 7271, 43027, 76349, 39937, 52408, 30376, 6212, 21150, 18418, 25270, 44322, 13721, 64394, 62725, 4493, 36111, 52146, 74135, 21505), '0.00', True, '1/2319/%', True, '1/2319/%', ('waiting', 'confirmed', 'partially_available', 'assigned'), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL))' with params: [(12843, 18843, 47764, 53001, 30440, 61044, 19834, 40279, 76252, 56875, 64349, 1948, 65839, 38498, 68785, 39411, 67005, 16666, 37657, 8771, 53769, 56664, 28355, 53839, 6099, 19645, 23628, 75750, 63263, 63558, 60626, 8792, 69087, 17993, 63821, 69001, 20070, 7321, 75370, 56849, 17603, 43859, 75924, 2221, 52179, 38962, 21153, 54024, 6227, 12242, 3382, 4575, 52982, 42275, 32181, 64109, 70396, 8672, 9636, 66421, 24383, 44742, 53555, 37624, 22854, 34155, 24425, 19578, 26052, 34974, 39220, 65507, 40131, 47898, 73009, 36309, 47841, 71372, 4564, 56480, 34945, 39926, 66072, 39665, 69176, 49001, 52079, 24249, 62266, 2375, 6079, 2090, 12115, 74131, 13497, 18952, 8799, 74126, 1877, 32066, 40117, 8695, 66556, 45211, 63146, 65164, 36131, 55548, 37352, 44228, 12220, 18472, 9138, 39576, 23087, 10630, 60357, 49579, 1934, 1838, 7313, 53412, 3788, 39845, 23760, 7344, 22532, 17955, 18266, 43099, 63764, 54485, 54116, 56312, 43208, 22617, 38946, 23818, 51883, 35008, 20203, 65408, 24157, 38248, 72586, 34847, 53994, 19029, 1071, 12880, 20083, 36212, 54446, 62903, 52195, 42322, 54085, 34591, 3216, 39015, 22179, 5910, 71861, 76015, 1717, 43371, 13871, 53525, 37384, 22207, 64233, 13788, 12391, 62792, 22183, 65295, 44233, 33156, 22160, 10478, 42099, 63006, 68752, 40033, 10838, 12241, 30485, 37921, 67374, 47468, 37267, 65495, 49626, 75636, 68318, 59145, 7441, 19493, 12591, 13901, 44973, 3499, 71701, 15828, 71831, 74121, 63914, 59413, 34678, 75288, 4461, 69378, 65208, 12967, 9661, 64243, 52313, 75871, 2276, 73097, 12299, 4543, 24243, 58427, 75510, 25970, 26129, 47042, 22064, 1606, 19414, 45152, 56620, 43121, 53462, 34882, 64785, 36369, 34748, 41767, 71943, 22266, 52142, 43529, 7406, 41587, 27954, 18419, 12213, 22347, 43464, 64068, 34613, 37563, 15851, 29245, 9664, 66169, 22442, 40185, 42462, 52934, 1745, 74357, 55414, 38965, 19298, 26522, 34794, 18958, 1454, 43572, 68331, 55757, 52393, 19542, 42978, 2180, 72272, 68497, 34773, 17872, 53574, 18072, 35297, 15125, 75514, 23301, 63141, 47546, 34679, 44917, 23669, 6175, 20279, 20204, 62212, 62942, 73990, 31590, 73817, 21859, 74238, 22518, 75063, 12332, 73866, 37902, 63777, 3074, 62302, 55609, 1886, 888, 56805, 53604, 72186, 35379, 54782, 66789, 19462, 43830, 13305, 39534, 20679, 43190, 38993, 7364, 19730, 34148, 52589, 75182, 35471, 43314, 23600, 76257, 43553, 55762, 45147, 18130, 20928, 3277, 3018, 39399, 22544, 2343, 35260, 73625, 69178, 43497, 3506, 23124, 63657, 22365, 47950, 54727, 43068, 35056, 20039, 37548, 1854, 62354, 13035, 36431, 26290, 53480, 65497, 39405, 18725, 6100, 13307, 72530, 58434, 43010, 75709, 1673, 22026, 63023, 20266, 3366, 44951, 3066, 2146, 5814, 68200, 7383, 72804, 66661, 18948, 66176, 29722, 55829, 53030, 35123, 13220, 20269, 48978, 66560, 41969, 56612, 48996, 23431, 63963, 13172, 15904, 42357, 47892, 8260, 8263, 60800, 63565, 43076, 23204, 75404, 63840, 43238, 37448, 49879, 6168, 63009, 39871, 33207, 32065, 43478, 16717, 5350, 4252, 7306, 65082, 60158, 71785, 29378, 75491, 76256, 23005, 39873, 64025, 71790, 71707, 13617, 43539, 59029, 33255, 36476, 18726, 35184, 23532, 33189, 15622, 37691, 47955, 52390, 16545, 22849, 22214, 69261, 38948, 65141, 13500, 19262, 3254, 21183, 65083, 2293, 4496, 32001, 28231, 38956, 60559, 7289, 74494, 12315, 36423, 16504, 55944, 56412, 41821, 58433, 63139, 52329, 72730, 56469, 34688, 32097, 54534, 63800, 39305, 9070, 23813, 47540, 55648, 35396, 54051, 47223, 30401, 72606, 47741, 12556, 47449, 56438, 63885, 15211, 52416, 39114, 68833, 16034, 52631, 9911, 53177, 2188, 36066, 6137, 15898, 43666, 2207, 49887, 41606, 12314, 23335, 47993, 1942, 43551, 3764, 21218, 13314, 44142, 12927, 60239, 62293, 22684, 59088, 16739, 39566, 43672, 37356, 60294, 2857, 47871, 8644, 39408, 64815, 13126, 69350, 76444, 17816, 74177, 65168, 46854, 27457, 1487, 42021, 2011, 64183, 28009, 47253, 19988, 3481, 54125, 2069, 56365, 9119, 24210, 50118, 49684, 75885, 72999, 12523, 55470, 37577, 34713, 56912, 49839, 30384, 22549, 37845, 53430, 72074, 23396, 18080, 3789, 40321, 47098, 59147, 52145, 31992, 13129, 18776, 20209, 1726, 63167, 22354, 63978, 68322, 51831, 32032, 39217, 29522, 75974, 22472, 49666, 63137, 60351, 19551, 53573, 53490, 44238, 23762, 4581, 13098, 55525, 71304, 24181, 5859, 10984, 15892, 74288, 39829, 34564, 58435, 21747, 49007, 18491, 47953, 60431, 59059, 13203, 35063, 52321, 18301, 37639, 68203, 4351, 22408, 39116, 52316, 44891, 71857, 43341, 56375, 39372, 56444, 12123, 66699, 75371, 40118, 18502, 67187, 16493, 18568, 34805, 47936, 26104, 46873, 12406, 47074, 49577, 46783, 3769, 66869, 1116, 47909, 28360, 13187, 31597, 18575, 3558, 74042, 60423, 39451, 49861, 37538, 23093, 23392, 72892, 65542, 15417, 33185, 6225, 45182, 3447, 38963, 23318, 36325, 65723, 62982, 58986, 945, 49060, 52626, 21241, 37844, 64710, 35796, 32979, 34424, 47386, 54134, 26000, 2117, 23527, 1539, 37861, 17839, 36128, 65611, 55692, 34877, 54513, 49042, 53024, 42980, 37539, 10885, 23810, 68169, 67284, 37831, 64990, 56559, 68517, 36705, 69007, 71278, 58485, 34652, 66596, 74023, 22456, 34619, 59356, 64372, 63643, 23340, 22776, 73027, 70426, 6219, 26568, 44942, 66738, 19276, 7350, 33200, 54889, 19925, 34880, 48965, 34388, 3353, 27426, 24369, 15483, 19024, 32169, 52938, 52368, 53602, 60649, 23173, 49033, 34792, 53534, 9654, 58836, 22632, 10615, 43486, 22319, 31601, 20476, 43290, 37469, 24191, 1850, 22369, 1792, 26585, 21088, 63754, 12321, 37612, 18620, 64304, 26534, 22022, 2083, 23235, 5309, 68286, 55833, 18865, 31602, 3173, 60652, 47263, 15722, 2093, 63611, 11168, 43985, 75687, 19090, 7429, 33127, 75127, 41982, 10850, 10576, 41109, 40223, 22735, 13205, 8635, 43973, 48945, 69071, 7345, 34647, 9631, 70393, 46655, 17891, 38024, 66667, 65798, 18163, 9898, 22360, 16796, 22683, 68816, 26710, 49793, 73543, 24344, 23486, 75714, 9628, 37338, 9928, 19680, 65195, 64055, 46846, 13895, 2420, 49673, 55546, 56554, 53122, 43595, 48952, 56688, 41911, 4476, 42004, 61476, 20938, 12957, 1605, 29555, 69287, 34906, 10522, 52460, 8690, 39157, 32152, 19325, 76462, 41013, 39994, 64977, 12969, 19604, 13309, 22370, 46746, 47488, 1727, 56683, 7284, 36703, 53017, 28218, 47986, 32954, 37339, 19832, 17762, 47251, 40907, 49741, 38758, 33294, 63584, 56910, 52447, 36201, 63419, 8732, 65159, 66985, 43967, 18136, 67298, 37597, 58428, 22051, 20251, 55839, 39308, 42305, 3776, 29451, 54870, 52110, 65007, 71781, 855, 22691, 67334, 49644, 53864, 60550, 22824, 36446, 65487, 23828, 16812, 59178, 23710, 4693, 2887, 8265, 75781, 68559, 67211, 26070, 71912, 15740, 65048, 18251, 41944, 62345, 48918, 19018, 42287, 44829, 19873, 45245, 21737, 13244, 7285, 29412, 12339, 19458, 49685, 66803, 55474, 6058, 19858, 75347, 47225, 67082, 19001, 23679, 60599, 63681, 29763, 24235, 64902, 43522, 74195, 1899, 13654, 74669, 74179, 18833, 37412, 72129, 22301, 65026, 23168, 9090, 41017, 68509, 13252, 71596, 73830, 2064, 10717, 3126, 44111, 28330, 31959, 36113, 10815, 52227, 63877, 18884, 55695, 3581, 65341, 27804, 54854, 65089, 10942, 39791, 56874, 52948, 19281, 56675, 60302, 53473, 28297, 23775, 1547, 64066, 12061, 22205, 64206, 23127, 47411, 66093, 40220, 36263, 6215, 65148, 19877, 66976, 66735, 67351, 4358, 10461, 22196, 35054, 56421, 65435, 22359, 28070, 29373, 18800, 62796, 65599, 39651, 29454, 13354, 2031, 3171, 70422, 26613, 26075, 12255, 39290, 43385, 21147, 60693, 36147, 23285, 52202, 63649, 60402, 11299, 22055, 37785, 74968, 32177, 40201, 50097, 17937, 13124, 2910, 45077, 962, 55485, 19391, 3642, 52957, 63843, 76476, 1600, 64759, 73694, 43601, 55529, 71759, 42328, 62246, 29170, 65472, 41949, 22614, 18652, 13570, 53280, 68998, 22202, 2944, 53289, 3370, 7166, 47923, 39670, 42071, 49814, 72322, 25815, 34872, 3188, 39266, 64740, 7271, 43027, 76349, 39937, 52408, 30376, 6212, 21150, 18418, 25270, 44322, 13721, 64394, 62725, 4493, 36111, 52146, 74135, 21505), '0.00', True, '1/2319/%', True, '1/2319/%', ('waiting', 'confirmed', 'partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL))' with params: [(74724, 44817, 22882, 22235, 63278, 18893, 32120, 41201, 76162, 55518, 26639, 66532, 45073, 47222, 63684, 68779, 20085, 2324, 74103, 3175, 39528, 22955, 69392, 59357, 69313, 23820, 56565, 53824, 53410, 64060, 71596, 62219, 58379, 49551, 23790, 34678, 22738, 22604, 43163, 18434, 63247, 21254, 52114, 5797, 64095, 56359, 3597, 10932, 60286, 67055, 23480, 23745, 73275, 30433, 37884, 53442, 54839, 7448, 13298, 22518, 18102, 20278, 68446, 9093, 22276, 75518, 69207, 13157, 43260, 1703, 16509, 28370, 47454, 44902, 18172, 28055, 34583, 36081, 19400, 40897, 34850, 65851, 32158, 16488, 19637, 24307, 64970, 46770, 18302, 63319, 18042, 20089, 62947, 23318, 43519, 58437, 13327, 22989, 22792, 68944, 9913, 68731, 10558, 62217, 60034, 10757, 58429, 16035, 27912, 55279, 13417, 54537, 20975, 75344, 54132, 21720, 72356, 73320, 21144, 36763, 18456, 40157, 34909, 33067, 64389, 34588, 7374, 63481, 50084, 10508, 39583, 39861, 2875, 13840, 39141, 65051, 69075, 11545, 55694, 55574, 21121, 18030, 65114, 49745, 12079, 2935, 64835, 21147, 23751, 53270, 13160, 72346, 52389, 39340, 63755, 26291, 47408, 56810, 53370, 52595, 52499, 65161, 40902, 47965, 58921, 62974, 23355, 13322, 26580, 23499, 35194, 29758, 15129, 12393, 27944, 59002, 64711, 8774, 29417, 9586, 35296, 53264, 15894, 42197, 5902, 68230, 38991, 5322, 20423, 22783, 2890, 53463, 13898, 1746, 52677, 40293, 64773, 67196, 75388, 66366, 63052, 49627, 47361, 65789, 71752, 33199, 16672, 33084, 56380, 13852, 75449, 41917, 47713, 39366, 26193, 52475, 49566, 15930, 66631, 39078, 73444, 64233, 63772, 5819, 29560, 74002, 13763, 9061, 1090, 60307, 37882, 76275, 68892, 74517, 45184, 47476, 18604, 18949, 18279, 58275, 21077, 29701, 39209, 14739, 22415, 19281, 62902, 17855, 49762, 56402, 35290, 36430, 15847, 21257, 43927, 8285, 55625, 26182, 23203, 4594, 56923, 47191, 9137, 24138, 37396, 58301, 3642, 28220, 43285, 21752, 72595, 72766, 43714, 75676, 19966, 20079, 12503, 29456, 23726, 63974, 63911, 64379, 12428, 12173, 20952, 1242, 65748, 34417, 18692, 41999, 1849, 49562, 68745, 66415, 29540, 53505, 3162, 11111, 36057, 20087, 56947, 68273, 28027, 28067, 47840, 71884, 63430, 55798, 19493, 10742, 54731, 22581, 42347, 62345, 65558, 74092, 34894, 3284, 19032, 3425, 16680, 17811, 53915, 66500, 60263, 63462, 45215, 3372, 52655, 11160, 34804, 36476, 12287, 19346, 10967, 3785, 26234, 4324, 12308, 10810, 39413, 64375, 18532, 73936, 45034, 1477, 65649, 45070, 43563, 18793, 52934, 23091, 22221, 58354, 42302, 26575, 15744, 52557, 22550, 23237, 55472, 60579, 43226, 60053, 28061, 2211, 69218, 66352, 9798, 63163, 26205, 69147, 8747, 39344, 22625, 63951, 23354, 10467, 64873, 52634, 15624, 29386, 55516, 35377, 75480, 37584, 3182, 58321, 15883, 3405, 60249, 53569, 42106, 13722, 64673, 20300, 13611, 3514, 64944, 11648, 20299, 74739, 63680, 67357, 10663, 35396, 75477, 34935, 23384, 12194, 36308, 4527, 72526, 71650, 71775, 5402, 63109, 11728, 13668, 73917, 32049, 47473, 8642, 1516, 49062, 34624, 71308, 40180, 73428, 63606, 31577, 53110, 10637, 2058, 73941, 38252, 20399, 65678, 1442, 47838, 35105, 5397, 43203, 28116, 72398, 59342, 64757, 74247, 23294, 13255, 23238, 72499, 19256, 46634, 37343, 47190, 1706, 62725, 65653, 53034, 53664, 22728, 65277, 66446, 55615, 15951, 73546, 49033, 75803, 4506, 36054, 19854, 72543, 37507, 71398, 40189, 65410, 39166, 13234, 2229, 27964, 68242, 37763, 16846, 49041, 59033, 52477, 74932, 19799, 26597, 22374, 58400, 37335, 52362, 11162, 61063, 22501, 62936, 18696, 66785, 40172, 3199, 27943, 2340, 72549, 34592, 42950, 24137, 10783, 63382, 21591, 17756, 929, 12245, 31601, 53424, 36159, 34660, 23493, 52447, 65426, 23114, 44129, 53331, 71694, 13207, 74682, 28659, 18976, 43732, 10975, 65631, 62755, 58940, 17786, 38951, 41941, 18874, 35019, 1445, 42160, 27837, 1220, 63295, 64059, 39751, 3599, 29375, 11173, 32018, 10753, 55544, 73663, 5903, 4693, 13267, 65575, 53435, 22781, 34867, 2228, 28071, 75629, 1879, 42509, 6147, 18636, 71281, 65692, 75008, 19320, 35069, 36184, 65394, 43407, 12300, 21236, 8687, 29319, 7258, 13771, 19905, 1764, 63585, 63936, 4429, 38024, 44231, 65460, 44843, 24230, 74655, 55272, 66600, 9125, 17922, 71955, 52184, 65461, 13163, 68267, 64010, 22521, 39385, 29452, 23415, 15793, 68316, 21729, 43253, 42377, 40119, 66598, 19260, 72988, 2183, 65082, 60635, 75238, 13032, 55589, 23754, 56949, 44229, 9032, 54065, 60228, 1224, 44737, 55337, 10269, 6246, 23268, 19418, 62970, 55508, 34683, 4578, 42231, 42493, 23609, 56689, 26114, 3084, 9135, 60962, 53658, 60439, 53741, 26162, 54758, 34309, 73660, 55573, 41750, 10991, 44282, 56750, 72127, 39909, 60169, 53363, 53663, 36453, 60670, 60697, 34612, 35006, 69238, 1769, 22808, 24390, 75446, 64939, 37446, 3603, 71445, 18394, 19015, 35083, 16610, 13911, 56659, 49665, 65122, 55311, 55511, 72321, 16012, 55882, 56677, 53768, 23352, 10787, 72896, 41614, 75812, 65056, 59086, 15904, 23229, 1211, 18265, 39103, 36150, 22283, 3024, 68697, 33234, 62748, 36495, 63410, 73026, 10785, 9087, 20458, 21162, 18899, 73873, 20414, 76492, 52264, 47545, 23486, 19401, 40252, 67253, 66722, 10727, 68829, 28148, 1774, 68471, 72223, 22566, 59404, 7221, 63861, 68299, 42953, 39045, 1390, 3218, 47546, 8723, 76236, 55726, 22962, 29347, 22326, 65471, 63408, 76421, 49808, 36688, 18391, 75777, 10632, 41815, 1106, 10073, 65498, 36383, 9891, 53403, 18408, 68264, 28249, 65005, 54778, 1527, 64397, 10648, 66605, 10859, 22320, 52582, 47539, 45228, 55651, 1507, 36428, 29344, 66177, 67159, 33245, 33208, 52560, 10846, 49791, 44906, 64065, 66340, 43282, 2949, 44143, 24384, 22649, 28328, 59083, 75324, 62809, 20202, 66615, 39934, 34143, 64395, 20213, 43162, 44845, 43569, 28601, 3167, 19002, 49587, 74863, 18055, 2835, 37803, 71441, 66804, 49461, 39252, 41788, 53577, 39859, 18498, 41914, 52187, 52571, 29373, 68746, 47753, 65723, 23360, 19405, 13842, 65133, 7408, 73075, 42978, 71549, 68193, 56362, 8297, 74488, 3474, 43473, 39308, 19375, 23472, 18122, 19477, 1823, 56567, 10491, 34961, 18569, 22760, 74778, 13311, 63823, 1152, 47057, 64969, 24402, 75814, 65610, 2019, 60500, 20225, 34736, 46625, 23222, 49087, 58427, 22335, 29213, 1376, 58365, 1418, 16487, 27869, 15952, 15707, 41868, 56877, 41920, 19365, 16691, 32441, 76489, 41582, 39217, 42051, 73446, 56288, 74973, 47254, 42176, 6079, 75669, 3534, 52353, 75084, 65407, 39179, 56678, 19013, 31984, 55049, 66769, 25822, 16541, 27946, 23539, 43455, 912, 63149, 4487, 56798, 19463, 17807, 45016, 52272, 22902, 10565, 31873, 26243, 58405, 20157, 12846, 59417, 28520, 1702, 20016, 66546, 47517, 67177, 34127, 58869, 37465, 63562, 945, 1535, 64367, 36416, 17955, 27856, 13801, 65440, 26165, 45078, 1413, 13164, 42018, 55746, 46790, 23144, 10754, 52580, 41125, 20139, 66996, 74357, 1895, 10697, 9646, 4427, 74686, 71692, 34769, 52382, 21171, 18107, 26063, 33235, 63246, 3369, 16573, 18459, 40033, 28381, 58479, 71256, 43454, 1884, 64190, 44200, 10640, 49609, 22976, 43543, 2373, 74303, 73432, 73579, 23799, 35160, 47085, 17856, 26712, 60658, 64732, 17925, 9580, 66686, 42020, 49632, 3450, 22190, 21145, 23290, 1435, 1258, 68749, 12234, 3132, 1676, 22942), '0.00', True, '1/2335/%', True, '1/2335/%', ('waiting', 'confirmed', 'partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL)) AND ("stock_move"."state" in %s))' with params: [(74724, 44817, 22882, 22235, 63278, 18893, 32120, 41201, 76162, 55518, 26639, 66532, 45073, 47222, 63684, 68779, 20085, 2324, 74103, 3175, 39528, 22955, 69392, 59357, 69313, 23820, 56565, 53824, 53410, 64060, 71596, 62219, 58379, 49551, 23790, 34678, 22738, 22604, 43163, 18434, 63247, 21254, 52114, 5797, 64095, 56359, 3597, 10932, 60286, 67055, 23480, 23745, 73275, 30433, 37884, 53442, 54839, 7448, 13298, 22518, 18102, 20278, 68446, 9093, 22276, 75518, 69207, 13157, 43260, 1703, 16509, 28370, 47454, 44902, 18172, 28055, 34583, 36081, 19400, 40897, 34850, 65851, 32158, 16488, 19637, 24307, 64970, 46770, 18302, 63319, 18042, 20089, 62947, 23318, 43519, 58437, 13327, 22989, 22792, 68944, 9913, 68731, 10558, 62217, 60034, 10757, 58429, 16035, 27912, 55279, 13417, 54537, 20975, 75344, 54132, 21720, 72356, 73320, 21144, 36763, 18456, 40157, 34909, 33067, 64389, 34588, 7374, 63481, 50084, 10508, 39583, 39861, 2875, 13840, 39141, 65051, 69075, 11545, 55694, 55574, 21121, 18030, 65114, 49745, 12079, 2935, 64835, 21147, 23751, 53270, 13160, 72346, 52389, 39340, 63755, 26291, 47408, 56810, 53370, 52595, 52499, 65161, 40902, 47965, 58921, 62974, 23355, 13322, 26580, 23499, 35194, 29758, 15129, 12393, 27944, 59002, 64711, 8774, 29417, 9586, 35296, 53264, 15894, 42197, 5902, 68230, 38991, 5322, 20423, 22783, 2890, 53463, 13898, 1746, 52677, 40293, 64773, 67196, 75388, 66366, 63052, 49627, 47361, 65789, 71752, 33199, 16672, 33084, 56380, 13852, 75449, 41917, 47713, 39366, 26193, 52475, 49566, 15930, 66631, 39078, 73444, 64233, 63772, 5819, 29560, 74002, 13763, 9061, 1090, 60307, 37882, 76275, 68892, 74517, 45184, 47476, 18604, 18949, 18279, 58275, 21077, 29701, 39209, 14739, 22415, 19281, 62902, 17855, 49762, 56402, 35290, 36430, 15847, 21257, 43927, 8285, 55625, 26182, 23203, 4594, 56923, 47191, 9137, 24138, 37396, 58301, 3642, 28220, 43285, 21752, 72595, 72766, 43714, 75676, 19966, 20079, 12503, 29456, 23726, 63974, 63911, 64379, 12428, 12173, 20952, 1242, 65748, 34417, 18692, 41999, 1849, 49562, 68745, 66415, 29540, 53505, 3162, 11111, 36057, 20087, 56947, 68273, 28027, 28067, 47840, 71884, 63430, 55798, 19493, 10742, 54731, 22581, 42347, 62345, 65558, 74092, 34894, 3284, 19032, 3425, 16680, 17811, 53915, 66500, 60263, 63462, 45215, 3372, 52655, 11160, 34804, 36476, 12287, 19346, 10967, 3785, 26234, 4324, 12308, 10810, 39413, 64375, 18532, 73936, 45034, 1477, 65649, 45070, 43563, 18793, 52934, 23091, 22221, 58354, 42302, 26575, 15744, 52557, 22550, 23237, 55472, 60579, 43226, 60053, 28061, 2211, 69218, 66352, 9798, 63163, 26205, 69147, 8747, 39344, 22625, 63951, 23354, 10467, 64873, 52634, 15624, 29386, 55516, 35377, 75480, 37584, 3182, 58321, 15883, 3405, 60249, 53569, 42106, 13722, 64673, 20300, 13611, 3514, 64944, 11648, 20299, 74739, 63680, 67357, 10663, 35396, 75477, 34935, 23384, 12194, 36308, 4527, 72526, 71650, 71775, 5402, 63109, 11728, 13668, 73917, 32049, 47473, 8642, 1516, 49062, 34624, 71308, 40180, 73428, 63606, 31577, 53110, 10637, 2058, 73941, 38252, 20399, 65678, 1442, 47838, 35105, 5397, 43203, 28116, 72398, 59342, 64757, 74247, 23294, 13255, 23238, 72499, 19256, 46634, 37343, 47190, 1706, 62725, 65653, 53034, 53664, 22728, 65277, 66446, 55615, 15951, 73546, 49033, 75803, 4506, 36054, 19854, 72543, 37507, 71398, 40189, 65410, 39166, 13234, 2229, 27964, 68242, 37763, 16846, 49041, 59033, 52477, 74932, 19799, 26597, 22374, 58400, 37335, 52362, 11162, 61063, 22501, 62936, 18696, 66785, 40172, 3199, 27943, 2340, 72549, 34592, 42950, 24137, 10783, 63382, 21591, 17756, 929, 12245, 31601, 53424, 36159, 34660, 23493, 52447, 65426, 23114, 44129, 53331, 71694, 13207, 74682, 28659, 18976, 43732, 10975, 65631, 62755, 58940, 17786, 38951, 41941, 18874, 35019, 1445, 42160, 27837, 1220, 63295, 64059, 39751, 3599, 29375, 11173, 32018, 10753, 55544, 73663, 5903, 4693, 13267, 65575, 53435, 22781, 34867, 2228, 28071, 75629, 1879, 42509, 6147, 18636, 71281, 65692, 75008, 19320, 35069, 36184, 65394, 43407, 12300, 21236, 8687, 29319, 7258, 13771, 19905, 1764, 63585, 63936, 4429, 38024, 44231, 65460, 44843, 24230, 74655, 55272, 66600, 9125, 17922, 71955, 52184, 65461, 13163, 68267, 64010, 22521, 39385, 29452, 23415, 15793, 68316, 21729, 43253, 42377, 40119, 66598, 19260, 72988, 2183, 65082, 60635, 75238, 13032, 55589, 23754, 56949, 44229, 9032, 54065, 60228, 1224, 44737, 55337, 10269, 6246, 23268, 19418, 62970, 55508, 34683, 4578, 42231, 42493, 23609, 56689, 26114, 3084, 9135, 60962, 53658, 60439, 53741, 26162, 54758, 34309, 73660, 55573, 41750, 10991, 44282, 56750, 72127, 39909, 60169, 53363, 53663, 36453, 60670, 60697, 34612, 35006, 69238, 1769, 22808, 24390, 75446, 64939, 37446, 3603, 71445, 18394, 19015, 35083, 16610, 13911, 56659, 49665, 65122, 55311, 55511, 72321, 16012, 55882, 56677, 53768, 23352, 10787, 72896, 41614, 75812, 65056, 59086, 15904, 23229, 1211, 18265, 39103, 36150, 22283, 3024, 68697, 33234, 62748, 36495, 63410, 73026, 10785, 9087, 20458, 21162, 18899, 73873, 20414, 76492, 52264, 47545, 23486, 19401, 40252, 67253, 66722, 10727, 68829, 28148, 1774, 68471, 72223, 22566, 59404, 7221, 63861, 68299, 42953, 39045, 1390, 3218, 47546, 8723, 76236, 55726, 22962, 29347, 22326, 65471, 63408, 76421, 49808, 36688, 18391, 75777, 10632, 41815, 1106, 10073, 65498, 36383, 9891, 53403, 18408, 68264, 28249, 65005, 54778, 1527, 64397, 10648, 66605, 10859, 22320, 52582, 47539, 45228, 55651, 1507, 36428, 29344, 66177, 67159, 33245, 33208, 52560, 10846, 49791, 44906, 64065, 66340, 43282, 2949, 44143, 24384, 22649, 28328, 59083, 75324, 62809, 20202, 66615, 39934, 34143, 64395, 20213, 43162, 44845, 43569, 28601, 3167, 19002, 49587, 74863, 18055, 2835, 37803, 71441, 66804, 49461, 39252, 41788, 53577, 39859, 18498, 41914, 52187, 52571, 29373, 68746, 47753, 65723, 23360, 19405, 13842, 65133, 7408, 73075, 42978, 71549, 68193, 56362, 8297, 74488, 3474, 43473, 39308, 19375, 23472, 18122, 19477, 1823, 56567, 10491, 34961, 18569, 22760, 74778, 13311, 63823, 1152, 47057, 64969, 24402, 75814, 65610, 2019, 60500, 20225, 34736, 46625, 23222, 49087, 58427, 22335, 29213, 1376, 58365, 1418, 16487, 27869, 15952, 15707, 41868, 56877, 41920, 19365, 16691, 32441, 76489, 41582, 39217, 42051, 73446, 56288, 74973, 47254, 42176, 6079, 75669, 3534, 52353, 75084, 65407, 39179, 56678, 19013, 31984, 55049, 66769, 25822, 16541, 27946, 23539, 43455, 912, 63149, 4487, 56798, 19463, 17807, 45016, 52272, 22902, 10565, 31873, 26243, 58405, 20157, 12846, 59417, 28520, 1702, 20016, 66546, 47517, 67177, 34127, 58869, 37465, 63562, 945, 1535, 64367, 36416, 17955, 27856, 13801, 65440, 26165, 45078, 1413, 13164, 42018, 55746, 46790, 23144, 10754, 52580, 41125, 20139, 66996, 74357, 1895, 10697, 9646, 4427, 74686, 71692, 34769, 52382, 21171, 18107, 26063, 33235, 63246, 3369, 16573, 18459, 40033, 28381, 58479, 71256, 43454, 1884, 64190, 44200, 10640, 49609, 22976, 43543, 2373, 74303, 73432, 73579, 23799, 35160, 47085, 17856, 26712, 60658, 64732, 17925, 9580, 66686, 42020, 49632, 3450, 22190, 21145, 23290, 1435, 1258, 68749, 12234, 3132, 1676, 22942), '0.00', True, '1/2335/%', True, '1/2335/%', ('waiting', 'confirmed', 'partially_available', 'assigned'), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL))' with params: [(74724, 44817, 22882, 22235, 63278, 18893, 32120, 41201, 76162, 55518, 26639, 66532, 45073, 47222, 63684, 68779, 20085, 2324, 74103, 3175, 39528, 22955, 69392, 59357, 69313, 23820, 56565, 53824, 53410, 64060, 71596, 62219, 58379, 49551, 23790, 34678, 22738, 22604, 43163, 18434, 63247, 21254, 52114, 5797, 64095, 56359, 3597, 10932, 60286, 67055, 23480, 23745, 73275, 30433, 37884, 53442, 54839, 7448, 13298, 22518, 18102, 20278, 68446, 9093, 22276, 75518, 69207, 13157, 43260, 1703, 16509, 28370, 47454, 44902, 18172, 28055, 34583, 36081, 19400, 40897, 34850, 65851, 32158, 16488, 19637, 24307, 64970, 46770, 18302, 63319, 18042, 20089, 62947, 23318, 43519, 58437, 13327, 22989, 22792, 68944, 9913, 68731, 10558, 62217, 60034, 10757, 58429, 16035, 27912, 55279, 13417, 54537, 20975, 75344, 54132, 21720, 72356, 73320, 21144, 36763, 18456, 40157, 34909, 33067, 64389, 34588, 7374, 63481, 50084, 10508, 39583, 39861, 2875, 13840, 39141, 65051, 69075, 11545, 55694, 55574, 21121, 18030, 65114, 49745, 12079, 2935, 64835, 21147, 23751, 53270, 13160, 72346, 52389, 39340, 63755, 26291, 47408, 56810, 53370, 52595, 52499, 65161, 40902, 47965, 58921, 62974, 23355, 13322, 26580, 23499, 35194, 29758, 15129, 12393, 27944, 59002, 64711, 8774, 29417, 9586, 35296, 53264, 15894, 42197, 5902, 68230, 38991, 5322, 20423, 22783, 2890, 53463, 13898, 1746, 52677, 40293, 64773, 67196, 75388, 66366, 63052, 49627, 47361, 65789, 71752, 33199, 16672, 33084, 56380, 13852, 75449, 41917, 47713, 39366, 26193, 52475, 49566, 15930, 66631, 39078, 73444, 64233, 63772, 5819, 29560, 74002, 13763, 9061, 1090, 60307, 37882, 76275, 68892, 74517, 45184, 47476, 18604, 18949, 18279, 58275, 21077, 29701, 39209, 14739, 22415, 19281, 62902, 17855, 49762, 56402, 35290, 36430, 15847, 21257, 43927, 8285, 55625, 26182, 23203, 4594, 56923, 47191, 9137, 24138, 37396, 58301, 3642, 28220, 43285, 21752, 72595, 72766, 43714, 75676, 19966, 20079, 12503, 29456, 23726, 63974, 63911, 64379, 12428, 12173, 20952, 1242, 65748, 34417, 18692, 41999, 1849, 49562, 68745, 66415, 29540, 53505, 3162, 11111, 36057, 20087, 56947, 68273, 28027, 28067, 47840, 71884, 63430, 55798, 19493, 10742, 54731, 22581, 42347, 62345, 65558, 74092, 34894, 3284, 19032, 3425, 16680, 17811, 53915, 66500, 60263, 63462, 45215, 3372, 52655, 11160, 34804, 36476, 12287, 19346, 10967, 3785, 26234, 4324, 12308, 10810, 39413, 64375, 18532, 73936, 45034, 1477, 65649, 45070, 43563, 18793, 52934, 23091, 22221, 58354, 42302, 26575, 15744, 52557, 22550, 23237, 55472, 60579, 43226, 60053, 28061, 2211, 69218, 66352, 9798, 63163, 26205, 69147, 8747, 39344, 22625, 63951, 23354, 10467, 64873, 52634, 15624, 29386, 55516, 35377, 75480, 37584, 3182, 58321, 15883, 3405, 60249, 53569, 42106, 13722, 64673, 20300, 13611, 3514, 64944, 11648, 20299, 74739, 63680, 67357, 10663, 35396, 75477, 34935, 23384, 12194, 36308, 4527, 72526, 71650, 71775, 5402, 63109, 11728, 13668, 73917, 32049, 47473, 8642, 1516, 49062, 34624, 71308, 40180, 73428, 63606, 31577, 53110, 10637, 2058, 73941, 38252, 20399, 65678, 1442, 47838, 35105, 5397, 43203, 28116, 72398, 59342, 64757, 74247, 23294, 13255, 23238, 72499, 19256, 46634, 37343, 47190, 1706, 62725, 65653, 53034, 53664, 22728, 65277, 66446, 55615, 15951, 73546, 49033, 75803, 4506, 36054, 19854, 72543, 37507, 71398, 40189, 65410, 39166, 13234, 2229, 27964, 68242, 37763, 16846, 49041, 59033, 52477, 74932, 19799, 26597, 22374, 58400, 37335, 52362, 11162, 61063, 22501, 62936, 18696, 66785, 40172, 3199, 27943, 2340, 72549, 34592, 42950, 24137, 10783, 63382, 21591, 17756, 929, 12245, 31601, 53424, 36159, 34660, 23493, 52447, 65426, 23114, 44129, 53331, 71694, 13207, 74682, 28659, 18976, 43732, 10975, 65631, 62755, 58940, 17786, 38951, 41941, 18874, 35019, 1445, 42160, 27837, 1220, 63295, 64059, 39751, 3599, 29375, 11173, 32018, 10753, 55544, 73663, 5903, 4693, 13267, 65575, 53435, 22781, 34867, 2228, 28071, 75629, 1879, 42509, 6147, 18636, 71281, 65692, 75008, 19320, 35069, 36184, 65394, 43407, 12300, 21236, 8687, 29319, 7258, 13771, 19905, 1764, 63585, 63936, 4429, 38024, 44231, 65460, 44843, 24230, 74655, 55272, 66600, 9125, 17922, 71955, 52184, 65461, 13163, 68267, 64010, 22521, 39385, 29452, 23415, 15793, 68316, 21729, 43253, 42377, 40119, 66598, 19260, 72988, 2183, 65082, 60635, 75238, 13032, 55589, 23754, 56949, 44229, 9032, 54065, 60228, 1224, 44737, 55337, 10269, 6246, 23268, 19418, 62970, 55508, 34683, 4578, 42231, 42493, 23609, 56689, 26114, 3084, 9135, 60962, 53658, 60439, 53741, 26162, 54758, 34309, 73660, 55573, 41750, 10991, 44282, 56750, 72127, 39909, 60169, 53363, 53663, 36453, 60670, 60697, 34612, 35006, 69238, 1769, 22808, 24390, 75446, 64939, 37446, 3603, 71445, 18394, 19015, 35083, 16610, 13911, 56659, 49665, 65122, 55311, 55511, 72321, 16012, 55882, 56677, 53768, 23352, 10787, 72896, 41614, 75812, 65056, 59086, 15904, 23229, 1211, 18265, 39103, 36150, 22283, 3024, 68697, 33234, 62748, 36495, 63410, 73026, 10785, 9087, 20458, 21162, 18899, 73873, 20414, 76492, 52264, 47545, 23486, 19401, 40252, 67253, 66722, 10727, 68829, 28148, 1774, 68471, 72223, 22566, 59404, 7221, 63861, 68299, 42953, 39045, 1390, 3218, 47546, 8723, 76236, 55726, 22962, 29347, 22326, 65471, 63408, 76421, 49808, 36688, 18391, 75777, 10632, 41815, 1106, 10073, 65498, 36383, 9891, 53403, 18408, 68264, 28249, 65005, 54778, 1527, 64397, 10648, 66605, 10859, 22320, 52582, 47539, 45228, 55651, 1507, 36428, 29344, 66177, 67159, 33245, 33208, 52560, 10846, 49791, 44906, 64065, 66340, 43282, 2949, 44143, 24384, 22649, 28328, 59083, 75324, 62809, 20202, 66615, 39934, 34143, 64395, 20213, 43162, 44845, 43569, 28601, 3167, 19002, 49587, 74863, 18055, 2835, 37803, 71441, 66804, 49461, 39252, 41788, 53577, 39859, 18498, 41914, 52187, 52571, 29373, 68746, 47753, 65723, 23360, 19405, 13842, 65133, 7408, 73075, 42978, 71549, 68193, 56362, 8297, 74488, 3474, 43473, 39308, 19375, 23472, 18122, 19477, 1823, 56567, 10491, 34961, 18569, 22760, 74778, 13311, 63823, 1152, 47057, 64969, 24402, 75814, 65610, 2019, 60500, 20225, 34736, 46625, 23222, 49087, 58427, 22335, 29213, 1376, 58365, 1418, 16487, 27869, 15952, 15707, 41868, 56877, 41920, 19365, 16691, 32441, 76489, 41582, 39217, 42051, 73446, 56288, 74973, 47254, 42176, 6079, 75669, 3534, 52353, 75084, 65407, 39179, 56678, 19013, 31984, 55049, 66769, 25822, 16541, 27946, 23539, 43455, 912, 63149, 4487, 56798, 19463, 17807, 45016, 52272, 22902, 10565, 31873, 26243, 58405, 20157, 12846, 59417, 28520, 1702, 20016, 66546, 47517, 67177, 34127, 58869, 37465, 63562, 945, 1535, 64367, 36416, 17955, 27856, 13801, 65440, 26165, 45078, 1413, 13164, 42018, 55746, 46790, 23144, 10754, 52580, 41125, 20139, 66996, 74357, 1895, 10697, 9646, 4427, 74686, 71692, 34769, 52382, 21171, 18107, 26063, 33235, 63246, 3369, 16573, 18459, 40033, 28381, 58479, 71256, 43454, 1884, 64190, 44200, 10640, 49609, 22976, 43543, 2373, 74303, 73432, 73579, 23799, 35160, 47085, 17856, 26712, 60658, 64732, 17925, 9580, 66686, 42020, 49632, 3450, 22190, 21145, 23290, 1435, 1258, 68749, 12234, 3132, 1676, 22942), '0.00', True, '1/2335/%', True, '1/2335/%', ('waiting', 'confirmed', 'partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL))' with params: [(53573, 15855, 65550, 60267, 22322, 10743, 65589, 26153, 3456, 55898, 43144, 53460, 21156, 37138), '0.00', True, '1/2327/%', True, '1/2327/%', ('waiting', 'confirmed', 'partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL)) AND ("stock_move"."state" in %s))' with params: [(53573, 15855, 65550, 60267, 22322, 10743, 65589, 26153, 3456, 55898, 43144, 53460, 21156, 37138), '0.00', True, '1/2327/%', True, '1/2327/%', ('waiting', 'confirmed', 'partially_available', 'assigned'), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL))' with params: [(53573, 15855, 65550, 60267, 22322, 10743, 65589, 26153, 3456, 55898, 43144, 53460, 21156, 37138), '0.00', True, '1/2327/%', True, '1/2327/%', ('waiting', 'confirmed', 'partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL))' with params: [(53573, 15855, 65550, 60267, 22322, 10743, 65589, 26153, 3456, 55898, 43144, 53460, 21156, 37138), '0.00', True, '1/2327/%', True, '1/2327/%', ('waiting', 'confirmed', 'partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL)) AND ("stock_move"."state" in %s))' with params: [(53573, 15855, 65550, 60267, 22322, 10743, 65589, 26153, 3456, 55898, 43144, 53460, 21156, 37138), '0.00', True, '1/2327/%', True, '1/2327/%', ('waiting', 'confirmed', 'partially_available', 'assigned'), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL))' with params: [(53573, 15855, 65550, 60267, 22322, 10743, 65589, 26153, 3456, 55898, 43144, 53460, 21156, 37138), '0.00', True, '1/2327/%', True, '1/2327/%', ('waiting', 'confirmed', 'partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL))' with params: [(53573, 15855, 65550, 60267, 22322, 10743, 65589, 26153, 3456, 55898, 43144, 53460, 21156, 37138), '0.00', True, '1/2327/%', True, '1/2327/%', ('waiting', 'confirmed', 'partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL)) AND ("stock_move"."state" in %s))' with params: [(53573, 15855, 65550, 60267, 22322, 10743, 65589, 26153, 3456, 55898, 43144, 53460, 21156, 37138), '0.00', True, '1/2327/%', True, '1/2327/%', ('waiting', 'confirmed', 'partially_available', 'assigned'), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL))' with params: [(53573, 15855, 65550, 60267, 22322, 10743, 65589, 26153, 3456, 55898, 43144, 53460, 21156, 37138), '0.00', True, '1/2327/%', True, '1/2327/%', ('waiting', 'confirmed', 'partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL))' with params: [(53573, 15855, 65550, 60267, 22322, 10743, 65589, 26153, 3456, 55898, 43144, 53460, 21156, 37138), '0.00', True, '1/2327/%', True, '1/2327/%', ('waiting', 'confirmed', 'partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL)) AND ("stock_move"."state" in %s))' with params: [(53573, 15855, 65550, 60267, 22322, 10743, 65589, 26153, 3456, 55898, 43144, 53460, 21156, 37138), '0.00', True, '1/2327/%', True, '1/2327/%', ('waiting', 'confirmed', 'partially_available', 'assigned'), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL))' with params: [(53573, 15855, 65550, 60267, 22322, 10743, 65589, 26153, 3456, 55898, 43144, 53460, 21156, 37138), '0.00', True, '1/2327/%', True, '1/2327/%', ('waiting', 'confirmed', 'partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL))' with params: [(74774, 76139, 76126, 75255, 72687, 72647, 72314, 72513, 74921, 76494, 74288, 75852, 73391, 76075, 73351, 73449, 74994), '0.00', True, '1/2495/%', True, '1/2495/%', ('waiting', 'confirmed', 'partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL)) AND ("stock_move"."state" in %s))' with params: [(74774, 76139, 76126, 75255, 72687, 72647, 72314, 72513, 74921, 76494, 74288, 75852, 73391, 76075, 73351, 73449, 74994), '0.00', True, '1/2495/%', True, '1/2495/%', ('waiting', 'confirmed', 'partially_available', 'assigned'), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL))' with params: [(74774, 76139, 76126, 75255, 72687, 72647, 72314, 72513, 74921, 76494, 74288, 75852, 73391, 76075, 73351, 73449, 74994), '0.00', True, '1/2495/%', True, '1/2495/%', ('waiting', 'confirmed', 'partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL))' with params: [(75760, 74277, 73930, 72780, 72887, 73359), '0.00', True, '1/2415/%', True, '1/2415/%', ('waiting', 'confirmed', 'partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL)) AND ("stock_move"."state" in %s))' with params: [(75760, 74277, 73930, 72780, 72887, 73359), '0.00', True, '1/2415/%', True, '1/2415/%', ('waiting', 'confirmed', 'partially_available', 'assigned'), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL))' with params: [(75760, 74277, 73930, 72780, 72887, 73359), '0.00', True, '1/2415/%', True, '1/2415/%', ('waiting', 'confirmed', 'partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL))' with params: [(75008, 72789), '0.00', True, '1/2503/%', True, '1/2503/%', ('waiting', 'confirmed', 'partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL)) AND ("stock_move"."state" in %s))' with params: [(75008, 72789), '0.00', True, '1/2503/%', True, '1/2503/%', ('waiting', 'confirmed', 'partially_available', 'assigned'), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL))' with params: [(75008, 72789), '0.00', True, '1/2503/%', True, '1/2503/%', ('waiting', 'confirmed', 'partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL))' with params: [(75997, 76396, 75700, 71707, 71535, 75723, 72558, 75535, 75565, 75366, 72929, 71509, 72212, 73441, 75726, 75895, 75972, 72242, 75349), '0.00', True, '1/2431/%', True, '1/2431/%', ('waiting', 'confirmed', 'partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL)) AND ("stock_move"."state" in %s))' with params: [(75997, 76396, 75700, 71707, 71535, 75723, 72558, 75535, 75565, 75366, 72929, 71509, 72212, 73441, 75726, 75895, 75972, 72242, 75349), '0.00', True, '1/2431/%', True, '1/2431/%', ('waiting', 'confirmed', 'partially_available', 'assigned'), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL))' with params: [(75997, 76396, 75700, 71707, 71535, 75723, 72558, 75535, 75565, 75366, 72929, 71509, 72212, 73441, 75726, 75895, 75972, 72242, 75349), '0.00', True, '1/2431/%', True, '1/2431/%', ('waiting', 'confirmed', 'partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL))' with params: [(74029, 71755, 73678, 72017, 75967, 75151, 72969, 74976, 73968, 72393), '0.00', True, '1/2479/%', True, '1/2479/%', ('waiting', 'confirmed', 'partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL)) AND ("stock_move"."state" in %s))' with params: [(74029, 71755, 73678, 72017, 75967, 75151, 72969, 74976, 73968, 72393), '0.00', True, '1/2479/%', True, '1/2479/%', ('waiting', 'confirmed', 'partially_available', 'assigned'), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL))' with params: [(74029, 71755, 73678, 72017, 75967, 75151, 72969, 74976, 73968, 72393), '0.00', True, '1/2479/%', True, '1/2479/%', ('waiting', 'confirmed', 'partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL))' with params: [(16, 31), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL)) AND ("stock_move"."state" in %s))' with params: [(16, 31), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned'), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL))' with params: [(16, 31), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL))' with params: [(22208, 13403, 21501, 26054, 62259, 64085, 30488, 7430, 3096, 64535, 7330, 47168, 24401, 20129, 66897, 47584, 23468, 72972, 65115, 71347, 39064, 45150, 69271, 55724, 63406, 18121, 39906, 23188, 56769, 63714, 21771, 11328, 34619, 16677, 15714, 52566, 65110, 3497, 20894, 61062, 55790, 7326, 1167, 47093, 26099, 60159, 33139, 1064, 53397, 52443, 41904, 63465, 18017, 62767, 26180, 10781, 63310, 73409, 54851, 73761, 13254, 76367, 52964, 20235, 21174, 49036, 11661, 10985, 76457, 63122, 38998, 1225, 21209, 49891, 34645, 47976, 44823, 18022, 39477, 46830, 36473, 65851, 29526, 39394, 30470, 55909, 47560, 60550, 40773, 1284, 75984, 22841, 36170, 42947, 63769, 4591, 1835, 33210, 22904, 16801, 68167, 23284, 23587, 23425, 43362, 1646, 34986, 40311, 20125, 47864, 69423, 32067, 15831, 40289, 43080, 63539, 66164, 39913, 5284, 44853, 29356, 6146, 42364, 66779, 9135, 52497, 37945, 55865, 47176, 42344, 46826, 39656, 65448, 28494, 15704, 37479, 63652, 12364, 22484, 60256, 2177, 9894, 35218, 62794, 16706, 22299, 65175, 75787, 73632, 34749, 44202, 42282, 22572, 895, 64848, 34673, 7451, 19348, 56765, 71448, 52459, 37674, 73579, 11460, 22744, 23416, 3530, 23684, 42331, 11307, 60963, 56317, 1572, 69320, 71261, 64827, 21156, 35455, 63252, 53544, 22047, 52511, 52307, 19979, 13388, 51857, 21857, 25354, 10893, 19594, 55333, 5811, 1941, 12847, 69232, 52400, 20930, 66316, 74611, 72967, 53817, 23449, 72727, 59362, 48921, 21858, 69290, 74487, 75727, 19275, 45240, 52586, 9094, 71767, 65710, 21193, 63339, 18837, 53631, 3065, 47442, 41840, 75286, 22996, 5792, 72190, 35170, 35382, 23805, 9056, 16629, 63837, 74739, 75920, 19921, 48991, 18636, 13862, 2346, 75791, 56813, 16039, 43805, 53279, 63550, 21270, 28163, 60236, 62716, 21076, 10070, 22735, 37298, 56398, 43027, 39872, 65233, 19012, 71511, 7377, 20092, 56366, 3331, 21201, 16489, 33374, 21055, 22871, 828, 63870, 20962, 52192, 68767, 18076, 53626, 32031, 72576, 13354, 55890, 59330, 20469, 69011, 58321, 41799, 1497, 35311, 42485, 13678, 23111, 66163, 56548, 18895, 26082, 65838, 47227, 56587, 60815, 12122, 56477, 7439, 65330, 35433, 41800, 17781, 13568, 28384, 67413, 56810, 63162, 12901, 42976, 2189, 34671, 23224, 25314, 39411, 45153, 66889, 23157, 49709, 10898, 2217, 5887, 27950, 10583, 21755, 74667, 25345, 27786, 49636, 73278, 72598, 36419, 19332, 28285, 63601, 23048, 47877, 44299, 15407, 68979, 52599, 71669, 2207, 44854, 76327, 953, 20922, 62826, 7446, 28164, 2455, 3024, 37141, 60378, 54679, 56851, 60079, 56278, 43054, 52248, 63210, 62237, 20138, 56322, 26169, 19897, 54879, 13838, 2873, 19068, 71842, 13536, 37159, 16735, 19515, 18451, 64531, 19904, 37586, 920, 17705, 26556, 66385, 18679, 41953, 3551, 9892, 20964, 4414, 2966, 22526, 22982, 3324, 74631, 65594, 63170, 49966, 55551, 54771, 63562, 61069, 35101, 1389, 60620, 26004, 28343, 65595, 34293, 11179, 49662, 3791, 44304, 74919, 39841, 63690, 18422, 32462, 37864, 22544, 59390, 42166, 75831, 74460, 22332, 15707, 15850, 24337, 41853, 39605, 22799, 4252, 3523, 4392, 72550, 18898, 74733, 59337, 49961, 10816, 36741, 55851, 48961, 64097, 19380, 76082, 28086, 49799, 10809, 19647, 20294, 2157, 22110, 55406, 44944, 66075, 22087, 52625, 47218, 60434, 63738, 24416, 65093, 43436, 22595, 18792, 22149, 46849, 28374, 29579, 67299, 23572, 16719, 63650, 37316, 60230, 5874, 53906, 68950, 33270, 29508, 56291, 53762, 1084, 66094, 53494, 64206, 10579, 29771, 3484, 64195, 32364, 75379, 1981, 39870, 17775, 66629, 68495, 48957, 49807, 75526, 40776, 23380, 36738, 53359, 19578, 35791, 20127, 13533, 63148, 74686, 34372, 18536, 55284, 76218, 32082, 25991, 46758, 73402, 53381, 74977, 18271, 855, 60799, 10493, 65625, 3385, 41598, 34156, 34119, 27441, 9664, 4301, 73389, 7347, 43801, 76391, 62790, 28173, 21267, 49601, 30452, 61051, 53301, 40091, 64541, 13830, 1801, 62713, 35229, 53551, 32027, 22067, 75612, 53743, 66319, 69040, 49790, 32170, 65976, 2901, 34724, 42186, 65151, 26150, 66405, 15894, 55841, 74077, 55634, 64766, 18383, 66985, 47915, 23658, 13711, 23176, 63966, 68729, 64372, 28529, 32452, 69195, 1416, 39017, 32075, 35087, 19383, 65424, 2846, 23609, 2248, 36809, 1598, 16499, 11141, 13088, 43414, 43736, 48987, 29440, 17974, 49748, 40280, 47984, 12967, 4449, 11305, 3495, 21208, 62730, 36465, 23780, 5351, 5280, 20101, 18280, 26116, 47939, 46791, 5906, 26030, 40079, 64720, 16715, 55749, 49620, 17893, 74381, 23585, 22372, 18348, 63807, 31600, 39842, 13393, 43191, 31911, 66718, 2334, 47187, 69233, 64756, 65828, 72408, 66364, 52271, 20949, 34969, 36484, 73742, 69114, 60462, 60578, 66136, 72157, 5359, 8294, 22797, 65836, 13466, 35000, 53933, 53297, 1667, 35447, 75567, 76386, 47228, 60403, 18888, 53923, 75914, 72626, 24351, 71318, 28574, 35349, 49089, 68520, 18736, 1722, 49707, 66574, 15211, 36763, 43735, 54494, 72782, 15914, 39645, 64216, 73798, 40771, 68795, 64364, 36044, 65296, 2206, 53835, 12279, 22822, 68749, 35173, 10612, 17772, 16814, 68710, 19418, 56666, 15844, 41841, 35003, 68447, 20371, 13391, 58431, 39148, 9577, 55304, 39359, 44954, 9799, 65840, 71380, 28366, 2108, 18373, 35393, 17753, 56604, 23127, 53984, 37608, 47393, 39452, 7429, 19030, 67197, 54858, 1381, 27897, 31962, 68721, 52176, 2889, 42986, 43537, 26216, 71528, 38032, 37312, 66428, 71691, 23467, 10941, 64946, 39003, 3178, 13174, 52305, 69277, 22301, 42397, 5868, 16710, 4700, 26543, 68709, 28314, 43583, 5885, 39767, 60179, 19455, 13164, 51851, 12287, 35164, 9126, 63759, 71875, 65321, 23337, 1286, 28187, 60402, 56409, 36050, 63614, 39084, 71678, 20227, 7283, 66523, 12836, 19532, 47923, 13741, 18374, 65626, 19075, 43138, 12603, 44930, 32962, 43182, 55384, 18961, 56729, 74165, 66667, 71992, 75108, 23260, 19946, 41846, 43569, 36228, 62847, 37542, 64810, 56475, 12227, 58178, 19438, 18041, 1173, 43482, 32127, 43750, 46828, 23649, 53576, 4271, 60647, 58454, 55708, 3535, 32096, 71695, 34919, 8733, 39352, 59096, 67345, 47502, 63171, 3492, 47036, 75328, 27975, 1500, 62215, 53401, 60338, 19882, 59347, 36070, 36211, 65195, 952, 39888, 55359, 76446, 42448, 43678, 42350, 73391, 52546, 2897, 37872, 39147, 69375, 35430, 13205, 65221, 36662, 35376, 39333, 49558, 65085, 1962, 39234, 19951, 53432, 12420, 36219, 34898, 69321, 66443, 37455, 26278, 2122, 16589, 24328, 22271, 66063, 21183, 2357, 21751, 22198, 43118, 36343, 63173, 36309, 22601, 43825, 22552, 34868, 50086, 39883, 34711, 42999, 72913, 15793, 55560, 36811, 22762, 35069, 55529, 55751, 22787, 74411, 19729, 21749, 18560, 20179, 26007, 54877, 46810, 56883, 43604, 41790, 10529, 10842, 21296, 53313, 28035, 17951, 28185, 15956, 39112, 74966, 28140, 15769, 69224, 2339, 47174, 56268, 76462, 33371, 17935, 3317, 18163, 44925, 66848, 13220, 17777, 54732, 35171, 12167, 64270, 23211, 40735, 73046, 2394, 43121, 68491, 13569, 22516, 19044, 54029, 75736, 44950, 3401, 20393, 43235, 15665, 13323, 13963, 12123, 18249, 63910, 49647, 35317, 1967, 45209, 36318, 49855, 75377, 16566, 58452, 55492, 18634, 6157, 21151, 2092, 20364, 44325, 25250, 16845, 63620, 34326, 61035, 65570, 19090, 22794, 62831, 43547, 53398, 47861, 28481, 41117, 76208, 63479, 1504, 55637, 41796, 60556, 72672, 15719, 23774, 39880, 52998, 69041, 43101, 34114, 22337, 1990, 11120, 65246, 37690, 43226, 64497, 34650, 62364, 35111, 10779, 52488, 39781, 18033, 63120, 20402, 13665, 18226, 2067, 20454, 35300, 55871, 53017, 40911, 55268, 68328, 13151, 34796, 54128, 34841, 43155, 60030, 16553, 54476, 56659, 20953, 41877, 65363, 19668, 35146, 18019, 73864, 29703, 39457, 6186, 23560, 18370, 2261, 10851, 63755, 62902, 23612, 26175, 38954, 1902, 28484, 75647, 34320, 28572, 47085, 15226, 63397, 65530, 60626, 53949, 37830, 7260, 47999, 68741, 75825, 7268, 12163, 69261, 69130, 58944, 72309, 28360, 44080, 52609, 3490, 43190, 39582, 29384, 16524, 34755, 21197, 75824), '0.00', True, '1/2327/%', True, '1/2327/%', ('waiting', 'confirmed', 'partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL)) AND ("stock_move"."state" in %s))' with params: [(22208, 13403, 21501, 26054, 62259, 64085, 30488, 7430, 3096, 64535, 7330, 47168, 24401, 20129, 66897, 47584, 23468, 72972, 65115, 71347, 39064, 45150, 69271, 55724, 63406, 18121, 39906, 23188, 56769, 63714, 21771, 11328, 34619, 16677, 15714, 52566, 65110, 3497, 20894, 61062, 55790, 7326, 1167, 47093, 26099, 60159, 33139, 1064, 53397, 52443, 41904, 63465, 18017, 62767, 26180, 10781, 63310, 73409, 54851, 73761, 13254, 76367, 52964, 20235, 21174, 49036, 11661, 10985, 76457, 63122, 38998, 1225, 21209, 49891, 34645, 47976, 44823, 18022, 39477, 46830, 36473, 65851, 29526, 39394, 30470, 55909, 47560, 60550, 40773, 1284, 75984, 22841, 36170, 42947, 63769, 4591, 1835, 33210, 22904, 16801, 68167, 23284, 23587, 23425, 43362, 1646, 34986, 40311, 20125, 47864, 69423, 32067, 15831, 40289, 43080, 63539, 66164, 39913, 5284, 44853, 29356, 6146, 42364, 66779, 9135, 52497, 37945, 55865, 47176, 42344, 46826, 39656, 65448, 28494, 15704, 37479, 63652, 12364, 22484, 60256, 2177, 9894, 35218, 62794, 16706, 22299, 65175, 75787, 73632, 34749, 44202, 42282, 22572, 895, 64848, 34673, 7451, 19348, 56765, 71448, 52459, 37674, 73579, 11460, 22744, 23416, 3530, 23684, 42331, 11307, 60963, 56317, 1572, 69320, 71261, 64827, 21156, 35455, 63252, 53544, 22047, 52511, 52307, 19979, 13388, 51857, 21857, 25354, 10893, 19594, 55333, 5811, 1941, 12847, 69232, 52400, 20930, 66316, 74611, 72967, 53817, 23449, 72727, 59362, 48921, 21858, 69290, 74487, 75727, 19275, 45240, 52586, 9094, 71767, 65710, 21193, 63339, 18837, 53631, 3065, 47442, 41840, 75286, 22996, 5792, 72190, 35170, 35382, 23805, 9056, 16629, 63837, 74739, 75920, 19921, 48991, 18636, 13862, 2346, 75791, 56813, 16039, 43805, 53279, 63550, 21270, 28163, 60236, 62716, 21076, 10070, 22735, 37298, 56398, 43027, 39872, 65233, 19012, 71511, 7377, 20092, 56366, 3331, 21201, 16489, 33374, 21055, 22871, 828, 63870, 20962, 52192, 68767, 18076, 53626, 32031, 72576, 13354, 55890, 59330, 20469, 69011, 58321, 41799, 1497, 35311, 42485, 13678, 23111, 66163, 56548, 18895, 26082, 65838, 47227, 56587, 60815, 12122, 56477, 7439, 65330, 35433, 41800, 17781, 13568, 28384, 67413, 56810, 63162, 12901, 42976, 2189, 34671, 23224, 25314, 39411, 45153, 66889, 23157, 49709, 10898, 2217, 5887, 27950, 10583, 21755, 74667, 25345, 27786, 49636, 73278, 72598, 36419, 19332, 28285, 63601, 23048, 47877, 44299, 15407, 68979, 52599, 71669, 2207, 44854, 76327, 953, 20922, 62826, 7446, 28164, 2455, 3024, 37141, 60378, 54679, 56851, 60079, 56278, 43054, 52248, 63210, 62237, 20138, 56322, 26169, 19897, 54879, 13838, 2873, 19068, 71842, 13536, 37159, 16735, 19515, 18451, 64531, 19904, 37586, 920, 17705, 26556, 66385, 18679, 41953, 3551, 9892, 20964, 4414, 2966, 22526, 22982, 3324, 74631, 65594, 63170, 49966, 55551, 54771, 63562, 61069, 35101, 1389, 60620, 26004, 28343, 65595, 34293, 11179, 49662, 3791, 44304, 74919, 39841, 63690, 18422, 32462, 37864, 22544, 59390, 42166, 75831, 74460, 22332, 15707, 15850, 24337, 41853, 39605, 22799, 4252, 3523, 4392, 72550, 18898, 74733, 59337, 49961, 10816, 36741, 55851, 48961, 64097, 19380, 76082, 28086, 49799, 10809, 19647, 20294, 2157, 22110, 55406, 44944, 66075, 22087, 52625, 47218, 60434, 63738, 24416, 65093, 43436, 22595, 18792, 22149, 46849, 28374, 29579, 67299, 23572, 16719, 63650, 37316, 60230, 5874, 53906, 68950, 33270, 29508, 56291, 53762, 1084, 66094, 53494, 64206, 10579, 29771, 3484, 64195, 32364, 75379, 1981, 39870, 17775, 66629, 68495, 48957, 49807, 75526, 40776, 23380, 36738, 53359, 19578, 35791, 20127, 13533, 63148, 74686, 34372, 18536, 55284, 76218, 32082, 25991, 46758, 73402, 53381, 74977, 18271, 855, 60799, 10493, 65625, 3385, 41598, 34156, 34119, 27441, 9664, 4301, 73389, 7347, 43801, 76391, 62790, 28173, 21267, 49601, 30452, 61051, 53301, 40091, 64541, 13830, 1801, 62713, 35229, 53551, 32027, 22067, 75612, 53743, 66319, 69040, 49790, 32170, 65976, 2901, 34724, 42186, 65151, 26150, 66405, 15894, 55841, 74077, 55634, 64766, 18383, 66985, 47915, 23658, 13711, 23176, 63966, 68729, 64372, 28529, 32452, 69195, 1416, 39017, 32075, 35087, 19383, 65424, 2846, 23609, 2248, 36809, 1598, 16499, 11141, 13088, 43414, 43736, 48987, 29440, 17974, 49748, 40280, 47984, 12967, 4449, 11305, 3495, 21208, 62730, 36465, 23780, 5351, 5280, 20101, 18280, 26116, 47939, 46791, 5906, 26030, 40079, 64720, 16715, 55749, 49620, 17893, 74381, 23585, 22372, 18348, 63807, 31600, 39842, 13393, 43191, 31911, 66718, 2334, 47187, 69233, 64756, 65828, 72408, 66364, 52271, 20949, 34969, 36484, 73742, 69114, 60462, 60578, 66136, 72157, 5359, 8294, 22797, 65836, 13466, 35000, 53933, 53297, 1667, 35447, 75567, 76386, 47228, 60403, 18888, 53923, 75914, 72626, 24351, 71318, 28574, 35349, 49089, 68520, 18736, 1722, 49707, 66574, 15211, 36763, 43735, 54494, 72782, 15914, 39645, 64216, 73798, 40771, 68795, 64364, 36044, 65296, 2206, 53835, 12279, 22822, 68749, 35173, 10612, 17772, 16814, 68710, 19418, 56666, 15844, 41841, 35003, 68447, 20371, 13391, 58431, 39148, 9577, 55304, 39359, 44954, 9799, 65840, 71380, 28366, 2108, 18373, 35393, 17753, 56604, 23127, 53984, 37608, 47393, 39452, 7429, 19030, 67197, 54858, 1381, 27897, 31962, 68721, 52176, 2889, 42986, 43537, 26216, 71528, 38032, 37312, 66428, 71691, 23467, 10941, 64946, 39003, 3178, 13174, 52305, 69277, 22301, 42397, 5868, 16710, 4700, 26543, 68709, 28314, 43583, 5885, 39767, 60179, 19455, 13164, 51851, 12287, 35164, 9126, 63759, 71875, 65321, 23337, 1286, 28187, 60402, 56409, 36050, 63614, 39084, 71678, 20227, 7283, 66523, 12836, 19532, 47923, 13741, 18374, 65626, 19075, 43138, 12603, 44930, 32962, 43182, 55384, 18961, 56729, 74165, 66667, 71992, 75108, 23260, 19946, 41846, 43569, 36228, 62847, 37542, 64810, 56475, 12227, 58178, 19438, 18041, 1173, 43482, 32127, 43750, 46828, 23649, 53576, 4271, 60647, 58454, 55708, 3535, 32096, 71695, 34919, 8733, 39352, 59096, 67345, 47502, 63171, 3492, 47036, 75328, 27975, 1500, 62215, 53401, 60338, 19882, 59347, 36070, 36211, 65195, 952, 39888, 55359, 76446, 42448, 43678, 42350, 73391, 52546, 2897, 37872, 39147, 69375, 35430, 13205, 65221, 36662, 35376, 39333, 49558, 65085, 1962, 39234, 19951, 53432, 12420, 36219, 34898, 69321, 66443, 37455, 26278, 2122, 16589, 24328, 22271, 66063, 21183, 2357, 21751, 22198, 43118, 36343, 63173, 36309, 22601, 43825, 22552, 34868, 50086, 39883, 34711, 42999, 72913, 15793, 55560, 36811, 22762, 35069, 55529, 55751, 22787, 74411, 19729, 21749, 18560, 20179, 26007, 54877, 46810, 56883, 43604, 41790, 10529, 10842, 21296, 53313, 28035, 17951, 28185, 15956, 39112, 74966, 28140, 15769, 69224, 2339, 47174, 56268, 76462, 33371, 17935, 3317, 18163, 44925, 66848, 13220, 17777, 54732, 35171, 12167, 64270, 23211, 40735, 73046, 2394, 43121, 68491, 13569, 22516, 19044, 54029, 75736, 44950, 3401, 20393, 43235, 15665, 13323, 13963, 12123, 18249, 63910, 49647, 35317, 1967, 45209, 36318, 49855, 75377, 16566, 58452, 55492, 18634, 6157, 21151, 2092, 20364, 44325, 25250, 16845, 63620, 34326, 61035, 65570, 19090, 22794, 62831, 43547, 53398, 47861, 28481, 41117, 76208, 63479, 1504, 55637, 41796, 60556, 72672, 15719, 23774, 39880, 52998, 69041, 43101, 34114, 22337, 1990, 11120, 65246, 37690, 43226, 64497, 34650, 62364, 35111, 10779, 52488, 39781, 18033, 63120, 20402, 13665, 18226, 2067, 20454, 35300, 55871, 53017, 40911, 55268, 68328, 13151, 34796, 54128, 34841, 43155, 60030, 16553, 54476, 56659, 20953, 41877, 65363, 19668, 35146, 18019, 73864, 29703, 39457, 6186, 23560, 18370, 2261, 10851, 63755, 62902, 23612, 26175, 38954, 1902, 28484, 75647, 34320, 28572, 47085, 15226, 63397, 65530, 60626, 53949, 37830, 7260, 47999, 68741, 75825, 7268, 12163, 69261, 69130, 58944, 72309, 28360, 44080, 52609, 3490, 43190, 39582, 29384, 16524, 34755, 21197, 75824), '0.00', True, '1/2327/%', True, '1/2327/%', ('waiting', 'confirmed', 'partially_available', 'assigned'), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL))' with params: [(22208, 13403, 21501, 26054, 62259, 64085, 30488, 7430, 3096, 64535, 7330, 47168, 24401, 20129, 66897, 47584, 23468, 72972, 65115, 71347, 39064, 45150, 69271, 55724, 63406, 18121, 39906, 23188, 56769, 63714, 21771, 11328, 34619, 16677, 15714, 52566, 65110, 3497, 20894, 61062, 55790, 7326, 1167, 47093, 26099, 60159, 33139, 1064, 53397, 52443, 41904, 63465, 18017, 62767, 26180, 10781, 63310, 73409, 54851, 73761, 13254, 76367, 52964, 20235, 21174, 49036, 11661, 10985, 76457, 63122, 38998, 1225, 21209, 49891, 34645, 47976, 44823, 18022, 39477, 46830, 36473, 65851, 29526, 39394, 30470, 55909, 47560, 60550, 40773, 1284, 75984, 22841, 36170, 42947, 63769, 4591, 1835, 33210, 22904, 16801, 68167, 23284, 23587, 23425, 43362, 1646, 34986, 40311, 20125, 47864, 69423, 32067, 15831, 40289, 43080, 63539, 66164, 39913, 5284, 44853, 29356, 6146, 42364, 66779, 9135, 52497, 37945, 55865, 47176, 42344, 46826, 39656, 65448, 28494, 15704, 37479, 63652, 12364, 22484, 60256, 2177, 9894, 35218, 62794, 16706, 22299, 65175, 75787, 73632, 34749, 44202, 42282, 22572, 895, 64848, 34673, 7451, 19348, 56765, 71448, 52459, 37674, 73579, 11460, 22744, 23416, 3530, 23684, 42331, 11307, 60963, 56317, 1572, 69320, 71261, 64827, 21156, 35455, 63252, 53544, 22047, 52511, 52307, 19979, 13388, 51857, 21857, 25354, 10893, 19594, 55333, 5811, 1941, 12847, 69232, 52400, 20930, 66316, 74611, 72967, 53817, 23449, 72727, 59362, 48921, 21858, 69290, 74487, 75727, 19275, 45240, 52586, 9094, 71767, 65710, 21193, 63339, 18837, 53631, 3065, 47442, 41840, 75286, 22996, 5792, 72190, 35170, 35382, 23805, 9056, 16629, 63837, 74739, 75920, 19921, 48991, 18636, 13862, 2346, 75791, 56813, 16039, 43805, 53279, 63550, 21270, 28163, 60236, 62716, 21076, 10070, 22735, 37298, 56398, 43027, 39872, 65233, 19012, 71511, 7377, 20092, 56366, 3331, 21201, 16489, 33374, 21055, 22871, 828, 63870, 20962, 52192, 68767, 18076, 53626, 32031, 72576, 13354, 55890, 59330, 20469, 69011, 58321, 41799, 1497, 35311, 42485, 13678, 23111, 66163, 56548, 18895, 26082, 65838, 47227, 56587, 60815, 12122, 56477, 7439, 65330, 35433, 41800, 17781, 13568, 28384, 67413, 56810, 63162, 12901, 42976, 2189, 34671, 23224, 25314, 39411, 45153, 66889, 23157, 49709, 10898, 2217, 5887, 27950, 10583, 21755, 74667, 25345, 27786, 49636, 73278, 72598, 36419, 19332, 28285, 63601, 23048, 47877, 44299, 15407, 68979, 52599, 71669, 2207, 44854, 76327, 953, 20922, 62826, 7446, 28164, 2455, 3024, 37141, 60378, 54679, 56851, 60079, 56278, 43054, 52248, 63210, 62237, 20138, 56322, 26169, 19897, 54879, 13838, 2873, 19068, 71842, 13536, 37159, 16735, 19515, 18451, 64531, 19904, 37586, 920, 17705, 26556, 66385, 18679, 41953, 3551, 9892, 20964, 4414, 2966, 22526, 22982, 3324, 74631, 65594, 63170, 49966, 55551, 54771, 63562, 61069, 35101, 1389, 60620, 26004, 28343, 65595, 34293, 11179, 49662, 3791, 44304, 74919, 39841, 63690, 18422, 32462, 37864, 22544, 59390, 42166, 75831, 74460, 22332, 15707, 15850, 24337, 41853, 39605, 22799, 4252, 3523, 4392, 72550, 18898, 74733, 59337, 49961, 10816, 36741, 55851, 48961, 64097, 19380, 76082, 28086, 49799, 10809, 19647, 20294, 2157, 22110, 55406, 44944, 66075, 22087, 52625, 47218, 60434, 63738, 24416, 65093, 43436, 22595, 18792, 22149, 46849, 28374, 29579, 67299, 23572, 16719, 63650, 37316, 60230, 5874, 53906, 68950, 33270, 29508, 56291, 53762, 1084, 66094, 53494, 64206, 10579, 29771, 3484, 64195, 32364, 75379, 1981, 39870, 17775, 66629, 68495, 48957, 49807, 75526, 40776, 23380, 36738, 53359, 19578, 35791, 20127, 13533, 63148, 74686, 34372, 18536, 55284, 76218, 32082, 25991, 46758, 73402, 53381, 74977, 18271, 855, 60799, 10493, 65625, 3385, 41598, 34156, 34119, 27441, 9664, 4301, 73389, 7347, 43801, 76391, 62790, 28173, 21267, 49601, 30452, 61051, 53301, 40091, 64541, 13830, 1801, 62713, 35229, 53551, 32027, 22067, 75612, 53743, 66319, 69040, 49790, 32170, 65976, 2901, 34724, 42186, 65151, 26150, 66405, 15894, 55841, 74077, 55634, 64766, 18383, 66985, 47915, 23658, 13711, 23176, 63966, 68729, 64372, 28529, 32452, 69195, 1416, 39017, 32075, 35087, 19383, 65424, 2846, 23609, 2248, 36809, 1598, 16499, 11141, 13088, 43414, 43736, 48987, 29440, 17974, 49748, 40280, 47984, 12967, 4449, 11305, 3495, 21208, 62730, 36465, 23780, 5351, 5280, 20101, 18280, 26116, 47939, 46791, 5906, 26030, 40079, 64720, 16715, 55749, 49620, 17893, 74381, 23585, 22372, 18348, 63807, 31600, 39842, 13393, 43191, 31911, 66718, 2334, 47187, 69233, 64756, 65828, 72408, 66364, 52271, 20949, 34969, 36484, 73742, 69114, 60462, 60578, 66136, 72157, 5359, 8294, 22797, 65836, 13466, 35000, 53933, 53297, 1667, 35447, 75567, 76386, 47228, 60403, 18888, 53923, 75914, 72626, 24351, 71318, 28574, 35349, 49089, 68520, 18736, 1722, 49707, 66574, 15211, 36763, 43735, 54494, 72782, 15914, 39645, 64216, 73798, 40771, 68795, 64364, 36044, 65296, 2206, 53835, 12279, 22822, 68749, 35173, 10612, 17772, 16814, 68710, 19418, 56666, 15844, 41841, 35003, 68447, 20371, 13391, 58431, 39148, 9577, 55304, 39359, 44954, 9799, 65840, 71380, 28366, 2108, 18373, 35393, 17753, 56604, 23127, 53984, 37608, 47393, 39452, 7429, 19030, 67197, 54858, 1381, 27897, 31962, 68721, 52176, 2889, 42986, 43537, 26216, 71528, 38032, 37312, 66428, 71691, 23467, 10941, 64946, 39003, 3178, 13174, 52305, 69277, 22301, 42397, 5868, 16710, 4700, 26543, 68709, 28314, 43583, 5885, 39767, 60179, 19455, 13164, 51851, 12287, 35164, 9126, 63759, 71875, 65321, 23337, 1286, 28187, 60402, 56409, 36050, 63614, 39084, 71678, 20227, 7283, 66523, 12836, 19532, 47923, 13741, 18374, 65626, 19075, 43138, 12603, 44930, 32962, 43182, 55384, 18961, 56729, 74165, 66667, 71992, 75108, 23260, 19946, 41846, 43569, 36228, 62847, 37542, 64810, 56475, 12227, 58178, 19438, 18041, 1173, 43482, 32127, 43750, 46828, 23649, 53576, 4271, 60647, 58454, 55708, 3535, 32096, 71695, 34919, 8733, 39352, 59096, 67345, 47502, 63171, 3492, 47036, 75328, 27975, 1500, 62215, 53401, 60338, 19882, 59347, 36070, 36211, 65195, 952, 39888, 55359, 76446, 42448, 43678, 42350, 73391, 52546, 2897, 37872, 39147, 69375, 35430, 13205, 65221, 36662, 35376, 39333, 49558, 65085, 1962, 39234, 19951, 53432, 12420, 36219, 34898, 69321, 66443, 37455, 26278, 2122, 16589, 24328, 22271, 66063, 21183, 2357, 21751, 22198, 43118, 36343, 63173, 36309, 22601, 43825, 22552, 34868, 50086, 39883, 34711, 42999, 72913, 15793, 55560, 36811, 22762, 35069, 55529, 55751, 22787, 74411, 19729, 21749, 18560, 20179, 26007, 54877, 46810, 56883, 43604, 41790, 10529, 10842, 21296, 53313, 28035, 17951, 28185, 15956, 39112, 74966, 28140, 15769, 69224, 2339, 47174, 56268, 76462, 33371, 17935, 3317, 18163, 44925, 66848, 13220, 17777, 54732, 35171, 12167, 64270, 23211, 40735, 73046, 2394, 43121, 68491, 13569, 22516, 19044, 54029, 75736, 44950, 3401, 20393, 43235, 15665, 13323, 13963, 12123, 18249, 63910, 49647, 35317, 1967, 45209, 36318, 49855, 75377, 16566, 58452, 55492, 18634, 6157, 21151, 2092, 20364, 44325, 25250, 16845, 63620, 34326, 61035, 65570, 19090, 22794, 62831, 43547, 53398, 47861, 28481, 41117, 76208, 63479, 1504, 55637, 41796, 60556, 72672, 15719, 23774, 39880, 52998, 69041, 43101, 34114, 22337, 1990, 11120, 65246, 37690, 43226, 64497, 34650, 62364, 35111, 10779, 52488, 39781, 18033, 63120, 20402, 13665, 18226, 2067, 20454, 35300, 55871, 53017, 40911, 55268, 68328, 13151, 34796, 54128, 34841, 43155, 60030, 16553, 54476, 56659, 20953, 41877, 65363, 19668, 35146, 18019, 73864, 29703, 39457, 6186, 23560, 18370, 2261, 10851, 63755, 62902, 23612, 26175, 38954, 1902, 28484, 75647, 34320, 28572, 47085, 15226, 63397, 65530, 60626, 53949, 37830, 7260, 47999, 68741, 75825, 7268, 12163, 69261, 69130, 58944, 72309, 28360, 44080, 52609, 3490, 43190, 39582, 29384, 16524, 34755, 21197, 75824), '0.00', True, '1/2327/%', True, '1/2327/%', ('waiting', 'confirmed', 'partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL))' with params: [(12843, 18843, 47764, 53001, 30440, 61044, 19834, 40279, 76252, 56875, 64349, 1948, 65839, 38498, 68785, 39411, 67005, 16666, 37657, 8771, 53769, 56664, 28355, 53839, 6099, 19645, 23628, 75750, 63263, 63558, 60626, 8792, 69087, 17993, 63821, 69001, 20070, 7321, 75370, 56849, 17603, 43859, 75924, 2221, 52179, 38962, 21153, 54024, 6227, 12242, 3382, 4575, 52982, 42275, 32181, 64109, 70396, 8672, 9636, 66421, 24383, 44742, 53555, 37624, 22854, 34155, 24425, 19578, 26052, 34974, 39220, 65507, 40131, 47898, 73009, 36309, 47841, 71372, 4564, 56480, 34945, 39926, 66072, 39665, 69176, 49001, 52079, 24249, 62266, 2375, 6079, 2090, 12115, 74131, 13497, 18952, 8799, 74126, 1877, 32066, 40117, 8695, 66556, 45211, 63146, 65164, 36131, 55548, 37352, 44228, 12220, 18472, 9138, 39576, 23087, 10630, 60357, 49579, 1934, 1838, 7313, 53412, 3788, 39845, 23760, 7344, 22532, 17955, 18266, 43099, 63764, 54485, 54116, 56312, 43208, 22617, 38946, 23818, 51883, 35008, 20203, 65408, 24157, 38248, 72586, 34847, 53994, 19029, 1071, 12880, 20083, 36212, 54446, 62903, 52195, 42322, 54085, 34591, 3216, 39015, 22179, 5910, 71861, 76015, 1717, 43371, 13871, 53525, 37384, 22207, 64233, 13788, 12391, 62792, 22183, 65295, 44233, 33156, 22160, 10478, 42099, 63006, 68752, 40033, 10838, 12241, 30485, 37921, 67374, 47468, 37267, 65495, 49626, 75636, 68318, 59145, 7441, 19493, 12591, 13901, 44973, 3499, 71701, 15828, 71831, 74121, 63914, 59413, 34678, 75288, 4461, 69378, 65208, 12967, 9661, 64243, 52313, 75871, 2276, 73097, 12299, 4543, 24243, 58427, 75510, 25970, 26129, 47042, 22064, 1606, 19414, 45152, 56620, 43121, 53462, 34882, 64785, 36369, 34748, 41767, 71943, 22266, 52142, 43529, 7406, 41587, 27954, 18419, 12213, 22347, 43464, 64068, 34613, 37563, 15851, 29245, 9664, 66169, 22442, 40185, 42462, 52934, 1745, 74357, 55414, 38965, 19298, 26522, 34794, 18958, 1454, 43572, 68331, 55757, 52393, 19542, 42978, 2180, 72272, 68497, 34773, 17872, 53574, 18072, 35297, 15125, 75514, 23301, 63141, 47546, 34679, 44917, 23669, 6175, 20279, 20204, 62212, 62942, 73990, 31590, 73817, 21859, 74238, 22518, 75063, 12332, 73866, 37902, 63777, 3074, 62302, 55609, 1886, 888, 56805, 53604, 72186, 35379, 54782, 66789, 19462, 43830, 13305, 39534, 20679, 43190, 38993, 7364, 19730, 34148, 52589, 75182, 35471, 43314, 23600, 76257, 43553, 55762, 45147, 18130, 20928, 3277, 3018, 39399, 22544, 2343, 35260, 73625, 69178, 43497, 3506, 23124, 63657, 22365, 47950, 54727, 43068, 35056, 20039, 37548, 1854, 62354, 13035, 36431, 26290, 53480, 65497, 39405, 18725, 6100, 13307, 72530, 58434, 43010, 75709, 1673, 22026, 63023, 20266, 3366, 44951, 3066, 2146, 5814, 68200, 7383, 72804, 66661, 18948, 66176, 29722, 55829, 53030, 35123, 13220, 20269, 48978, 66560, 41969, 56612, 48996, 23431, 63963, 13172, 15904, 42357, 47892, 8260, 8263, 60800, 63565, 43076, 23204, 75404, 63840, 43238, 37448, 49879, 6168, 63009, 39871, 33207, 32065, 43478, 16717, 5350, 4252, 7306, 65082, 60158, 71785, 29378, 75491, 76256, 23005, 39873, 64025, 71790, 71707, 13617, 43539, 59029, 33255, 36476, 18726, 35184, 23532, 33189, 15622, 37691, 47955, 52390, 16545, 22849, 22214, 69261, 38948, 65141, 13500, 19262, 3254, 21183, 65083, 2293, 4496, 32001, 28231, 38956, 60559, 7289, 74494, 12315, 36423, 16504, 55944, 56412, 41821, 58433, 63139, 52329, 72730, 56469, 34688, 32097, 54534, 63800, 39305, 9070, 23813, 47540, 55648, 35396, 54051, 47223, 30401, 72606, 47741, 12556, 47449, 56438, 63885, 15211, 52416, 39114, 68833, 16034, 52631, 9911, 53177, 2188, 36066, 6137, 15898, 43666, 2207, 49887, 41606, 12314, 23335, 47993, 1942, 43551, 3764, 21218, 13314, 44142, 12927, 60239, 62293, 22684, 59088, 16739, 39566, 43672, 37356, 60294, 2857, 47871, 8644, 39408, 64815, 13126, 69350, 76444, 17816, 74177, 65168, 46854, 27457, 1487, 42021, 2011, 64183, 28009, 47253, 19988, 3481, 54125, 2069, 56365, 9119, 24210, 50118, 49684, 75885, 72999, 12523, 55470, 37577, 34713, 56912, 49839, 30384, 22549, 37845, 53430, 72074, 23396, 18080, 3789, 40321, 47098, 59147, 52145, 31992, 13129, 18776, 20209, 1726, 63167, 22354, 63978, 68322, 51831, 32032, 39217, 29522, 75974, 22472, 49666, 63137, 60351, 19551, 53573, 53490, 44238, 23762, 4581, 13098, 55525, 71304, 24181, 5859, 10984, 15892, 74288, 39829, 34564, 58435, 21747, 49007, 18491, 47953, 60431, 59059, 13203, 35063, 52321, 18301, 37639, 68203, 4351, 22408, 39116, 52316, 44891, 71857, 43341, 56375, 39372, 56444, 12123, 66699, 75371, 40118, 18502, 67187, 16493, 18568, 34805, 47936, 26104, 46873, 12406, 47074, 49577, 46783, 3769, 66869, 1116, 47909, 28360, 13187, 31597, 18575, 3558, 74042, 60423, 39451, 49861, 37538, 23093, 23392, 72892, 65542, 15417, 33185, 6225, 45182, 3447, 38963, 23318, 36325, 65723, 62982, 58986, 945, 49060, 52626, 21241, 37844, 64710, 35796, 32979, 34424, 47386, 54134, 26000, 2117, 23527, 1539, 37861, 17839, 36128, 65611, 55692, 34877, 54513, 49042, 53024, 42980, 37539, 10885, 23810, 68169, 67284, 37831, 64990, 56559, 68517, 36705, 69007, 71278, 58485, 34652, 66596, 74023, 22456, 34619, 59356, 64372, 63643, 23340, 22776, 73027, 70426, 6219, 26568, 44942, 66738, 19276, 7350, 33200, 54889, 19925, 34880, 48965, 34388, 3353, 27426, 24369, 15483, 19024, 32169, 52938, 52368, 53602, 60649, 23173, 49033, 34792, 53534, 9654, 58836, 22632, 10615, 43486, 22319, 31601, 20476, 43290, 37469, 24191, 1850, 22369, 1792, 26585, 21088, 63754, 12321, 37612, 18620, 64304, 26534, 22022, 2083, 23235, 5309, 68286, 55833, 18865, 31602, 3173, 60652, 47263, 15722, 2093, 63611, 11168, 43985, 75687, 19090, 7429, 33127, 75127, 41982, 10850, 10576, 41109, 40223, 22735, 13205, 8635, 43973, 48945, 69071, 7345, 34647, 9631, 70393, 46655, 17891, 38024, 66667, 65798, 18163, 9898, 22360, 16796, 22683, 68816, 26710, 49793, 73543, 24344, 23486, 75714, 9628, 37338, 9928, 19680, 65195, 64055, 46846, 13895, 2420, 49673, 55546, 56554, 53122, 43595, 48952, 56688, 41911, 4476, 42004, 61476, 20938, 12957, 1605, 29555, 69287, 34906, 10522, 52460, 8690, 39157, 32152, 19325, 76462, 41013, 39994, 64977, 12969, 19604, 13309, 22370, 46746, 47488, 1727, 56683, 7284, 36703, 53017, 28218, 47986, 32954, 37339, 19832, 17762, 47251, 40907, 49741, 38758, 33294, 63584, 56910, 52447, 36201, 63419, 8732, 65159, 66985, 43967, 18136, 67298, 37597, 58428, 22051, 20251, 55839, 39308, 42305, 3776, 29451, 54870, 52110, 65007, 71781, 855, 22691, 67334, 49644, 53864, 60550, 22824, 36446, 65487, 23828, 16812, 59178, 23710, 4693, 2887, 8265, 75781, 68559, 67211, 26070, 71912, 15740, 65048, 18251, 41944, 62345, 48918, 19018, 42287, 44829, 19873, 45245, 21737, 13244, 7285, 29412, 12339, 19458, 49685, 66803, 55474, 6058, 19858, 75347, 47225, 67082, 19001, 23679, 60599, 63681, 29763, 24235, 64902, 43522, 74195, 1899, 13654, 74669, 74179, 18833, 37412, 72129, 22301, 65026, 23168, 9090, 41017, 68509, 13252, 71596, 73830, 2064, 10717, 3126, 44111, 28330, 31959, 36113, 10815, 52227, 63877, 18884, 55695, 3581, 65341, 27804, 54854, 65089, 10942, 39791, 56874, 52948, 19281, 56675, 60302, 53473, 28297, 23775, 1547, 64066, 12061, 22205, 64206, 23127, 47411, 66093, 40220, 36263, 6215, 65148, 19877, 66976, 66735, 67351, 4358, 10461, 22196, 35054, 56421, 65435, 22359, 28070, 29373, 18800, 62796, 65599, 39651, 29454, 13354, 2031, 3171, 70422, 26613, 26075, 12255, 39290, 43385, 21147, 60693, 36147, 23285, 52202, 63649, 60402, 11299, 22055, 37785, 74968, 32177, 40201, 50097, 17937, 13124, 2910, 45077, 962, 55485, 19391, 3642, 52957, 63843, 76476, 1600, 64759, 73694, 43601, 55529, 71759, 42328, 62246, 29170, 65472, 41949, 22614, 18652, 13570, 53280, 68998, 22202, 2944, 53289, 3370, 7166, 47923, 39670, 42071, 49814, 72322, 25815, 34872, 3188, 39266, 64740, 7271, 43027, 76349, 39937, 52408, 30376, 6212, 21150, 18418, 25270, 44322, 13721, 64394, 62725, 4493, 36111, 52146, 74135, 21505), '0.00', True, '1/2319/%', True, '1/2319/%', ('waiting', 'confirmed', 'partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL)) AND ("stock_move"."state" in %s))' with params: [(12843, 18843, 47764, 53001, 30440, 61044, 19834, 40279, 76252, 56875, 64349, 1948, 65839, 38498, 68785, 39411, 67005, 16666, 37657, 8771, 53769, 56664, 28355, 53839, 6099, 19645, 23628, 75750, 63263, 63558, 60626, 8792, 69087, 17993, 63821, 69001, 20070, 7321, 75370, 56849, 17603, 43859, 75924, 2221, 52179, 38962, 21153, 54024, 6227, 12242, 3382, 4575, 52982, 42275, 32181, 64109, 70396, 8672, 9636, 66421, 24383, 44742, 53555, 37624, 22854, 34155, 24425, 19578, 26052, 34974, 39220, 65507, 40131, 47898, 73009, 36309, 47841, 71372, 4564, 56480, 34945, 39926, 66072, 39665, 69176, 49001, 52079, 24249, 62266, 2375, 6079, 2090, 12115, 74131, 13497, 18952, 8799, 74126, 1877, 32066, 40117, 8695, 66556, 45211, 63146, 65164, 36131, 55548, 37352, 44228, 12220, 18472, 9138, 39576, 23087, 10630, 60357, 49579, 1934, 1838, 7313, 53412, 3788, 39845, 23760, 7344, 22532, 17955, 18266, 43099, 63764, 54485, 54116, 56312, 43208, 22617, 38946, 23818, 51883, 35008, 20203, 65408, 24157, 38248, 72586, 34847, 53994, 19029, 1071, 12880, 20083, 36212, 54446, 62903, 52195, 42322, 54085, 34591, 3216, 39015, 22179, 5910, 71861, 76015, 1717, 43371, 13871, 53525, 37384, 22207, 64233, 13788, 12391, 62792, 22183, 65295, 44233, 33156, 22160, 10478, 42099, 63006, 68752, 40033, 10838, 12241, 30485, 37921, 67374, 47468, 37267, 65495, 49626, 75636, 68318, 59145, 7441, 19493, 12591, 13901, 44973, 3499, 71701, 15828, 71831, 74121, 63914, 59413, 34678, 75288, 4461, 69378, 65208, 12967, 9661, 64243, 52313, 75871, 2276, 73097, 12299, 4543, 24243, 58427, 75510, 25970, 26129, 47042, 22064, 1606, 19414, 45152, 56620, 43121, 53462, 34882, 64785, 36369, 34748, 41767, 71943, 22266, 52142, 43529, 7406, 41587, 27954, 18419, 12213, 22347, 43464, 64068, 34613, 37563, 15851, 29245, 9664, 66169, 22442, 40185, 42462, 52934, 1745, 74357, 55414, 38965, 19298, 26522, 34794, 18958, 1454, 43572, 68331, 55757, 52393, 19542, 42978, 2180, 72272, 68497, 34773, 17872, 53574, 18072, 35297, 15125, 75514, 23301, 63141, 47546, 34679, 44917, 23669, 6175, 20279, 20204, 62212, 62942, 73990, 31590, 73817, 21859, 74238, 22518, 75063, 12332, 73866, 37902, 63777, 3074, 62302, 55609, 1886, 888, 56805, 53604, 72186, 35379, 54782, 66789, 19462, 43830, 13305, 39534, 20679, 43190, 38993, 7364, 19730, 34148, 52589, 75182, 35471, 43314, 23600, 76257, 43553, 55762, 45147, 18130, 20928, 3277, 3018, 39399, 22544, 2343, 35260, 73625, 69178, 43497, 3506, 23124, 63657, 22365, 47950, 54727, 43068, 35056, 20039, 37548, 1854, 62354, 13035, 36431, 26290, 53480, 65497, 39405, 18725, 6100, 13307, 72530, 58434, 43010, 75709, 1673, 22026, 63023, 20266, 3366, 44951, 3066, 2146, 5814, 68200, 7383, 72804, 66661, 18948, 66176, 29722, 55829, 53030, 35123, 13220, 20269, 48978, 66560, 41969, 56612, 48996, 23431, 63963, 13172, 15904, 42357, 47892, 8260, 8263, 60800, 63565, 43076, 23204, 75404, 63840, 43238, 37448, 49879, 6168, 63009, 39871, 33207, 32065, 43478, 16717, 5350, 4252, 7306, 65082, 60158, 71785, 29378, 75491, 76256, 23005, 39873, 64025, 71790, 71707, 13617, 43539, 59029, 33255, 36476, 18726, 35184, 23532, 33189, 15622, 37691, 47955, 52390, 16545, 22849, 22214, 69261, 38948, 65141, 13500, 19262, 3254, 21183, 65083, 2293, 4496, 32001, 28231, 38956, 60559, 7289, 74494, 12315, 36423, 16504, 55944, 56412, 41821, 58433, 63139, 52329, 72730, 56469, 34688, 32097, 54534, 63800, 39305, 9070, 23813, 47540, 55648, 35396, 54051, 47223, 30401, 72606, 47741, 12556, 47449, 56438, 63885, 15211, 52416, 39114, 68833, 16034, 52631, 9911, 53177, 2188, 36066, 6137, 15898, 43666, 2207, 49887, 41606, 12314, 23335, 47993, 1942, 43551, 3764, 21218, 13314, 44142, 12927, 60239, 62293, 22684, 59088, 16739, 39566, 43672, 37356, 60294, 2857, 47871, 8644, 39408, 64815, 13126, 69350, 76444, 17816, 74177, 65168, 46854, 27457, 1487, 42021, 2011, 64183, 28009, 47253, 19988, 3481, 54125, 2069, 56365, 9119, 24210, 50118, 49684, 75885, 72999, 12523, 55470, 37577, 34713, 56912, 49839, 30384, 22549, 37845, 53430, 72074, 23396, 18080, 3789, 40321, 47098, 59147, 52145, 31992, 13129, 18776, 20209, 1726, 63167, 22354, 63978, 68322, 51831, 32032, 39217, 29522, 75974, 22472, 49666, 63137, 60351, 19551, 53573, 53490, 44238, 23762, 4581, 13098, 55525, 71304, 24181, 5859, 10984, 15892, 74288, 39829, 34564, 58435, 21747, 49007, 18491, 47953, 60431, 59059, 13203, 35063, 52321, 18301, 37639, 68203, 4351, 22408, 39116, 52316, 44891, 71857, 43341, 56375, 39372, 56444, 12123, 66699, 75371, 40118, 18502, 67187, 16493, 18568, 34805, 47936, 26104, 46873, 12406, 47074, 49577, 46783, 3769, 66869, 1116, 47909, 28360, 13187, 31597, 18575, 3558, 74042, 60423, 39451, 49861, 37538, 23093, 23392, 72892, 65542, 15417, 33185, 6225, 45182, 3447, 38963, 23318, 36325, 65723, 62982, 58986, 945, 49060, 52626, 21241, 37844, 64710, 35796, 32979, 34424, 47386, 54134, 26000, 2117, 23527, 1539, 37861, 17839, 36128, 65611, 55692, 34877, 54513, 49042, 53024, 42980, 37539, 10885, 23810, 68169, 67284, 37831, 64990, 56559, 68517, 36705, 69007, 71278, 58485, 34652, 66596, 74023, 22456, 34619, 59356, 64372, 63643, 23340, 22776, 73027, 70426, 6219, 26568, 44942, 66738, 19276, 7350, 33200, 54889, 19925, 34880, 48965, 34388, 3353, 27426, 24369, 15483, 19024, 32169, 52938, 52368, 53602, 60649, 23173, 49033, 34792, 53534, 9654, 58836, 22632, 10615, 43486, 22319, 31601, 20476, 43290, 37469, 24191, 1850, 22369, 1792, 26585, 21088, 63754, 12321, 37612, 18620, 64304, 26534, 22022, 2083, 23235, 5309, 68286, 55833, 18865, 31602, 3173, 60652, 47263, 15722, 2093, 63611, 11168, 43985, 75687, 19090, 7429, 33127, 75127, 41982, 10850, 10576, 41109, 40223, 22735, 13205, 8635, 43973, 48945, 69071, 7345, 34647, 9631, 70393, 46655, 17891, 38024, 66667, 65798, 18163, 9898, 22360, 16796, 22683, 68816, 26710, 49793, 73543, 24344, 23486, 75714, 9628, 37338, 9928, 19680, 65195, 64055, 46846, 13895, 2420, 49673, 55546, 56554, 53122, 43595, 48952, 56688, 41911, 4476, 42004, 61476, 20938, 12957, 1605, 29555, 69287, 34906, 10522, 52460, 8690, 39157, 32152, 19325, 76462, 41013, 39994, 64977, 12969, 19604, 13309, 22370, 46746, 47488, 1727, 56683, 7284, 36703, 53017, 28218, 47986, 32954, 37339, 19832, 17762, 47251, 40907, 49741, 38758, 33294, 63584, 56910, 52447, 36201, 63419, 8732, 65159, 66985, 43967, 18136, 67298, 37597, 58428, 22051, 20251, 55839, 39308, 42305, 3776, 29451, 54870, 52110, 65007, 71781, 855, 22691, 67334, 49644, 53864, 60550, 22824, 36446, 65487, 23828, 16812, 59178, 23710, 4693, 2887, 8265, 75781, 68559, 67211, 26070, 71912, 15740, 65048, 18251, 41944, 62345, 48918, 19018, 42287, 44829, 19873, 45245, 21737, 13244, 7285, 29412, 12339, 19458, 49685, 66803, 55474, 6058, 19858, 75347, 47225, 67082, 19001, 23679, 60599, 63681, 29763, 24235, 64902, 43522, 74195, 1899, 13654, 74669, 74179, 18833, 37412, 72129, 22301, 65026, 23168, 9090, 41017, 68509, 13252, 71596, 73830, 2064, 10717, 3126, 44111, 28330, 31959, 36113, 10815, 52227, 63877, 18884, 55695, 3581, 65341, 27804, 54854, 65089, 10942, 39791, 56874, 52948, 19281, 56675, 60302, 53473, 28297, 23775, 1547, 64066, 12061, 22205, 64206, 23127, 47411, 66093, 40220, 36263, 6215, 65148, 19877, 66976, 66735, 67351, 4358, 10461, 22196, 35054, 56421, 65435, 22359, 28070, 29373, 18800, 62796, 65599, 39651, 29454, 13354, 2031, 3171, 70422, 26613, 26075, 12255, 39290, 43385, 21147, 60693, 36147, 23285, 52202, 63649, 60402, 11299, 22055, 37785, 74968, 32177, 40201, 50097, 17937, 13124, 2910, 45077, 962, 55485, 19391, 3642, 52957, 63843, 76476, 1600, 64759, 73694, 43601, 55529, 71759, 42328, 62246, 29170, 65472, 41949, 22614, 18652, 13570, 53280, 68998, 22202, 2944, 53289, 3370, 7166, 47923, 39670, 42071, 49814, 72322, 25815, 34872, 3188, 39266, 64740, 7271, 43027, 76349, 39937, 52408, 30376, 6212, 21150, 18418, 25270, 44322, 13721, 64394, 62725, 4493, 36111, 52146, 74135, 21505), '0.00', True, '1/2319/%', True, '1/2319/%', ('waiting', 'confirmed', 'partially_available', 'assigned'), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL))' with params: [(12843, 18843, 47764, 53001, 30440, 61044, 19834, 40279, 76252, 56875, 64349, 1948, 65839, 38498, 68785, 39411, 67005, 16666, 37657, 8771, 53769, 56664, 28355, 53839, 6099, 19645, 23628, 75750, 63263, 63558, 60626, 8792, 69087, 17993, 63821, 69001, 20070, 7321, 75370, 56849, 17603, 43859, 75924, 2221, 52179, 38962, 21153, 54024, 6227, 12242, 3382, 4575, 52982, 42275, 32181, 64109, 70396, 8672, 9636, 66421, 24383, 44742, 53555, 37624, 22854, 34155, 24425, 19578, 26052, 34974, 39220, 65507, 40131, 47898, 73009, 36309, 47841, 71372, 4564, 56480, 34945, 39926, 66072, 39665, 69176, 49001, 52079, 24249, 62266, 2375, 6079, 2090, 12115, 74131, 13497, 18952, 8799, 74126, 1877, 32066, 40117, 8695, 66556, 45211, 63146, 65164, 36131, 55548, 37352, 44228, 12220, 18472, 9138, 39576, 23087, 10630, 60357, 49579, 1934, 1838, 7313, 53412, 3788, 39845, 23760, 7344, 22532, 17955, 18266, 43099, 63764, 54485, 54116, 56312, 43208, 22617, 38946, 23818, 51883, 35008, 20203, 65408, 24157, 38248, 72586, 34847, 53994, 19029, 1071, 12880, 20083, 36212, 54446, 62903, 52195, 42322, 54085, 34591, 3216, 39015, 22179, 5910, 71861, 76015, 1717, 43371, 13871, 53525, 37384, 22207, 64233, 13788, 12391, 62792, 22183, 65295, 44233, 33156, 22160, 10478, 42099, 63006, 68752, 40033, 10838, 12241, 30485, 37921, 67374, 47468, 37267, 65495, 49626, 75636, 68318, 59145, 7441, 19493, 12591, 13901, 44973, 3499, 71701, 15828, 71831, 74121, 63914, 59413, 34678, 75288, 4461, 69378, 65208, 12967, 9661, 64243, 52313, 75871, 2276, 73097, 12299, 4543, 24243, 58427, 75510, 25970, 26129, 47042, 22064, 1606, 19414, 45152, 56620, 43121, 53462, 34882, 64785, 36369, 34748, 41767, 71943, 22266, 52142, 43529, 7406, 41587, 27954, 18419, 12213, 22347, 43464, 64068, 34613, 37563, 15851, 29245, 9664, 66169, 22442, 40185, 42462, 52934, 1745, 74357, 55414, 38965, 19298, 26522, 34794, 18958, 1454, 43572, 68331, 55757, 52393, 19542, 42978, 2180, 72272, 68497, 34773, 17872, 53574, 18072, 35297, 15125, 75514, 23301, 63141, 47546, 34679, 44917, 23669, 6175, 20279, 20204, 62212, 62942, 73990, 31590, 73817, 21859, 74238, 22518, 75063, 12332, 73866, 37902, 63777, 3074, 62302, 55609, 1886, 888, 56805, 53604, 72186, 35379, 54782, 66789, 19462, 43830, 13305, 39534, 20679, 43190, 38993, 7364, 19730, 34148, 52589, 75182, 35471, 43314, 23600, 76257, 43553, 55762, 45147, 18130, 20928, 3277, 3018, 39399, 22544, 2343, 35260, 73625, 69178, 43497, 3506, 23124, 63657, 22365, 47950, 54727, 43068, 35056, 20039, 37548, 1854, 62354, 13035, 36431, 26290, 53480, 65497, 39405, 18725, 6100, 13307, 72530, 58434, 43010, 75709, 1673, 22026, 63023, 20266, 3366, 44951, 3066, 2146, 5814, 68200, 7383, 72804, 66661, 18948, 66176, 29722, 55829, 53030, 35123, 13220, 20269, 48978, 66560, 41969, 56612, 48996, 23431, 63963, 13172, 15904, 42357, 47892, 8260, 8263, 60800, 63565, 43076, 23204, 75404, 63840, 43238, 37448, 49879, 6168, 63009, 39871, 33207, 32065, 43478, 16717, 5350, 4252, 7306, 65082, 60158, 71785, 29378, 75491, 76256, 23005, 39873, 64025, 71790, 71707, 13617, 43539, 59029, 33255, 36476, 18726, 35184, 23532, 33189, 15622, 37691, 47955, 52390, 16545, 22849, 22214, 69261, 38948, 65141, 13500, 19262, 3254, 21183, 65083, 2293, 4496, 32001, 28231, 38956, 60559, 7289, 74494, 12315, 36423, 16504, 55944, 56412, 41821, 58433, 63139, 52329, 72730, 56469, 34688, 32097, 54534, 63800, 39305, 9070, 23813, 47540, 55648, 35396, 54051, 47223, 30401, 72606, 47741, 12556, 47449, 56438, 63885, 15211, 52416, 39114, 68833, 16034, 52631, 9911, 53177, 2188, 36066, 6137, 15898, 43666, 2207, 49887, 41606, 12314, 23335, 47993, 1942, 43551, 3764, 21218, 13314, 44142, 12927, 60239, 62293, 22684, 59088, 16739, 39566, 43672, 37356, 60294, 2857, 47871, 8644, 39408, 64815, 13126, 69350, 76444, 17816, 74177, 65168, 46854, 27457, 1487, 42021, 2011, 64183, 28009, 47253, 19988, 3481, 54125, 2069, 56365, 9119, 24210, 50118, 49684, 75885, 72999, 12523, 55470, 37577, 34713, 56912, 49839, 30384, 22549, 37845, 53430, 72074, 23396, 18080, 3789, 40321, 47098, 59147, 52145, 31992, 13129, 18776, 20209, 1726, 63167, 22354, 63978, 68322, 51831, 32032, 39217, 29522, 75974, 22472, 49666, 63137, 60351, 19551, 53573, 53490, 44238, 23762, 4581, 13098, 55525, 71304, 24181, 5859, 10984, 15892, 74288, 39829, 34564, 58435, 21747, 49007, 18491, 47953, 60431, 59059, 13203, 35063, 52321, 18301, 37639, 68203, 4351, 22408, 39116, 52316, 44891, 71857, 43341, 56375, 39372, 56444, 12123, 66699, 75371, 40118, 18502, 67187, 16493, 18568, 34805, 47936, 26104, 46873, 12406, 47074, 49577, 46783, 3769, 66869, 1116, 47909, 28360, 13187, 31597, 18575, 3558, 74042, 60423, 39451, 49861, 37538, 23093, 23392, 72892, 65542, 15417, 33185, 6225, 45182, 3447, 38963, 23318, 36325, 65723, 62982, 58986, 945, 49060, 52626, 21241, 37844, 64710, 35796, 32979, 34424, 47386, 54134, 26000, 2117, 23527, 1539, 37861, 17839, 36128, 65611, 55692, 34877, 54513, 49042, 53024, 42980, 37539, 10885, 23810, 68169, 67284, 37831, 64990, 56559, 68517, 36705, 69007, 71278, 58485, 34652, 66596, 74023, 22456, 34619, 59356, 64372, 63643, 23340, 22776, 73027, 70426, 6219, 26568, 44942, 66738, 19276, 7350, 33200, 54889, 19925, 34880, 48965, 34388, 3353, 27426, 24369, 15483, 19024, 32169, 52938, 52368, 53602, 60649, 23173, 49033, 34792, 53534, 9654, 58836, 22632, 10615, 43486, 22319, 31601, 20476, 43290, 37469, 24191, 1850, 22369, 1792, 26585, 21088, 63754, 12321, 37612, 18620, 64304, 26534, 22022, 2083, 23235, 5309, 68286, 55833, 18865, 31602, 3173, 60652, 47263, 15722, 2093, 63611, 11168, 43985, 75687, 19090, 7429, 33127, 75127, 41982, 10850, 10576, 41109, 40223, 22735, 13205, 8635, 43973, 48945, 69071, 7345, 34647, 9631, 70393, 46655, 17891, 38024, 66667, 65798, 18163, 9898, 22360, 16796, 22683, 68816, 26710, 49793, 73543, 24344, 23486, 75714, 9628, 37338, 9928, 19680, 65195, 64055, 46846, 13895, 2420, 49673, 55546, 56554, 53122, 43595, 48952, 56688, 41911, 4476, 42004, 61476, 20938, 12957, 1605, 29555, 69287, 34906, 10522, 52460, 8690, 39157, 32152, 19325, 76462, 41013, 39994, 64977, 12969, 19604, 13309, 22370, 46746, 47488, 1727, 56683, 7284, 36703, 53017, 28218, 47986, 32954, 37339, 19832, 17762, 47251, 40907, 49741, 38758, 33294, 63584, 56910, 52447, 36201, 63419, 8732, 65159, 66985, 43967, 18136, 67298, 37597, 58428, 22051, 20251, 55839, 39308, 42305, 3776, 29451, 54870, 52110, 65007, 71781, 855, 22691, 67334, 49644, 53864, 60550, 22824, 36446, 65487, 23828, 16812, 59178, 23710, 4693, 2887, 8265, 75781, 68559, 67211, 26070, 71912, 15740, 65048, 18251, 41944, 62345, 48918, 19018, 42287, 44829, 19873, 45245, 21737, 13244, 7285, 29412, 12339, 19458, 49685, 66803, 55474, 6058, 19858, 75347, 47225, 67082, 19001, 23679, 60599, 63681, 29763, 24235, 64902, 43522, 74195, 1899, 13654, 74669, 74179, 18833, 37412, 72129, 22301, 65026, 23168, 9090, 41017, 68509, 13252, 71596, 73830, 2064, 10717, 3126, 44111, 28330, 31959, 36113, 10815, 52227, 63877, 18884, 55695, 3581, 65341, 27804, 54854, 65089, 10942, 39791, 56874, 52948, 19281, 56675, 60302, 53473, 28297, 23775, 1547, 64066, 12061, 22205, 64206, 23127, 47411, 66093, 40220, 36263, 6215, 65148, 19877, 66976, 66735, 67351, 4358, 10461, 22196, 35054, 56421, 65435, 22359, 28070, 29373, 18800, 62796, 65599, 39651, 29454, 13354, 2031, 3171, 70422, 26613, 26075, 12255, 39290, 43385, 21147, 60693, 36147, 23285, 52202, 63649, 60402, 11299, 22055, 37785, 74968, 32177, 40201, 50097, 17937, 13124, 2910, 45077, 962, 55485, 19391, 3642, 52957, 63843, 76476, 1600, 64759, 73694, 43601, 55529, 71759, 42328, 62246, 29170, 65472, 41949, 22614, 18652, 13570, 53280, 68998, 22202, 2944, 53289, 3370, 7166, 47923, 39670, 42071, 49814, 72322, 25815, 34872, 3188, 39266, 64740, 7271, 43027, 76349, 39937, 52408, 30376, 6212, 21150, 18418, 25270, 44322, 13721, 64394, 62725, 4493, 36111, 52146, 74135, 21505), '0.00', True, '1/2319/%', True, '1/2319/%', ('waiting', 'confirmed', 'partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL))' with params: [(74724, 44817, 22882, 22235, 63278, 18893, 32120, 41201, 76162, 55518, 26639, 66532, 45073, 47222, 63684, 68779, 20085, 2324, 74103, 3175, 39528, 22955, 69392, 59357, 69313, 23820, 56565, 53824, 53410, 64060, 71596, 62219, 58379, 49551, 23790, 34678, 22738, 22604, 43163, 18434, 63247, 21254, 52114, 5797, 64095, 56359, 3597, 10932, 60286, 67055, 23480, 23745, 73275, 30433, 37884, 53442, 54839, 7448, 13298, 22518, 18102, 20278, 68446, 9093, 22276, 75518, 69207, 13157, 43260, 1703, 16509, 28370, 47454, 44902, 18172, 28055, 34583, 36081, 19400, 40897, 34850, 65851, 32158, 16488, 19637, 24307, 64970, 46770, 18302, 63319, 18042, 20089, 62947, 23318, 43519, 58437, 13327, 22989, 22792, 68944, 9913, 68731, 10558, 62217, 60034, 10757, 58429, 16035, 27912, 55279, 13417, 54537, 20975, 75344, 54132, 21720, 72356, 73320, 21144, 36763, 18456, 40157, 34909, 33067, 64389, 34588, 7374, 63481, 50084, 10508, 39583, 39861, 2875, 13840, 39141, 65051, 69075, 11545, 55694, 55574, 21121, 18030, 65114, 49745, 12079, 2935, 64835, 21147, 23751, 53270, 13160, 72346, 52389, 39340, 63755, 26291, 47408, 56810, 53370, 52595, 52499, 65161, 40902, 47965, 58921, 62974, 23355, 13322, 26580, 23499, 35194, 29758, 15129, 12393, 27944, 59002, 64711, 8774, 29417, 9586, 35296, 53264, 15894, 42197, 5902, 68230, 38991, 5322, 20423, 22783, 2890, 53463, 13898, 1746, 52677, 40293, 64773, 67196, 75388, 66366, 63052, 49627, 47361, 65789, 71752, 33199, 16672, 33084, 56380, 13852, 75449, 41917, 47713, 39366, 26193, 52475, 49566, 15930, 66631, 39078, 73444, 64233, 63772, 5819, 29560, 74002, 13763, 9061, 1090, 60307, 37882, 76275, 68892, 74517, 45184, 47476, 18604, 18949, 18279, 58275, 21077, 29701, 39209, 14739, 22415, 19281, 62902, 17855, 49762, 56402, 35290, 36430, 15847, 21257, 43927, 8285, 55625, 26182, 23203, 4594, 56923, 47191, 9137, 24138, 37396, 58301, 3642, 28220, 43285, 21752, 72595, 72766, 43714, 75676, 19966, 20079, 12503, 29456, 23726, 63974, 63911, 64379, 12428, 12173, 20952, 1242, 65748, 34417, 18692, 41999, 1849, 49562, 68745, 66415, 29540, 53505, 3162, 11111, 36057, 20087, 56947, 68273, 28027, 28067, 47840, 71884, 63430, 55798, 19493, 10742, 54731, 22581, 42347, 62345, 65558, 74092, 34894, 3284, 19032, 3425, 16680, 17811, 53915, 66500, 60263, 63462, 45215, 3372, 52655, 11160, 34804, 36476, 12287, 19346, 10967, 3785, 26234, 4324, 12308, 10810, 39413, 64375, 18532, 73936, 45034, 1477, 65649, 45070, 43563, 18793, 52934, 23091, 22221, 58354, 42302, 26575, 15744, 52557, 22550, 23237, 55472, 60579, 43226, 60053, 28061, 2211, 69218, 66352, 9798, 63163, 26205, 69147, 8747, 39344, 22625, 63951, 23354, 10467, 64873, 52634, 15624, 29386, 55516, 35377, 75480, 37584, 3182, 58321, 15883, 3405, 60249, 53569, 42106, 13722, 64673, 20300, 13611, 3514, 64944, 11648, 20299, 74739, 63680, 67357, 10663, 35396, 75477, 34935, 23384, 12194, 36308, 4527, 72526, 71650, 71775, 5402, 63109, 11728, 13668, 73917, 32049, 47473, 8642, 1516, 49062, 34624, 71308, 40180, 73428, 63606, 31577, 53110, 10637, 2058, 73941, 38252, 20399, 65678, 1442, 47838, 35105, 5397, 43203, 28116, 72398, 59342, 64757, 74247, 23294, 13255, 23238, 72499, 19256, 46634, 37343, 47190, 1706, 62725, 65653, 53034, 53664, 22728, 65277, 66446, 55615, 15951, 73546, 49033, 75803, 4506, 36054, 19854, 72543, 37507, 71398, 40189, 65410, 39166, 13234, 2229, 27964, 68242, 37763, 16846, 49041, 59033, 52477, 74932, 19799, 26597, 22374, 58400, 37335, 52362, 11162, 61063, 22501, 62936, 18696, 66785, 40172, 3199, 27943, 2340, 72549, 34592, 42950, 24137, 10783, 63382, 21591, 17756, 929, 12245, 31601, 53424, 36159, 34660, 23493, 52447, 65426, 23114, 44129, 53331, 71694, 13207, 74682, 28659, 18976, 43732, 10975, 65631, 62755, 58940, 17786, 38951, 41941, 18874, 35019, 1445, 42160, 27837, 1220, 63295, 64059, 39751, 3599, 29375, 11173, 32018, 10753, 55544, 73663, 5903, 4693, 13267, 65575, 53435, 22781, 34867, 2228, 28071, 75629, 1879, 42509, 6147, 18636, 71281, 65692, 75008, 19320, 35069, 36184, 65394, 43407, 12300, 21236, 8687, 29319, 7258, 13771, 19905, 1764, 63585, 63936, 4429, 38024, 44231, 65460, 44843, 24230, 74655, 55272, 66600, 9125, 17922, 71955, 52184, 65461, 13163, 68267, 64010, 22521, 39385, 29452, 23415, 15793, 68316, 21729, 43253, 42377, 40119, 66598, 19260, 72988, 2183, 65082, 60635, 75238, 13032, 55589, 23754, 56949, 44229, 9032, 54065, 60228, 1224, 44737, 55337, 10269, 6246, 23268, 19418, 62970, 55508, 34683, 4578, 42231, 42493, 23609, 56689, 26114, 3084, 9135, 60962, 53658, 60439, 53741, 26162, 54758, 34309, 73660, 55573, 41750, 10991, 44282, 56750, 72127, 39909, 60169, 53363, 53663, 36453, 60670, 60697, 34612, 35006, 69238, 1769, 22808, 24390, 75446, 64939, 37446, 3603, 71445, 18394, 19015, 35083, 16610, 13911, 56659, 49665, 65122, 55311, 55511, 72321, 16012, 55882, 56677, 53768, 23352, 10787, 72896, 41614, 75812, 65056, 59086, 15904, 23229, 1211, 18265, 39103, 36150, 22283, 3024, 68697, 33234, 62748, 36495, 63410, 73026, 10785, 9087, 20458, 21162, 18899, 73873, 20414, 76492, 52264, 47545, 23486, 19401, 40252, 67253, 66722, 10727, 68829, 28148, 1774, 68471, 72223, 22566, 59404, 7221, 63861, 68299, 42953, 39045, 1390, 3218, 47546, 8723, 76236, 55726, 22962, 29347, 22326, 65471, 63408, 76421, 49808, 36688, 18391, 75777, 10632, 41815, 1106, 10073, 65498, 36383, 9891, 53403, 18408, 68264, 28249, 65005, 54778, 1527, 64397, 10648, 66605, 10859, 22320, 52582, 47539, 45228, 55651, 1507, 36428, 29344, 66177, 67159, 33245, 33208, 52560, 10846, 49791, 44906, 64065, 66340, 43282, 2949, 44143, 24384, 22649, 28328, 59083, 75324, 62809, 20202, 66615, 39934, 34143, 64395, 20213, 43162, 44845, 43569, 28601, 3167, 19002, 49587, 74863, 18055, 2835, 37803, 71441, 66804, 49461, 39252, 41788, 53577, 39859, 18498, 41914, 52187, 52571, 29373, 68746, 47753, 65723, 23360, 19405, 13842, 65133, 7408, 73075, 42978, 71549, 68193, 56362, 8297, 74488, 3474, 43473, 39308, 19375, 23472, 18122, 19477, 1823, 56567, 10491, 34961, 18569, 22760, 74778, 13311, 63823, 1152, 47057, 64969, 24402, 75814, 65610, 2019, 60500, 20225, 34736, 46625, 23222, 49087, 58427, 22335, 29213, 1376, 58365, 1418, 16487, 27869, 15952, 15707, 41868, 56877, 41920, 19365, 16691, 32441, 76489, 41582, 39217, 42051, 73446, 56288, 74973, 47254, 42176, 6079, 75669, 3534, 52353, 75084, 65407, 39179, 56678, 19013, 31984, 55049, 66769, 25822, 16541, 27946, 23539, 43455, 912, 63149, 4487, 56798, 19463, 17807, 45016, 52272, 22902, 10565, 31873, 26243, 58405, 20157, 12846, 59417, 28520, 1702, 20016, 66546, 47517, 67177, 34127, 58869, 37465, 63562, 945, 1535, 64367, 36416, 17955, 27856, 13801, 65440, 26165, 45078, 1413, 13164, 42018, 55746, 46790, 23144, 10754, 52580, 41125, 20139, 66996, 74357, 1895, 10697, 9646, 4427, 74686, 71692, 34769, 52382, 21171, 18107, 26063, 33235, 63246, 3369, 16573, 18459, 40033, 28381, 58479, 71256, 43454, 1884, 64190, 44200, 10640, 49609, 22976, 43543, 2373, 74303, 73432, 73579, 23799, 35160, 47085, 17856, 26712, 60658, 64732, 17925, 9580, 66686, 42020, 49632, 3450, 22190, 21145, 23290, 1435, 1258, 68749, 12234, 3132, 1676, 22942), '0.00', True, '1/2335/%', True, '1/2335/%', ('waiting', 'confirmed', 'partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL)) AND ("stock_move"."state" in %s))' with params: [(74724, 44817, 22882, 22235, 63278, 18893, 32120, 41201, 76162, 55518, 26639, 66532, 45073, 47222, 63684, 68779, 20085, 2324, 74103, 3175, 39528, 22955, 69392, 59357, 69313, 23820, 56565, 53824, 53410, 64060, 71596, 62219, 58379, 49551, 23790, 34678, 22738, 22604, 43163, 18434, 63247, 21254, 52114, 5797, 64095, 56359, 3597, 10932, 60286, 67055, 23480, 23745, 73275, 30433, 37884, 53442, 54839, 7448, 13298, 22518, 18102, 20278, 68446, 9093, 22276, 75518, 69207, 13157, 43260, 1703, 16509, 28370, 47454, 44902, 18172, 28055, 34583, 36081, 19400, 40897, 34850, 65851, 32158, 16488, 19637, 24307, 64970, 46770, 18302, 63319, 18042, 20089, 62947, 23318, 43519, 58437, 13327, 22989, 22792, 68944, 9913, 68731, 10558, 62217, 60034, 10757, 58429, 16035, 27912, 55279, 13417, 54537, 20975, 75344, 54132, 21720, 72356, 73320, 21144, 36763, 18456, 40157, 34909, 33067, 64389, 34588, 7374, 63481, 50084, 10508, 39583, 39861, 2875, 13840, 39141, 65051, 69075, 11545, 55694, 55574, 21121, 18030, 65114, 49745, 12079, 2935, 64835, 21147, 23751, 53270, 13160, 72346, 52389, 39340, 63755, 26291, 47408, 56810, 53370, 52595, 52499, 65161, 40902, 47965, 58921, 62974, 23355, 13322, 26580, 23499, 35194, 29758, 15129, 12393, 27944, 59002, 64711, 8774, 29417, 9586, 35296, 53264, 15894, 42197, 5902, 68230, 38991, 5322, 20423, 22783, 2890, 53463, 13898, 1746, 52677, 40293, 64773, 67196, 75388, 66366, 63052, 49627, 47361, 65789, 71752, 33199, 16672, 33084, 56380, 13852, 75449, 41917, 47713, 39366, 26193, 52475, 49566, 15930, 66631, 39078, 73444, 64233, 63772, 5819, 29560, 74002, 13763, 9061, 1090, 60307, 37882, 76275, 68892, 74517, 45184, 47476, 18604, 18949, 18279, 58275, 21077, 29701, 39209, 14739, 22415, 19281, 62902, 17855, 49762, 56402, 35290, 36430, 15847, 21257, 43927, 8285, 55625, 26182, 23203, 4594, 56923, 47191, 9137, 24138, 37396, 58301, 3642, 28220, 43285, 21752, 72595, 72766, 43714, 75676, 19966, 20079, 12503, 29456, 23726, 63974, 63911, 64379, 12428, 12173, 20952, 1242, 65748, 34417, 18692, 41999, 1849, 49562, 68745, 66415, 29540, 53505, 3162, 11111, 36057, 20087, 56947, 68273, 28027, 28067, 47840, 71884, 63430, 55798, 19493, 10742, 54731, 22581, 42347, 62345, 65558, 74092, 34894, 3284, 19032, 3425, 16680, 17811, 53915, 66500, 60263, 63462, 45215, 3372, 52655, 11160, 34804, 36476, 12287, 19346, 10967, 3785, 26234, 4324, 12308, 10810, 39413, 64375, 18532, 73936, 45034, 1477, 65649, 45070, 43563, 18793, 52934, 23091, 22221, 58354, 42302, 26575, 15744, 52557, 22550, 23237, 55472, 60579, 43226, 60053, 28061, 2211, 69218, 66352, 9798, 63163, 26205, 69147, 8747, 39344, 22625, 63951, 23354, 10467, 64873, 52634, 15624, 29386, 55516, 35377, 75480, 37584, 3182, 58321, 15883, 3405, 60249, 53569, 42106, 13722, 64673, 20300, 13611, 3514, 64944, 11648, 20299, 74739, 63680, 67357, 10663, 35396, 75477, 34935, 23384, 12194, 36308, 4527, 72526, 71650, 71775, 5402, 63109, 11728, 13668, 73917, 32049, 47473, 8642, 1516, 49062, 34624, 71308, 40180, 73428, 63606, 31577, 53110, 10637, 2058, 73941, 38252, 20399, 65678, 1442, 47838, 35105, 5397, 43203, 28116, 72398, 59342, 64757, 74247, 23294, 13255, 23238, 72499, 19256, 46634, 37343, 47190, 1706, 62725, 65653, 53034, 53664, 22728, 65277, 66446, 55615, 15951, 73546, 49033, 75803, 4506, 36054, 19854, 72543, 37507, 71398, 40189, 65410, 39166, 13234, 2229, 27964, 68242, 37763, 16846, 49041, 59033, 52477, 74932, 19799, 26597, 22374, 58400, 37335, 52362, 11162, 61063, 22501, 62936, 18696, 66785, 40172, 3199, 27943, 2340, 72549, 34592, 42950, 24137, 10783, 63382, 21591, 17756, 929, 12245, 31601, 53424, 36159, 34660, 23493, 52447, 65426, 23114, 44129, 53331, 71694, 13207, 74682, 28659, 18976, 43732, 10975, 65631, 62755, 58940, 17786, 38951, 41941, 18874, 35019, 1445, 42160, 27837, 1220, 63295, 64059, 39751, 3599, 29375, 11173, 32018, 10753, 55544, 73663, 5903, 4693, 13267, 65575, 53435, 22781, 34867, 2228, 28071, 75629, 1879, 42509, 6147, 18636, 71281, 65692, 75008, 19320, 35069, 36184, 65394, 43407, 12300, 21236, 8687, 29319, 7258, 13771, 19905, 1764, 63585, 63936, 4429, 38024, 44231, 65460, 44843, 24230, 74655, 55272, 66600, 9125, 17922, 71955, 52184, 65461, 13163, 68267, 64010, 22521, 39385, 29452, 23415, 15793, 68316, 21729, 43253, 42377, 40119, 66598, 19260, 72988, 2183, 65082, 60635, 75238, 13032, 55589, 23754, 56949, 44229, 9032, 54065, 60228, 1224, 44737, 55337, 10269, 6246, 23268, 19418, 62970, 55508, 34683, 4578, 42231, 42493, 23609, 56689, 26114, 3084, 9135, 60962, 53658, 60439, 53741, 26162, 54758, 34309, 73660, 55573, 41750, 10991, 44282, 56750, 72127, 39909, 60169, 53363, 53663, 36453, 60670, 60697, 34612, 35006, 69238, 1769, 22808, 24390, 75446, 64939, 37446, 3603, 71445, 18394, 19015, 35083, 16610, 13911, 56659, 49665, 65122, 55311, 55511, 72321, 16012, 55882, 56677, 53768, 23352, 10787, 72896, 41614, 75812, 65056, 59086, 15904, 23229, 1211, 18265, 39103, 36150, 22283, 3024, 68697, 33234, 62748, 36495, 63410, 73026, 10785, 9087, 20458, 21162, 18899, 73873, 20414, 76492, 52264, 47545, 23486, 19401, 40252, 67253, 66722, 10727, 68829, 28148, 1774, 68471, 72223, 22566, 59404, 7221, 63861, 68299, 42953, 39045, 1390, 3218, 47546, 8723, 76236, 55726, 22962, 29347, 22326, 65471, 63408, 76421, 49808, 36688, 18391, 75777, 10632, 41815, 1106, 10073, 65498, 36383, 9891, 53403, 18408, 68264, 28249, 65005, 54778, 1527, 64397, 10648, 66605, 10859, 22320, 52582, 47539, 45228, 55651, 1507, 36428, 29344, 66177, 67159, 33245, 33208, 52560, 10846, 49791, 44906, 64065, 66340, 43282, 2949, 44143, 24384, 22649, 28328, 59083, 75324, 62809, 20202, 66615, 39934, 34143, 64395, 20213, 43162, 44845, 43569, 28601, 3167, 19002, 49587, 74863, 18055, 2835, 37803, 71441, 66804, 49461, 39252, 41788, 53577, 39859, 18498, 41914, 52187, 52571, 29373, 68746, 47753, 65723, 23360, 19405, 13842, 65133, 7408, 73075, 42978, 71549, 68193, 56362, 8297, 74488, 3474, 43473, 39308, 19375, 23472, 18122, 19477, 1823, 56567, 10491, 34961, 18569, 22760, 74778, 13311, 63823, 1152, 47057, 64969, 24402, 75814, 65610, 2019, 60500, 20225, 34736, 46625, 23222, 49087, 58427, 22335, 29213, 1376, 58365, 1418, 16487, 27869, 15952, 15707, 41868, 56877, 41920, 19365, 16691, 32441, 76489, 41582, 39217, 42051, 73446, 56288, 74973, 47254, 42176, 6079, 75669, 3534, 52353, 75084, 65407, 39179, 56678, 19013, 31984, 55049, 66769, 25822, 16541, 27946, 23539, 43455, 912, 63149, 4487, 56798, 19463, 17807, 45016, 52272, 22902, 10565, 31873, 26243, 58405, 20157, 12846, 59417, 28520, 1702, 20016, 66546, 47517, 67177, 34127, 58869, 37465, 63562, 945, 1535, 64367, 36416, 17955, 27856, 13801, 65440, 26165, 45078, 1413, 13164, 42018, 55746, 46790, 23144, 10754, 52580, 41125, 20139, 66996, 74357, 1895, 10697, 9646, 4427, 74686, 71692, 34769, 52382, 21171, 18107, 26063, 33235, 63246, 3369, 16573, 18459, 40033, 28381, 58479, 71256, 43454, 1884, 64190, 44200, 10640, 49609, 22976, 43543, 2373, 74303, 73432, 73579, 23799, 35160, 47085, 17856, 26712, 60658, 64732, 17925, 9580, 66686, 42020, 49632, 3450, 22190, 21145, 23290, 1435, 1258, 68749, 12234, 3132, 1676, 22942), '0.00', True, '1/2335/%', True, '1/2335/%', ('waiting', 'confirmed', 'partially_available', 'assigned'), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL))' with params: [(74724, 44817, 22882, 22235, 63278, 18893, 32120, 41201, 76162, 55518, 26639, 66532, 45073, 47222, 63684, 68779, 20085, 2324, 74103, 3175, 39528, 22955, 69392, 59357, 69313, 23820, 56565, 53824, 53410, 64060, 71596, 62219, 58379, 49551, 23790, 34678, 22738, 22604, 43163, 18434, 63247, 21254, 52114, 5797, 64095, 56359, 3597, 10932, 60286, 67055, 23480, 23745, 73275, 30433, 37884, 53442, 54839, 7448, 13298, 22518, 18102, 20278, 68446, 9093, 22276, 75518, 69207, 13157, 43260, 1703, 16509, 28370, 47454, 44902, 18172, 28055, 34583, 36081, 19400, 40897, 34850, 65851, 32158, 16488, 19637, 24307, 64970, 46770, 18302, 63319, 18042, 20089, 62947, 23318, 43519, 58437, 13327, 22989, 22792, 68944, 9913, 68731, 10558, 62217, 60034, 10757, 58429, 16035, 27912, 55279, 13417, 54537, 20975, 75344, 54132, 21720, 72356, 73320, 21144, 36763, 18456, 40157, 34909, 33067, 64389, 34588, 7374, 63481, 50084, 10508, 39583, 39861, 2875, 13840, 39141, 65051, 69075, 11545, 55694, 55574, 21121, 18030, 65114, 49745, 12079, 2935, 64835, 21147, 23751, 53270, 13160, 72346, 52389, 39340, 63755, 26291, 47408, 56810, 53370, 52595, 52499, 65161, 40902, 47965, 58921, 62974, 23355, 13322, 26580, 23499, 35194, 29758, 15129, 12393, 27944, 59002, 64711, 8774, 29417, 9586, 35296, 53264, 15894, 42197, 5902, 68230, 38991, 5322, 20423, 22783, 2890, 53463, 13898, 1746, 52677, 40293, 64773, 67196, 75388, 66366, 63052, 49627, 47361, 65789, 71752, 33199, 16672, 33084, 56380, 13852, 75449, 41917, 47713, 39366, 26193, 52475, 49566, 15930, 66631, 39078, 73444, 64233, 63772, 5819, 29560, 74002, 13763, 9061, 1090, 60307, 37882, 76275, 68892, 74517, 45184, 47476, 18604, 18949, 18279, 58275, 21077, 29701, 39209, 14739, 22415, 19281, 62902, 17855, 49762, 56402, 35290, 36430, 15847, 21257, 43927, 8285, 55625, 26182, 23203, 4594, 56923, 47191, 9137, 24138, 37396, 58301, 3642, 28220, 43285, 21752, 72595, 72766, 43714, 75676, 19966, 20079, 12503, 29456, 23726, 63974, 63911, 64379, 12428, 12173, 20952, 1242, 65748, 34417, 18692, 41999, 1849, 49562, 68745, 66415, 29540, 53505, 3162, 11111, 36057, 20087, 56947, 68273, 28027, 28067, 47840, 71884, 63430, 55798, 19493, 10742, 54731, 22581, 42347, 62345, 65558, 74092, 34894, 3284, 19032, 3425, 16680, 17811, 53915, 66500, 60263, 63462, 45215, 3372, 52655, 11160, 34804, 36476, 12287, 19346, 10967, 3785, 26234, 4324, 12308, 10810, 39413, 64375, 18532, 73936, 45034, 1477, 65649, 45070, 43563, 18793, 52934, 23091, 22221, 58354, 42302, 26575, 15744, 52557, 22550, 23237, 55472, 60579, 43226, 60053, 28061, 2211, 69218, 66352, 9798, 63163, 26205, 69147, 8747, 39344, 22625, 63951, 23354, 10467, 64873, 52634, 15624, 29386, 55516, 35377, 75480, 37584, 3182, 58321, 15883, 3405, 60249, 53569, 42106, 13722, 64673, 20300, 13611, 3514, 64944, 11648, 20299, 74739, 63680, 67357, 10663, 35396, 75477, 34935, 23384, 12194, 36308, 4527, 72526, 71650, 71775, 5402, 63109, 11728, 13668, 73917, 32049, 47473, 8642, 1516, 49062, 34624, 71308, 40180, 73428, 63606, 31577, 53110, 10637, 2058, 73941, 38252, 20399, 65678, 1442, 47838, 35105, 5397, 43203, 28116, 72398, 59342, 64757, 74247, 23294, 13255, 23238, 72499, 19256, 46634, 37343, 47190, 1706, 62725, 65653, 53034, 53664, 22728, 65277, 66446, 55615, 15951, 73546, 49033, 75803, 4506, 36054, 19854, 72543, 37507, 71398, 40189, 65410, 39166, 13234, 2229, 27964, 68242, 37763, 16846, 49041, 59033, 52477, 74932, 19799, 26597, 22374, 58400, 37335, 52362, 11162, 61063, 22501, 62936, 18696, 66785, 40172, 3199, 27943, 2340, 72549, 34592, 42950, 24137, 10783, 63382, 21591, 17756, 929, 12245, 31601, 53424, 36159, 34660, 23493, 52447, 65426, 23114, 44129, 53331, 71694, 13207, 74682, 28659, 18976, 43732, 10975, 65631, 62755, 58940, 17786, 38951, 41941, 18874, 35019, 1445, 42160, 27837, 1220, 63295, 64059, 39751, 3599, 29375, 11173, 32018, 10753, 55544, 73663, 5903, 4693, 13267, 65575, 53435, 22781, 34867, 2228, 28071, 75629, 1879, 42509, 6147, 18636, 71281, 65692, 75008, 19320, 35069, 36184, 65394, 43407, 12300, 21236, 8687, 29319, 7258, 13771, 19905, 1764, 63585, 63936, 4429, 38024, 44231, 65460, 44843, 24230, 74655, 55272, 66600, 9125, 17922, 71955, 52184, 65461, 13163, 68267, 64010, 22521, 39385, 29452, 23415, 15793, 68316, 21729, 43253, 42377, 40119, 66598, 19260, 72988, 2183, 65082, 60635, 75238, 13032, 55589, 23754, 56949, 44229, 9032, 54065, 60228, 1224, 44737, 55337, 10269, 6246, 23268, 19418, 62970, 55508, 34683, 4578, 42231, 42493, 23609, 56689, 26114, 3084, 9135, 60962, 53658, 60439, 53741, 26162, 54758, 34309, 73660, 55573, 41750, 10991, 44282, 56750, 72127, 39909, 60169, 53363, 53663, 36453, 60670, 60697, 34612, 35006, 69238, 1769, 22808, 24390, 75446, 64939, 37446, 3603, 71445, 18394, 19015, 35083, 16610, 13911, 56659, 49665, 65122, 55311, 55511, 72321, 16012, 55882, 56677, 53768, 23352, 10787, 72896, 41614, 75812, 65056, 59086, 15904, 23229, 1211, 18265, 39103, 36150, 22283, 3024, 68697, 33234, 62748, 36495, 63410, 73026, 10785, 9087, 20458, 21162, 18899, 73873, 20414, 76492, 52264, 47545, 23486, 19401, 40252, 67253, 66722, 10727, 68829, 28148, 1774, 68471, 72223, 22566, 59404, 7221, 63861, 68299, 42953, 39045, 1390, 3218, 47546, 8723, 76236, 55726, 22962, 29347, 22326, 65471, 63408, 76421, 49808, 36688, 18391, 75777, 10632, 41815, 1106, 10073, 65498, 36383, 9891, 53403, 18408, 68264, 28249, 65005, 54778, 1527, 64397, 10648, 66605, 10859, 22320, 52582, 47539, 45228, 55651, 1507, 36428, 29344, 66177, 67159, 33245, 33208, 52560, 10846, 49791, 44906, 64065, 66340, 43282, 2949, 44143, 24384, 22649, 28328, 59083, 75324, 62809, 20202, 66615, 39934, 34143, 64395, 20213, 43162, 44845, 43569, 28601, 3167, 19002, 49587, 74863, 18055, 2835, 37803, 71441, 66804, 49461, 39252, 41788, 53577, 39859, 18498, 41914, 52187, 52571, 29373, 68746, 47753, 65723, 23360, 19405, 13842, 65133, 7408, 73075, 42978, 71549, 68193, 56362, 8297, 74488, 3474, 43473, 39308, 19375, 23472, 18122, 19477, 1823, 56567, 10491, 34961, 18569, 22760, 74778, 13311, 63823, 1152, 47057, 64969, 24402, 75814, 65610, 2019, 60500, 20225, 34736, 46625, 23222, 49087, 58427, 22335, 29213, 1376, 58365, 1418, 16487, 27869, 15952, 15707, 41868, 56877, 41920, 19365, 16691, 32441, 76489, 41582, 39217, 42051, 73446, 56288, 74973, 47254, 42176, 6079, 75669, 3534, 52353, 75084, 65407, 39179, 56678, 19013, 31984, 55049, 66769, 25822, 16541, 27946, 23539, 43455, 912, 63149, 4487, 56798, 19463, 17807, 45016, 52272, 22902, 10565, 31873, 26243, 58405, 20157, 12846, 59417, 28520, 1702, 20016, 66546, 47517, 67177, 34127, 58869, 37465, 63562, 945, 1535, 64367, 36416, 17955, 27856, 13801, 65440, 26165, 45078, 1413, 13164, 42018, 55746, 46790, 23144, 10754, 52580, 41125, 20139, 66996, 74357, 1895, 10697, 9646, 4427, 74686, 71692, 34769, 52382, 21171, 18107, 26063, 33235, 63246, 3369, 16573, 18459, 40033, 28381, 58479, 71256, 43454, 1884, 64190, 44200, 10640, 49609, 22976, 43543, 2373, 74303, 73432, 73579, 23799, 35160, 47085, 17856, 26712, 60658, 64732, 17925, 9580, 66686, 42020, 49632, 3450, 22190, 21145, 23290, 1435, 1258, 68749, 12234, 3132, 1676, 22942), '0.00', True, '1/2335/%', True, '1/2335/%', ('waiting', 'confirmed', 'partially_available', 'assigned')]>

 --------------------------------
Inverse selection of account.move(1429,) / move_type: before (("account_move"."move_type" not in %s) OR "account_move"."move_type" IS NULL) | [('out_refund', 'in_refund')] -> after ("account_move"."move_type" in %s) | [('entry', 'out_invoice', 'in_invoice', 'out_receipt', 'in_receipt')]
<osv.Query: 'SELECT "account_move".id FROM "account_move" WHERE ((((("account_move"."journal_id" = %s) AND (("account_move"."id" != %s) OR "account_move"."id" IS NULL)) AND (("account_move"."name" not in %s) AND "account_move"."name" IS NOT NULL)) AND ("account_move"."move_type" in %s)) AND ("account_move"."date" <= %s))' with params: [1409, '1429', ('/', ''), ('entry', 'out_invoice', 'in_invoice', 'out_receipt', 'in_receipt'), '2022-05-08']>

 --------------------------------
Inverse selection of account.move(1429,) / move_type: before (("account_move"."move_type" not in %s) OR "account_move"."move_type" IS NULL) | [('out_refund', 'in_refund')] -> after ("account_move"."move_type" in %s) | [('entry', 'out_invoice', 'in_invoice', 'out_receipt', 'in_receipt')]
<osv.Query: 'SELECT "account_move".id FROM "account_move" WHERE ((((("account_move"."journal_id" = %s) AND (("account_move"."id" != %s) OR "account_move"."id" IS NULL)) AND (("account_move"."name" not in %s) AND "account_move"."name" IS NOT NULL)) AND ("account_move"."move_type" in %s)) AND ("account_move"."date" <= %s))' with params: [1409, '1429', ('/', ''), ('entry', 'out_invoice', 'in_invoice', 'out_receipt', 'in_receipt'), '2022-05-08']>

 --------------------------------
Inverse selection of account.move(1429,) / move_type: before (("account_move"."move_type" not in %s) OR "account_move"."move_type" IS NULL) | [('out_refund', 'in_refund')] -> after ("account_move"."move_type" in %s) | [('entry', 'out_invoice', 'in_invoice', 'out_receipt', 'in_receipt')]
<osv.Query: 'SELECT "account_move".id FROM "account_move" WHERE ((((("account_move"."journal_id" = %s) AND (("account_move"."id" != %s) OR "account_move"."id" IS NULL)) AND (("account_move"."name" not in %s) AND "account_move"."name" IS NOT NULL)) AND ("account_move"."move_type" in %s)) AND ("account_move"."date" <= %s))' with params: [1409, '1429', ('/', ''), ('entry', 'out_invoice', 'in_invoice', 'out_receipt', 'in_receipt'), '2022-05-08']>

 --------------------------------
Inverse selection of account.invoice.report() / state: before (("account_invoice_report"."state" not in %s) OR "account_invoice_report"."state" IS NULL) | [('draft', 'cancel')] -> after (("account_invoice_report"."state" in %s) OR "account_invoice_report"."state" IS NULL) | [('posted',)]
<osv.Query: 'SELECT "account_invoice_report".id FROM (\n            SELECT\n                line.id,\n                line.move_id,\n                line.product_id,\n                line.account_id,\n                line.analytic_account_id,\n                line.journal_id,\n                line.company_id,\n                line.company_currency_id,\n                line.partner_id AS commercial_partner_id,\n                move.state,\n                move.move_type,\n                move.partner_id,\n                move.invoice_user_id,\n                move.fiscal_position_id,\n                move.payment_state,\n                move.invoice_date,\n                move.invoice_date_due,\n                uom_template.id                                             AS product_uom_id,\n                template.categ_id                                           AS product_categ_id,\n                line.quantity / NULLIF(COALESCE(uom_line.factor, 1) / COALESCE(uom_template.factor, 1), 0.0) * (CASE WHEN move.move_type IN (\'in_invoice\',\'out_refund\',\'in_receipt\') THEN -1 ELSE 1 END)\n                                                                            AS quantity,\n                -line.balance * currency_table.rate                         AS price_subtotal,\n                -COALESCE(\n                   -- Average line price\n                   (line.balance / NULLIF(line.quantity, 0.0)) * (CASE WHEN move.move_type IN (\'in_invoice\',\'out_refund\',\'in_receipt\') THEN -1 ELSE 1 END)\n                   -- convert to template uom\n                   * (NULLIF(COALESCE(uom_line.factor, 1), 0.0) / NULLIF(COALESCE(uom_template.factor, 1), 0.0)),\n                   0.0) * currency_table.rate                               AS price_average,\n                COALESCE(partner.country_id, commercial_partner.country_id) AS country_id\n        , move.team_id as team_id \n            FROM account_move_line line\n                LEFT JOIN res_partner partner ON partner.id = line.partner_id\n                LEFT JOIN product_product product ON product.id = line.product_id\n                LEFT JOIN account_account account ON account.id = line.account_id\n                LEFT JOIN account_account_type user_type ON user_type.id = account.user_type_id\n                LEFT JOIN product_template template ON template.id = product.product_tmpl_id\n                LEFT JOIN uom_uom uom_line ON uom_line.id = line.product_uom_id\n                LEFT JOIN uom_uom uom_template ON uom_template.id = template.uom_id\n                INNER JOIN account_move move ON move.id = line.move_id\n                LEFT JOIN res_partner commercial_partner ON commercial_partner.id = move.commercial_partner_id\n                JOIN (VALUES (1, 1.0, 2),(182, 1.0, 2),(184, 1.0, 2),(183, 1.0, 2)) AS currency_table(company_id, rate, precision) ON currency_table.company_id = line.company_id\n         \n            WHERE move.move_type IN (\'out_invoice\', \'out_refund\', \'in_invoice\', \'in_refund\', \'out_receipt\', \'in_receipt\')\n                AND line.account_id IS NOT NULL\n                AND NOT line.exclude_from_invoice_tab\n        ) AS "account_invoice_report" WHERE ((("account_invoice_report"."state" in %s) OR "account_invoice_report"."state" IS NULL) AND (("account_invoice_report"."move_type" = %s) OR ("account_invoice_report"."move_type" = %s)))' with params: [('posted',), 'out_invoice', 'out_refund']>

 --------------------------------
Inverse selection of mrp.production() / state: before (("mrp_production"."state" not in %s) OR "mrp_production"."state" IS NULL) | [('done', 'cancel')] -> after (("mrp_production"."state" in %s) OR "mrp_production"."state" IS NULL) | [('draft', 'confirmed', 'progress', 'to_close')]
<osv.Query: 'SELECT "mrp_production".id FROM "mrp_production" WHERE ((("mrp_production"."reservation_state" = %s) AND (("mrp_production"."state" in %s) OR "mrp_production"."state" IS NULL)) AND ("mrp_production"."picking_type_id" in %s))' with params: ['waiting', ('draft', 'confirmed', 'progress', 'to_close'), (1, 5, 2, 6, 15, 1720, 1724, 1721, 1725, 1728, 1729, 1733, 1730, 1734, 1737, 1738, 1742, 1739, 1743, 1746, 1819, 1823, 1820, 1824, 1827, 1828, 1832, 1830, 1829, 1833, 1834, 1836, 1837, 1841, 1839, 1840, 1838, 1842, 1843, 1845, 1844, 1846, 1850, 1847, 1851, 1852, 1854, 1853, 1855, 1859, 1857, 1856, 1860, 1863, 1864, 1868, 1866, 1867, 1865, 1869, 1870, 1872, 1873, 1877, 1875, 1876, 1874, 1878, 1879, 1881, 1880, 1882, 1886, 1884, 1885, 1883, 1887, 1890, 1891, 1895)]>

 --------------------------------
Inverse selection of mrp.production() / state: before (("mrp_production"."state" not in %s) OR "mrp_production"."state" IS NULL) | [('done', 'cancel')] -> after (("mrp_production"."state" in %s) OR "mrp_production"."state" IS NULL) | [('draft', 'confirmed', 'progress', 'to_close')]
<osv.Query: 'SELECT "mrp_production".id FROM "mrp_production" WHERE (((("mrp_production"."state" in %s) OR ("mrp_production"."is_planned" = %s)) AND (("mrp_production"."state" in %s) OR "mrp_production"."state" IS NULL)) AND ("mrp_production"."picking_type_id" in %s))' with params: [('confirmed', 'draft', 'progress', 'to_close'), True, ('draft', 'confirmed', 'progress', 'to_close'), (1, 5, 2, 6, 15, 1720, 1724, 1721, 1725, 1728, 1729, 1733, 1730, 1734, 1737, 1738, 1742, 1739, 1743, 1746, 1819, 1823, 1820, 1824, 1827, 1828, 1832, 1830, 1829, 1833, 1834, 1836, 1837, 1841, 1839, 1840, 1838, 1842, 1843, 1845, 1844, 1846, 1850, 1847, 1851, 1852, 1854, 1853, 1855, 1859, 1857, 1856, 1860, 1863, 1864, 1868, 1866, 1867, 1865, 1869, 1870, 1872, 1873, 1877, 1875, 1876, 1874, 1878, 1879, 1881, 1880, 1882, 1886, 1884, 1885, 1883, 1887, 1890, 1891, 1895)]>

 --------------------------------
Inverse selection of mrp.production() / state: before (("mrp_production"."state" not in %s) OR "mrp_production"."state" IS NULL) | [('done', 'cancel')] -> after (("mrp_production"."state" in %s) OR "mrp_production"."state" IS NULL) | [('draft', 'confirmed', 'progress', 'to_close')]
<osv.Query: 'SELECT "mrp_production".id FROM "mrp_production" WHERE (((("mrp_production"."date_planned_start" < %s) AND ("mrp_production"."state" = %s)) AND (("mrp_production"."state" in %s) OR "mrp_production"."state" IS NULL)) AND ("mrp_production"."picking_type_id" in %s))' with params: ['2022-05-16 00:00:00', 'confirmed', ('draft', 'confirmed', 'progress', 'to_close'), (1, 5, 2, 6, 15, 1720, 1724, 1721, 1725, 1728, 1729, 1733, 1730, 1734, 1737, 1738, 1742, 1739, 1743, 1746, 1819, 1823, 1820, 1824, 1827, 1828, 1832, 1830, 1829, 1833, 1834, 1836, 1837, 1841, 1839, 1840, 1838, 1842, 1843, 1845, 1844, 1846, 1850, 1847, 1851, 1852, 1854, 1853, 1855, 1859, 1857, 1856, 1860, 1863, 1864, 1868, 1866, 1867, 1865, 1869, 1870, 1872, 1873, 1877, 1875, 1876, 1874, 1878, 1879, 1881, 1880, 1882, 1886, 1884, 1885, 1883, 1887, 1890, 1891, 1895)]>

 --------------------------------
Inverse selection of mrp.production() / state: before (("mrp_production"."state" not in %s) OR "mrp_production"."state" IS NULL) | [('done', 'cancel')] -> after (("mrp_production"."state" in %s) OR "mrp_production"."state" IS NULL) | [('draft', 'confirmed', 'progress', 'to_close')]
<osv.Query: 'SELECT "mrp_production".id FROM "mrp_production" WHERE ((("mrp_production"."reservation_state" = %s) AND (("mrp_production"."state" in %s) OR "mrp_production"."state" IS NULL)) AND ("mrp_production"."picking_type_id" in %s))' with params: ['waiting', ('draft', 'confirmed', 'progress', 'to_close'), (1, 5, 2, 6, 15, 1720, 1724, 1721, 1725, 1728, 1729, 1733, 1730, 1734, 1737, 1738, 1742, 1739, 1743, 1746, 1819, 1823, 1820, 1824, 1827, 1828, 1832, 1830, 1829, 1833, 1834, 1836, 1837, 1841, 1839, 1840, 1838, 1842, 1843, 1845, 1844, 1846, 1850, 1847, 1851, 1852, 1854, 1853, 1855, 1859, 1857, 1856, 1860, 1863, 1864, 1868, 1866, 1867, 1865, 1869, 1870, 1872, 1873, 1877, 1875, 1876, 1874, 1878, 1879, 1881, 1880, 1882, 1886, 1884, 1885, 1883, 1887, 1890, 1891, 1895)]>

 --------------------------------
Inverse selection of mrp.production() / state: before (("mrp_production"."state" not in %s) OR "mrp_production"."state" IS NULL) | [('done', 'cancel')] -> after (("mrp_production"."state" in %s) OR "mrp_production"."state" IS NULL) | [('draft', 'confirmed', 'progress', 'to_close')]
<osv.Query: 'SELECT "mrp_production".id FROM "mrp_production" WHERE (((("mrp_production"."state" in %s) OR ("mrp_production"."is_planned" = %s)) AND (("mrp_production"."state" in %s) OR "mrp_production"."state" IS NULL)) AND ("mrp_production"."picking_type_id" in %s))' with params: [('confirmed', 'draft', 'progress', 'to_close'), True, ('draft', 'confirmed', 'progress', 'to_close'), (1, 5, 2, 6, 15, 1720, 1724, 1721, 1725, 1728, 1729, 1733, 1730, 1734, 1737, 1738, 1742, 1739, 1743, 1746, 1819, 1823, 1820, 1824, 1827, 1828, 1832, 1830, 1829, 1833, 1834, 1836, 1837, 1841, 1839, 1840, 1838, 1842, 1843, 1845, 1844, 1846, 1850, 1847, 1851, 1852, 1854, 1853, 1855, 1859, 1857, 1856, 1860, 1863, 1864, 1868, 1866, 1867, 1865, 1869, 1870, 1872, 1873, 1877, 1875, 1876, 1874, 1878, 1879, 1881, 1880, 1882, 1886, 1884, 1885, 1883, 1887, 1890, 1891, 1895)]>

 --------------------------------
Inverse selection of mrp.production() / state: before (("mrp_production"."state" not in %s) OR "mrp_production"."state" IS NULL) | [('done', 'cancel')] -> after (("mrp_production"."state" in %s) OR "mrp_production"."state" IS NULL) | [('draft', 'confirmed', 'progress', 'to_close')]
<osv.Query: 'SELECT "mrp_production".id FROM "mrp_production" WHERE (((("mrp_production"."date_planned_start" < %s) AND ("mrp_production"."state" = %s)) AND (("mrp_production"."state" in %s) OR "mrp_production"."state" IS NULL)) AND ("mrp_production"."picking_type_id" in %s))' with params: ['2022-05-16 00:00:00', 'confirmed', ('draft', 'confirmed', 'progress', 'to_close'), (1, 5, 2, 6, 15, 1720, 1724, 1721, 1725, 1728, 1729, 1733, 1730, 1734, 1737, 1738, 1742, 1739, 1743, 1746, 1819, 1823, 1820, 1824, 1827, 1828, 1832, 1830, 1829, 1833, 1834, 1836, 1837, 1841, 1839, 1840, 1838, 1842, 1843, 1845, 1844, 1846, 1850, 1847, 1851, 1852, 1854, 1853, 1855, 1859, 1857, 1856, 1860, 1863, 1864, 1868, 1866, 1867, 1865, 1869, 1870, 1872, 1873, 1877, 1875, 1876, 1874, 1878, 1879, 1881, 1880, 1882, 1886, 1884, 1885, 1883, 1887, 1890, 1891, 1895)]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL))' with params: [(76487, 75584, 71971, 72307, 75551, 72371, 73030, 73941, 72730, 75034, 74103, 75366, 76476, 71914, 72595, 76290, 71810, 75843, 72847, 75891, 75464, 74240, 72848, 76393, 72626, 73100), '0.00', True, '1/2447/%', True, '1/2447/%', ('waiting', 'confirmed', 'partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL)) AND ("stock_move"."state" in %s))' with params: [(76487, 75584, 71971, 72307, 75551, 72371, 73030, 73941, 72730, 75034, 74103, 75366, 76476, 71914, 72595, 76290, 71810, 75843, 72847, 75891, 75464, 74240, 72848, 76393, 72626, 73100), '0.00', True, '1/2447/%', True, '1/2447/%', ('waiting', 'confirmed', 'partially_available', 'assigned'), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL))' with params: [(76487, 75584, 71971, 72307, 75551, 72371, 73030, 73941, 72730, 75034, 74103, 75366, 76476, 71914, 72595, 76290, 71810, 75843, 72847, 75891, 75464, 74240, 72848, 76393, 72626, 73100), '0.00', True, '1/2447/%', True, '1/2447/%', ('waiting', 'confirmed', 'partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL))' with params: [(76462, 72421, 75536, 75000, 71494, 72811, 74001, 74031, 75086, 72543, 73362, 74038, 76241, 74807, 76437, 75876, 71602, 75109, 73551, 75567, 75443, 72267, 71675, 71671, 76145, 75371, 75848, 76481, 75056, 76061, 71893, 74158, 73715, 72309, 72453, 72124, 74757, 73747, 74332, 73696, 74235, 73211, 76139, 71634), '0.00', True, '1/2503/%', True, '1/2503/%', ('waiting', 'confirmed', 'partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL)) AND ("stock_move"."state" in %s))' with params: [(76462, 72421, 75536, 75000, 71494, 72811, 74001, 74031, 75086, 72543, 73362, 74038, 76241, 74807, 76437, 75876, 71602, 75109, 73551, 75567, 75443, 72267, 71675, 71671, 76145, 75371, 75848, 76481, 75056, 76061, 71893, 74158, 73715, 72309, 72453, 72124, 74757, 73747, 74332, 73696, 74235, 73211, 76139, 71634), '0.00', True, '1/2503/%', True, '1/2503/%', ('waiting', 'confirmed', 'partially_available', 'assigned'), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL))' with params: [(76462, 72421, 75536, 75000, 71494, 72811, 74001, 74031, 75086, 72543, 73362, 74038, 76241, 74807, 76437, 75876, 71602, 75109, 73551, 75567, 75443, 72267, 71675, 71671, 76145, 75371, 75848, 76481, 75056, 76061, 71893, 74158, 73715, 72309, 72453, 72124, 74757, 73747, 74332, 73696, 74235, 73211, 76139, 71634), '0.00', True, '1/2503/%', True, '1/2503/%', ('waiting', 'confirmed', 'partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL))' with params: [(74535, 73069, 74955, 71762, 74764, 76281, 71521, 74340, 72558, 75160, 75878), '0.00', True, '1/2319/%', True, '1/2319/%', ('waiting', 'confirmed', 'partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL)) AND ("stock_move"."state" in %s))' with params: [(74535, 73069, 74955, 71762, 74764, 76281, 71521, 74340, 72558, 75160, 75878), '0.00', True, '1/2319/%', True, '1/2319/%', ('waiting', 'confirmed', 'partially_available', 'assigned'), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL))' with params: [(74535, 73069, 74955, 71762, 74764, 76281, 71521, 74340, 72558, 75160, 75878), '0.00', True, '1/2319/%', True, '1/2319/%', ('waiting', 'confirmed', 'partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL))' with params: [(73482, 73134, 73564, 74780, 74264, 73228, 75584, 75261, 73473, 73731, 75273, 71825, 73262), '0.00', True, '1/2439/%', True, '1/2439/%', ('waiting', 'confirmed', 'partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL)) AND ("stock_move"."state" in %s))' with params: [(73482, 73134, 73564, 74780, 74264, 73228, 75584, 75261, 73473, 73731, 75273, 71825, 73262), '0.00', True, '1/2439/%', True, '1/2439/%', ('waiting', 'confirmed', 'partially_available', 'assigned'), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL))' with params: [(73482, 73134, 73564, 74780, 74264, 73228, 75584, 75261, 73473, 73731, 75273, 71825, 73262), '0.00', True, '1/2439/%', True, '1/2439/%', ('waiting', 'confirmed', 'partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL))' with params: [(73855, 73930, 74019, 76233, 75743, 76036, 74119, 75653, 71665, 71780, 74792, 71930, 72555, 76370, 74973, 73963), '0.00', True, '1/2415/%', True, '1/2415/%', ('waiting', 'confirmed', 'partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL)) AND ("stock_move"."state" in %s))' with params: [(73855, 73930, 74019, 76233, 75743, 76036, 74119, 75653, 71665, 71780, 74792, 71930, 72555, 76370, 74973, 73963), '0.00', True, '1/2415/%', True, '1/2415/%', ('waiting', 'confirmed', 'partially_available', 'assigned'), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL))' with params: [(73855, 73930, 74019, 76233, 75743, 76036, 74119, 75653, 71665, 71780, 74792, 71930, 72555, 76370, 74973, 73963), '0.00', True, '1/2415/%', True, '1/2415/%', ('waiting', 'confirmed', 'partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL))' with params: [(73288, 76041, 75860, 71766, 71954, 72258, 72042, 71984, 75884, 76012, 73090, 72646, 75721, 74411, 73212, 74349, 72174, 75085, 71549, 72171, 72128, 71913, 74889, 71821, 75620, 73740, 74695), '0.00', True, '1/2335/%', True, '1/2335/%', ('waiting', 'confirmed', 'partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL)) AND ("stock_move"."state" in %s))' with params: [(73288, 76041, 75860, 71766, 71954, 72258, 72042, 71984, 75884, 76012, 73090, 72646, 75721, 74411, 73212, 74349, 72174, 75085, 71549, 72171, 72128, 71913, 74889, 71821, 75620, 73740, 74695), '0.00', True, '1/2335/%', True, '1/2335/%', ('waiting', 'confirmed', 'partially_available', 'assigned'), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL))' with params: [(73288, 76041, 75860, 71766, 71954, 72258, 72042, 71984, 75884, 76012, 73090, 72646, 75721, 74411, 73212, 74349, 72174, 75085, 71549, 72171, 72128, 71913, 74889, 71821, 75620, 73740, 74695), '0.00', True, '1/2335/%', True, '1/2335/%', ('waiting', 'confirmed', 'partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL))' with params: [(75787, 73858, 73832, 71600, 74374, 71979, 75663, 72236, 75629, 76482, 73819, 72984, 72030, 74853, 72171), '0.00', True, '1/2479/%', True, '1/2479/%', ('waiting', 'confirmed', 'partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL)) AND ("stock_move"."state" in %s))' with params: [(75787, 73858, 73832, 71600, 74374, 71979, 75663, 72236, 75629, 76482, 73819, 72984, 72030, 74853, 72171), '0.00', True, '1/2479/%', True, '1/2479/%', ('waiting', 'confirmed', 'partially_available', 'assigned'), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL))' with params: [(75787, 73858, 73832, 71600, 74374, 71979, 75663, 72236, 75629, 76482, 73819, 72984, 72030, 74853, 72171), '0.00', True, '1/2479/%', True, '1/2479/%', ('waiting', 'confirmed', 'partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL))' with params: [(72312, 75830, 71781, 72520, 75114, 75749, 74909, 71514, 75161, 74948, 71919, 74323, 75919, 76228, 74235, 71653, 76333, 74301, 73549, 72733, 76321, 73724, 76311, 75640, 71581, 74599, 75273, 74897, 73075, 71810, 75277, 73579, 72843, 76061, 75038, 71838, 74443, 72158, 75791, 75565, 76012, 74987, 73772, 72242, 71680, 72490, 71979, 74796, 76233, 72675, 75123, 73455, 75505, 75605, 75554, 72709, 73383, 74246, 74589, 74300, 75574, 76369, 75918, 72761, 74975, 75103, 73944, 74303, 75233, 75865, 71937, 74401, 75652, 75465, 74851, 71832, 72623, 74062, 74254, 73740, 74883, 74915, 74332, 74976, 74208, 75227, 71880, 71682, 76202), '0.00', True, '1/2463/%', True, '1/2463/%', ('waiting', 'confirmed', 'partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL)) AND ("stock_move"."state" in %s))' with params: [(72312, 75830, 71781, 72520, 75114, 75749, 74909, 71514, 75161, 74948, 71919, 74323, 75919, 76228, 74235, 71653, 76333, 74301, 73549, 72733, 76321, 73724, 76311, 75640, 71581, 74599, 75273, 74897, 73075, 71810, 75277, 73579, 72843, 76061, 75038, 71838, 74443, 72158, 75791, 75565, 76012, 74987, 73772, 72242, 71680, 72490, 71979, 74796, 76233, 72675, 75123, 73455, 75505, 75605, 75554, 72709, 73383, 74246, 74589, 74300, 75574, 76369, 75918, 72761, 74975, 75103, 73944, 74303, 75233, 75865, 71937, 74401, 75652, 75465, 74851, 71832, 72623, 74062, 74254, 73740, 74883, 74915, 74332, 74976, 74208, 75227, 71880, 71682, 76202), '0.00', True, '1/2463/%', True, '1/2463/%', ('waiting', 'confirmed', 'partially_available', 'assigned'), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL))' with params: [(72312, 75830, 71781, 72520, 75114, 75749, 74909, 71514, 75161, 74948, 71919, 74323, 75919, 76228, 74235, 71653, 76333, 74301, 73549, 72733, 76321, 73724, 76311, 75640, 71581, 74599, 75273, 74897, 73075, 71810, 75277, 73579, 72843, 76061, 75038, 71838, 74443, 72158, 75791, 75565, 76012, 74987, 73772, 72242, 71680, 72490, 71979, 74796, 76233, 72675, 75123, 73455, 75505, 75605, 75554, 72709, 73383, 74246, 74589, 74300, 75574, 76369, 75918, 72761, 74975, 75103, 73944, 74303, 75233, 75865, 71937, 74401, 75652, 75465, 74851, 71832, 72623, 74062, 74254, 73740, 74883, 74915, 74332, 74976, 74208, 75227, 71880, 71682, 76202), '0.00', True, '1/2463/%', True, '1/2463/%', ('waiting', 'confirmed', 'partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL))' with params: [(75143, 72449, 72240, 75379), '0.00', True, '1/2423/%', True, '1/2423/%', ('waiting', 'confirmed', 'partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL)) AND ("stock_move"."state" in %s))' with params: [(75143, 72449, 72240, 75379), '0.00', True, '1/2423/%', True, '1/2423/%', ('waiting', 'confirmed', 'partially_available', 'assigned'), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL))' with params: [(75143, 72449, 72240, 75379), '0.00', True, '1/2423/%', True, '1/2423/%', ('waiting', 'confirmed', 'partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL))' with params: [(72267, 73562, 76367, 74014, 72758, 72626, 74244, 73584, 73976, 73473, 76392, 73090, 72132, 74869, 72780, 73929, 74843, 75055, 71591, 73483, 72675, 74763, 72801, 73040, 75028, 76494, 73000, 76486, 72727, 71896, 75787, 73564, 71838, 74600, 72591, 75736, 74888, 73859, 76072, 73547, 75005, 73166, 71769, 75023, 72456, 72015, 73749, 75083, 75776, 76249, 73456, 72999, 75449, 71514, 73606, 75029, 71550, 75760, 72255, 76228, 75681, 71707), '0.00', True, '1/2471/%', True, '1/2471/%', ('waiting', 'confirmed', 'partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL)) AND ("stock_move"."state" in %s))' with params: [(72267, 73562, 76367, 74014, 72758, 72626, 74244, 73584, 73976, 73473, 76392, 73090, 72132, 74869, 72780, 73929, 74843, 75055, 71591, 73483, 72675, 74763, 72801, 73040, 75028, 76494, 73000, 76486, 72727, 71896, 75787, 73564, 71838, 74600, 72591, 75736, 74888, 73859, 76072, 73547, 75005, 73166, 71769, 75023, 72456, 72015, 73749, 75083, 75776, 76249, 73456, 72999, 75449, 71514, 73606, 75029, 71550, 75760, 72255, 76228, 75681, 71707), '0.00', True, '1/2471/%', True, '1/2471/%', ('waiting', 'confirmed', 'partially_available', 'assigned'), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL))' with params: [(72267, 73562, 76367, 74014, 72758, 72626, 74244, 73584, 73976, 73473, 76392, 73090, 72132, 74869, 72780, 73929, 74843, 75055, 71591, 73483, 72675, 74763, 72801, 73040, 75028, 76494, 73000, 76486, 72727, 71896, 75787, 73564, 71838, 74600, 72591, 75736, 74888, 73859, 76072, 73547, 75005, 73166, 71769, 75023, 72456, 72015, 73749, 75083, 75776, 76249, 73456, 72999, 75449, 71514, 73606, 75029, 71550, 75760, 72255, 76228, 75681, 71707), '0.00', True, '1/2471/%', True, '1/2471/%', ('waiting', 'confirmed', 'partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL))' with params: [(71749, 73422, 75366, 74353, 72904, 72060, 73392, 73938, 76404, 76196, 75913, 74692, 75151, 74485, 75578, 76297, 76137, 75866, 75017, 72845, 73252, 76093, 71842, 73046, 76061, 73474, 72918, 71570, 75607, 73593, 72013, 73144, 73332, 76355, 72173, 75468, 73028, 71932, 76385, 74772, 76111, 72575, 75776, 74543, 75935, 72836, 75160, 73447, 76273, 75817), '0.00', True, '1/2495/%', True, '1/2495/%', ('waiting', 'confirmed', 'partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL)) AND ("stock_move"."state" in %s))' with params: [(71749, 73422, 75366, 74353, 72904, 72060, 73392, 73938, 76404, 76196, 75913, 74692, 75151, 74485, 75578, 76297, 76137, 75866, 75017, 72845, 73252, 76093, 71842, 73046, 76061, 73474, 72918, 71570, 75607, 73593, 72013, 73144, 73332, 76355, 72173, 75468, 73028, 71932, 76385, 74772, 76111, 72575, 75776, 74543, 75935, 72836, 75160, 73447, 76273, 75817), '0.00', True, '1/2495/%', True, '1/2495/%', ('waiting', 'confirmed', 'partially_available', 'assigned'), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL))' with params: [(71749, 73422, 75366, 74353, 72904, 72060, 73392, 73938, 76404, 76196, 75913, 74692, 75151, 74485, 75578, 76297, 76137, 75866, 75017, 72845, 73252, 76093, 71842, 73046, 76061, 73474, 72918, 71570, 75607, 73593, 72013, 73144, 73332, 76355, 72173, 75468, 73028, 71932, 76385, 74772, 76111, 72575, 75776, 74543, 75935, 72836, 75160, 73447, 76273, 75817), '0.00', True, '1/2495/%', True, '1/2495/%', ('waiting', 'confirmed', 'partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL))' with params: [(71937, 72985, 71682, 72186, 72785, 75765, 72336, 72723, 73076, 74165, 73581, 72190, 75012, 76072, 71636, 75091, 75160, 74424, 74539, 71585, 72481, 71781, 75735, 74463, 72544, 74062, 75656, 73594, 75477, 74938, 75888, 74763, 75613, 75848, 74314, 72780, 72132, 72933, 73442, 72227, 74387, 72137, 75105, 73966, 75671, 76208, 74979, 72950, 76344), '0.00', True, '1/2327/%', True, '1/2327/%', ('waiting', 'confirmed', 'partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL)) AND ("stock_move"."state" in %s))' with params: [(71937, 72985, 71682, 72186, 72785, 75765, 72336, 72723, 73076, 74165, 73581, 72190, 75012, 76072, 71636, 75091, 75160, 74424, 74539, 71585, 72481, 71781, 75735, 74463, 72544, 74062, 75656, 73594, 75477, 74938, 75888, 74763, 75613, 75848, 74314, 72780, 72132, 72933, 73442, 72227, 74387, 72137, 75105, 73966, 75671, 76208, 74979, 72950, 76344), '0.00', True, '1/2327/%', True, '1/2327/%', ('waiting', 'confirmed', 'partially_available', 'assigned'), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL))' with params: [(71937, 72985, 71682, 72186, 72785, 75765, 72336, 72723, 73076, 74165, 73581, 72190, 75012, 76072, 71636, 75091, 75160, 74424, 74539, 71585, 72481, 71781, 75735, 74463, 72544, 74062, 75656, 73594, 75477, 74938, 75888, 74763, 75613, 75848, 74314, 72780, 72132, 72933, 73442, 72227, 74387, 72137, 75105, 73966, 75671, 76208, 74979, 72950, 76344), '0.00', True, '1/2327/%', True, '1/2327/%', ('waiting', 'confirmed', 'partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL))' with params: [(73701, 71568, 74517, 72060, 72940, 73816, 73091, 75123, 76002, 72962, 74692, 72344, 73679, 71806, 75596, 73174, 75409, 72677, 76145, 72030, 72771, 75607, 75948, 75107, 72773, 73589, 76137, 72586, 75161, 72564), '0.00', True, '1/2455/%', True, '1/2455/%', ('waiting', 'confirmed', 'partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL)) AND ("stock_move"."state" in %s))' with params: [(73701, 71568, 74517, 72060, 72940, 73816, 73091, 75123, 76002, 72962, 74692, 72344, 73679, 71806, 75596, 73174, 75409, 72677, 76145, 72030, 72771, 75607, 75948, 75107, 72773, 73589, 76137, 72586, 75161, 72564), '0.00', True, '1/2455/%', True, '1/2455/%', ('waiting', 'confirmed', 'partially_available', 'assigned'), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL))' with params: [(73701, 71568, 74517, 72060, 72940, 73816, 73091, 75123, 76002, 72962, 74692, 72344, 73679, 71806, 75596, 73174, 75409, 72677, 76145, 72030, 72771, 75607, 75948, 75107, 72773, 73589, 76137, 72586, 75161, 72564), '0.00', True, '1/2455/%', True, '1/2455/%', ('waiting', 'confirmed', 'partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL))' with params: [(73917, 75468, 76346, 72421, 75241, 72013, 72024, 76426, 73198, 76434, 75710, 72205, 74246, 72987, 72174, 72463, 71777, 74031, 73944, 72713, 71782, 73964), '0.00', True, '1/2431/%', True, '1/2431/%', ('waiting', 'confirmed', 'partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL)) AND ("stock_move"."state" in %s))' with params: [(73917, 75468, 76346, 72421, 75241, 72013, 72024, 76426, 73198, 76434, 75710, 72205, 74246, 72987, 72174, 72463, 71777, 74031, 73944, 72713, 71782, 73964), '0.00', True, '1/2431/%', True, '1/2431/%', ('waiting', 'confirmed', 'partially_available', 'assigned'), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL))' with params: [(73917, 75468, 76346, 72421, 75241, 72013, 72024, 76426, 73198, 76434, 75710, 72205, 74246, 72987, 72174, 72463, 71777, 74031, 73944, 72713, 71782, 73964), '0.00', True, '1/2431/%', True, '1/2431/%', ('waiting', 'confirmed', 'partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL))' with params: [(73252, 72173, 71924, 74138, 71853, 72887, 74432, 72677, 75997, 74562, 71899, 76208, 71843, 73788, 74469, 72185, 74504, 74109, 75551, 71609, 73015, 75103, 73302, 73281), '0.00', True, '1/2487/%', True, '1/2487/%', ('waiting', 'confirmed', 'partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL)) AND ("stock_move"."state" in %s))' with params: [(73252, 72173, 71924, 74138, 71853, 72887, 74432, 72677, 75997, 74562, 71899, 76208, 71843, 73788, 74469, 72185, 74504, 74109, 75551, 71609, 73015, 75103, 73302, 73281), '0.00', True, '1/2487/%', True, '1/2487/%', ('waiting', 'confirmed', 'partially_available', 'assigned'), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL))' with params: [(73252, 72173, 71924, 74138, 71853, 72887, 74432, 72677, 75997, 74562, 71899, 76208, 71843, 73788, 74469, 72185, 74504, 74109, 75551, 71609, 73015, 75103, 73302, 73281), '0.00', True, '1/2487/%', True, '1/2487/%', ('waiting', 'confirmed', 'partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL))' with params: [(75445, 74491, 75917, 71884, 73711, 75935, 74587, 72948, 75411, 71555, 74798, 74732, 73040, 75637, 74216, 75971, 73198, 71685, 76393, 72308, 74249, 75480, 72354, 76370, 72646, 72911, 73695), '0.00', True, '1/2407/%', True, '1/2407/%', ('waiting', 'confirmed', 'partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL)) AND ("stock_move"."state" in %s))' with params: [(75445, 74491, 75917, 71884, 73711, 75935, 74587, 72948, 75411, 71555, 74798, 74732, 73040, 75637, 74216, 75971, 73198, 71685, 76393, 72308, 74249, 75480, 72354, 76370, 72646, 72911, 73695), '0.00', True, '1/2407/%', True, '1/2407/%', ('waiting', 'confirmed', 'partially_available', 'assigned'), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL))' with params: [(75445, 74491, 75917, 71884, 73711, 75935, 74587, 72948, 75411, 71555, 74798, 74732, 73040, 75637, 74216, 75971, 73198, 71685, 76393, 72308, 74249, 75480, 72354, 76370, 72646, 72911, 73695), '0.00', True, '1/2407/%', True, '1/2407/%', ('waiting', 'confirmed', 'partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL))' with params: [(39, 38), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL)) AND ("stock_move"."state" in %s))' with params: [(39, 38), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned'), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL))' with params: [(39, 38), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL))' with params: [(75200, 72452, 76375), '0.00', True, '1/2319/%', True, '1/2319/%', ('waiting', 'confirmed', 'partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL)) AND ("stock_move"."state" in %s))' with params: [(75200, 72452, 76375), '0.00', True, '1/2319/%', True, '1/2319/%', ('waiting', 'confirmed', 'partially_available', 'assigned'), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL))' with params: [(75200, 72452, 76375), '0.00', True, '1/2319/%', True, '1/2319/%', ('waiting', 'confirmed', 'partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL))' with params: [(72976, 72142, 76019, 75710, 72878), '0.00', True, '1/2487/%', True, '1/2487/%', ('waiting', 'confirmed', 'partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL)) AND ("stock_move"."state" in %s))' with params: [(72976, 72142, 76019, 75710, 72878), '0.00', True, '1/2487/%', True, '1/2487/%', ('waiting', 'confirmed', 'partially_available', 'assigned'), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL))' with params: [(72976, 72142, 76019, 75710, 72878), '0.00', True, '1/2487/%', True, '1/2487/%', ('waiting', 'confirmed', 'partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL))' with params: [(73343, 75997, 72950, 71636, 74368, 75121, 75888, 73120, 76302, 72086, 73803, 75000, 75023), '0.00', True, '1/2495/%', True, '1/2495/%', ('waiting', 'confirmed', 'partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL)) AND ("stock_move"."state" in %s))' with params: [(73343, 75997, 72950, 71636, 74368, 75121, 75888, 73120, 76302, 72086, 73803, 75000, 75023), '0.00', True, '1/2495/%', True, '1/2495/%', ('waiting', 'confirmed', 'partially_available', 'assigned'), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL))' with params: [(73343, 75997, 72950, 71636, 74368, 75121, 75888, 73120, 76302, 72086, 73803, 75000, 75023), '0.00', True, '1/2495/%', True, '1/2495/%', ('waiting', 'confirmed', 'partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL))' with params: [(73075, 72617, 75468, 73055, 72826, 72767, 74182, 72247, 75734, 73921, 76240, 73258, 73171, 74056, 73722, 76150, 73551, 72689, 72547, 74704), '0.00', True, '1/2447/%', True, '1/2447/%', ('waiting', 'confirmed', 'partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL)) AND ("stock_move"."state" in %s))' with params: [(73075, 72617, 75468, 73055, 72826, 72767, 74182, 72247, 75734, 73921, 76240, 73258, 73171, 74056, 73722, 76150, 73551, 72689, 72547, 74704), '0.00', True, '1/2447/%', True, '1/2447/%', ('waiting', 'confirmed', 'partially_available', 'assigned'), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: before (("stock_move"."state" not in %s) OR "stock_move"."state" IS NULL) | [('draft', 'cancel', 'done')] -> after (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL) | [('waiting', 'confirmed', 'partially_available', 'assigned')]
<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND (("stock_move"."state" in %s) OR "stock_move"."state" IS NULL))' with params: [(73075, 72617, 75468, 73055, 72826, 72767, 74182, 72247, 75734, 73921, 76240, 73258, 73171, 74056, 73722, 76150, 73551, 72689, 72547, 74704), '0.00', True, '1/2447/%', True, '1/2447/%', ('waiting', 'confirmed', 'partially_available', 'assigned')]>

 --------------------------------
