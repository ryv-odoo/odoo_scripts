Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_channel.py", line 606, in _notify_thread
    rdata = super(Channel, self)._notify_thread(message, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (1,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 438, in _send
    mail._postprocess_sent_message(success_pids=success_pids, failure_type=failure_type)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 175, in _postprocess_sent_message
    notifications = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (1,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/odoo/tests/common.py", line 1722, in wrapper
    func(*args, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/tests/test_mail_composer.py", line 72, in test_mail_mass_mode_compose_with_mso
    composer._action_send_mail()
  File "/home/odoo/Documents/dev/odoo/addons/mail/wizard/mail_compose_message.py", line 324, in _action_send_mail
    batch_mails_sudo.send(auto_commit=auto_commit)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (2,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/tests/test_mail_composer.py", line 72, in test_mail_mass_mode_compose_with_mso
    composer._action_send_mail()
  File "/home/odoo/Documents/dev/odoo/addons/mail/wizard/mail_compose_message.py", line 324, in _action_send_mail
    batch_mails_sudo.send(auto_commit=auto_commit)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 438, in _send
    mail._postprocess_sent_message(success_pids=success_pids, failure_type=failure_type)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 175, in _postprocess_sent_message
    notifications = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (2,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 1861, in message_post
    self._notify_thread(new_message, msg_values, **notif_kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (3,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 438, in _send
    mail._postprocess_sent_message(success_pids=success_pids, failure_type=failure_type)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 175, in _postprocess_sent_message
    notifications = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (3,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/auth_signup/models/res_users.py", line 243, in create
    users_with_email.with_context(create_user=True).action_reset_password()
  File "/home/odoo/Documents/dev/odoo/addons/auth_signup/models/res_users.py", line 202, in action_reset_password
    template.send_mail(user.id, force_send=force_send, raise_exception=True, email_values=email_values)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_template.py", line 337, in send_mail
    mail.send(raise_exception=raise_exception)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (4,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/auth_signup/models/res_users.py", line 243, in create
    users_with_email.with_context(create_user=True).action_reset_password()
  File "/home/odoo/Documents/dev/odoo/addons/auth_signup/models/res_users.py", line 202, in action_reset_password
    template.send_mail(user.id, force_send=force_send, raise_exception=True, email_values=email_values)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_template.py", line 337, in send_mail
    mail.send(raise_exception=raise_exception)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (11,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/auth_signup/models/res_users.py", line 243, in create
    users_with_email.with_context(create_user=True).action_reset_password()
  File "/home/odoo/Documents/dev/odoo/addons/auth_signup/models/res_users.py", line 202, in action_reset_password
    template.send_mail(user.id, force_send=force_send, raise_exception=True, email_values=email_values)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_template.py", line 337, in send_mail
    mail.send(raise_exception=raise_exception)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (12,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/auth_signup/models/res_users.py", line 243, in create
    users_with_email.with_context(create_user=True).action_reset_password()
  File "/home/odoo/Documents/dev/odoo/addons/auth_signup/models/res_users.py", line 202, in action_reset_password
    template.send_mail(user.id, force_send=force_send, raise_exception=True, email_values=email_values)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_template.py", line 337, in send_mail
    mail.send(raise_exception=raise_exception)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (13,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/auth_signup/models/res_users.py", line 243, in create
    users_with_email.with_context(create_user=True).action_reset_password()
  File "/home/odoo/Documents/dev/odoo/addons/auth_signup/models/res_users.py", line 202, in action_reset_password
    template.send_mail(user.id, force_send=force_send, raise_exception=True, email_values=email_values)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_template.py", line 337, in send_mail
    mail.send(raise_exception=raise_exception)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (14,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/auth_signup/models/res_users.py", line 243, in create
    users_with_email.with_context(create_user=True).action_reset_password()
  File "/home/odoo/Documents/dev/odoo/addons/auth_signup/models/res_users.py", line 202, in action_reset_password
    template.send_mail(user.id, force_send=force_send, raise_exception=True, email_values=email_values)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_template.py", line 337, in send_mail
    mail.send(raise_exception=raise_exception)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (16,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/auth_signup/models/res_users.py", line 243, in create
    users_with_email.with_context(create_user=True).action_reset_password()
  File "/home/odoo/Documents/dev/odoo/addons/auth_signup/models/res_users.py", line 202, in action_reset_password
    template.send_mail(user.id, force_send=force_send, raise_exception=True, email_values=email_values)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_template.py", line 337, in send_mail
    mail.send(raise_exception=raise_exception)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (24,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/auth_signup/models/res_users.py", line 243, in create
    users_with_email.with_context(create_user=True).action_reset_password()
  File "/home/odoo/Documents/dev/odoo/addons/auth_signup/models/res_users.py", line 202, in action_reset_password
    template.send_mail(user.id, force_send=force_send, raise_exception=True, email_values=email_values)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_template.py", line 337, in send_mail
    mail.send(raise_exception=raise_exception)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (25,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/auth_signup/models/res_users.py", line 243, in create
    users_with_email.with_context(create_user=True).action_reset_password()
  File "/home/odoo/Documents/dev/odoo/addons/auth_signup/models/res_users.py", line 202, in action_reset_password
    template.send_mail(user.id, force_send=force_send, raise_exception=True, email_values=email_values)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_template.py", line 337, in send_mail
    mail.send(raise_exception=raise_exception)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (26,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/auth_signup/models/res_users.py", line 243, in create
    users_with_email.with_context(create_user=True).action_reset_password()
  File "/home/odoo/Documents/dev/odoo/addons/auth_signup/models/res_users.py", line 202, in action_reset_password
    template.send_mail(user.id, force_send=force_send, raise_exception=True, email_values=email_values)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_template.py", line 337, in send_mail
    mail.send(raise_exception=raise_exception)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (27,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/auth_signup/models/res_users.py", line 243, in create
    users_with_email.with_context(create_user=True).action_reset_password()
  File "/home/odoo/Documents/dev/odoo/addons/auth_signup/models/res_users.py", line 202, in action_reset_password
    template.send_mail(user.id, force_send=force_send, raise_exception=True, email_values=email_values)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_template.py", line 337, in send_mail
    mail.send(raise_exception=raise_exception)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (28,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/auth_signup/models/res_users.py", line 243, in create
    users_with_email.with_context(create_user=True).action_reset_password()
  File "/home/odoo/Documents/dev/odoo/addons/auth_signup/models/res_users.py", line 202, in action_reset_password
    template.send_mail(user.id, force_send=force_send, raise_exception=True, email_values=email_values)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_template.py", line 337, in send_mail
    mail.send(raise_exception=raise_exception)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (29,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/auth_signup/models/res_users.py", line 243, in create
    users_with_email.with_context(create_user=True).action_reset_password()
  File "/home/odoo/Documents/dev/odoo/addons/auth_signup/models/res_users.py", line 202, in action_reset_password
    template.send_mail(user.id, force_send=force_send, raise_exception=True, email_values=email_values)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_template.py", line 337, in send_mail
    mail.send(raise_exception=raise_exception)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (30,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/auth_signup/models/res_users.py", line 243, in create
    users_with_email.with_context(create_user=True).action_reset_password()
  File "/home/odoo/Documents/dev/odoo/addons/auth_signup/models/res_users.py", line 202, in action_reset_password
    template.send_mail(user.id, force_send=force_send, raise_exception=True, email_values=email_values)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_template.py", line 337, in send_mail
    mail.send(raise_exception=raise_exception)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (31,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/auth_signup/models/res_users.py", line 243, in create
    users_with_email.with_context(create_user=True).action_reset_password()
  File "/home/odoo/Documents/dev/odoo/addons/auth_signup/models/res_users.py", line 202, in action_reset_password
    template.send_mail(user.id, force_send=force_send, raise_exception=True, email_values=email_values)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_template.py", line 337, in send_mail
    mail.send(raise_exception=raise_exception)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (32,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 1984, in message_notify
    MailThread._notify_thread(new_message, msg_values, **notif_kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (33,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 438, in _send
    mail._postprocess_sent_message(success_pids=success_pids, failure_type=failure_type)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 175, in _postprocess_sent_message
    notifications = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (33,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 1984, in message_notify
    MailThread._notify_thread(new_message, msg_values, **notif_kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (34,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 438, in _send
    mail._postprocess_sent_message(success_pids=success_pids, failure_type=failure_type)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 175, in _postprocess_sent_message
    notifications = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (34,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 1984, in message_notify
    MailThread._notify_thread(new_message, msg_values, **notif_kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (35,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 438, in _send
    mail._postprocess_sent_message(success_pids=success_pids, failure_type=failure_type)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 175, in _postprocess_sent_message
    notifications = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (35,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 1984, in message_notify
    MailThread._notify_thread(new_message, msg_values, **notif_kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (36,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 438, in _send
    mail._postprocess_sent_message(success_pids=success_pids, failure_type=failure_type)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 175, in _postprocess_sent_message
    notifications = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (36,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 1984, in message_notify
    MailThread._notify_thread(new_message, msg_values, **notif_kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (37,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 438, in _send
    mail._postprocess_sent_message(success_pids=success_pids, failure_type=failure_type)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 175, in _postprocess_sent_message
    notifications = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (37,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 1984, in message_notify
    MailThread._notify_thread(new_message, msg_values, **notif_kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (38,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 438, in _send
    mail._postprocess_sent_message(success_pids=success_pids, failure_type=failure_type)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 175, in _postprocess_sent_message
    notifications = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (38,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 1984, in message_notify
    MailThread._notify_thread(new_message, msg_values, **notif_kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (39,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 438, in _send
    mail._postprocess_sent_message(success_pids=success_pids, failure_type=failure_type)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 175, in _postprocess_sent_message
    notifications = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (39,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 1984, in message_notify
    MailThread._notify_thread(new_message, msg_values, **notif_kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (40,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 438, in _send
    mail._postprocess_sent_message(success_pids=success_pids, failure_type=failure_type)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 175, in _postprocess_sent_message
    notifications = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (40,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 1984, in message_notify
    MailThread._notify_thread(new_message, msg_values, **notif_kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (41,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 438, in _send
    mail._postprocess_sent_message(success_pids=success_pids, failure_type=failure_type)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 175, in _postprocess_sent_message
    notifications = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (41,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 1984, in message_notify
    MailThread._notify_thread(new_message, msg_values, **notif_kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (42,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 438, in _send
    mail._postprocess_sent_message(success_pids=success_pids, failure_type=failure_type)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 175, in _postprocess_sent_message
    notifications = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (42,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 1984, in message_notify
    MailThread._notify_thread(new_message, msg_values, **notif_kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (43,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 438, in _send
    mail._postprocess_sent_message(success_pids=success_pids, failure_type=failure_type)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 175, in _postprocess_sent_message
    notifications = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (43,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 1984, in message_notify
    MailThread._notify_thread(new_message, msg_values, **notif_kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (44,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 438, in _send
    mail._postprocess_sent_message(success_pids=success_pids, failure_type=failure_type)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 175, in _postprocess_sent_message
    notifications = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (44,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 1984, in message_notify
    MailThread._notify_thread(new_message, msg_values, **notif_kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (45,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 438, in _send
    mail._postprocess_sent_message(success_pids=success_pids, failure_type=failure_type)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 175, in _postprocess_sent_message
    notifications = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (45,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 1984, in message_notify
    MailThread._notify_thread(new_message, msg_values, **notif_kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (46,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 438, in _send
    mail._postprocess_sent_message(success_pids=success_pids, failure_type=failure_type)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 175, in _postprocess_sent_message
    notifications = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (46,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 1984, in message_notify
    MailThread._notify_thread(new_message, msg_values, **notif_kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (47,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 438, in _send
    mail._postprocess_sent_message(success_pids=success_pids, failure_type=failure_type)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 175, in _postprocess_sent_message
    notifications = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (47,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 1984, in message_notify
    MailThread._notify_thread(new_message, msg_values, **notif_kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (48,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 438, in _send
    mail._postprocess_sent_message(success_pids=success_pids, failure_type=failure_type)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 175, in _postprocess_sent_message
    notifications = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (48,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 1984, in message_notify
    MailThread._notify_thread(new_message, msg_values, **notif_kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (49,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 438, in _send
    mail._postprocess_sent_message(success_pids=success_pids, failure_type=failure_type)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 175, in _postprocess_sent_message
    notifications = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (49,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 1984, in message_notify
    MailThread._notify_thread(new_message, msg_values, **notif_kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (50,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 438, in _send
    mail._postprocess_sent_message(success_pids=success_pids, failure_type=failure_type)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 175, in _postprocess_sent_message
    notifications = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (50,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 1984, in message_notify
    MailThread._notify_thread(new_message, msg_values, **notif_kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (51,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 438, in _send
    mail._postprocess_sent_message(success_pids=success_pids, failure_type=failure_type)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 175, in _postprocess_sent_message
    notifications = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (51,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of hr.leave() / state: NOT IN {'validate1', 'validate'} -> IN ['draft', 'confirm', 'refuse', False]
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4391, in _create
    records.check_access_rule('create')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 3668, in check_access_rule
    raise self.env['ir.rule']._make_access_error(operation, forbidden)
  File "/home/odoo/Documents/dev/odoo/odoo/addons/base/models/ir_rule.py", line 212, in _make_access_error
    rules = self._get_failing(records, mode=operation).sudo()
  File "/home/odoo/Documents/dev/odoo/odoo/addons/base/models/ir_rule.py", line 88, in _get_failing
    if Model.search_count(expression.AND([[('id', 'in', for_records.ids)], group_domains])) == len(for_records):
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1871, in search_count
    res = self.search(domain, count=True)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "hr_leave".id FROM "hr_leave" WHERE (("hr_leave"."active" = %s) AND (("hr_leave"."id" in %s) AND (("hr_leave"."holiday_type" = %s) AND ((("hr_leave"."employee_id" in (SELECT "hr_employee".id FROM "hr_employee" WHERE ("hr_employee"."user_id" = %s))) AND ("hr_leave"."state" in %s)) OR (("hr_leave"."holiday_status_id" in (SELECT "hr_leave_type".id FROM "hr_leave_type" WHERE ("hr_leave_type"."leave_validation_type" in %s))) AND ("hr_leave"."employee_id" in (SELECT "hr_employee".id FROM "hr_employee" WHERE ("hr_employee"."leave_manager_id" = %s))))))))' with params: [True, (14,), 'employee', 180, ('draft', 'confirm', 'refuse', None), ('manager', 'both', 'no_validation'), 180]>

 --------------------------------
Inverse selection of hr.leave() / state: NOT IN {'validate1', 'validate'} -> IN ['draft', 'confirm', 'refuse', False]
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4391, in _create
    records.check_access_rule('create')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 3668, in check_access_rule
    raise self.env['ir.rule']._make_access_error(operation, forbidden)
  File "/home/odoo/Documents/dev/odoo/odoo/addons/base/models/ir_rule.py", line 212, in _make_access_error
    rules = self._get_failing(records, mode=operation).sudo()
  File "/home/odoo/Documents/dev/odoo/odoo/addons/base/models/ir_rule.py", line 88, in _get_failing
    if Model.search_count(expression.AND([[('id', 'in', for_records.ids)], group_domains])) == len(for_records):
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1871, in search_count
    res = self.search(domain, count=True)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "hr_leave".id FROM "hr_leave" WHERE (("hr_leave"."active" = %s) AND (("hr_leave"."id" in %s) AND (("hr_leave"."holiday_type" = %s) AND ((("hr_leave"."employee_id" in (SELECT "hr_employee".id FROM "hr_employee" WHERE ("hr_employee"."user_id" = %s))) AND ("hr_leave"."state" in %s)) OR (("hr_leave"."holiday_status_id" in (SELECT "hr_leave_type".id FROM "hr_leave_type" WHERE ("hr_leave_type"."leave_validation_type" in %s))) AND ("hr_leave"."employee_id" in (SELECT "hr_employee".id FROM "hr_employee" WHERE ("hr_employee"."leave_manager_id" = %s))))))))' with params: [True, (15,), 'employee', 180, ('draft', 'confirm', 'refuse', None), ('manager', 'both', 'no_validation'), 180]>

 --------------------------------
Inverse selection of hr.leave() / state: NOT IN {'validate1', 'validate'} -> IN ['draft', 'confirm', 'refuse', False]
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4391, in _create
    records.check_access_rule('create')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 3668, in check_access_rule
    raise self.env['ir.rule']._make_access_error(operation, forbidden)
  File "/home/odoo/Documents/dev/odoo/odoo/addons/base/models/ir_rule.py", line 212, in _make_access_error
    rules = self._get_failing(records, mode=operation).sudo()
  File "/home/odoo/Documents/dev/odoo/odoo/addons/base/models/ir_rule.py", line 88, in _get_failing
    if Model.search_count(expression.AND([[('id', 'in', for_records.ids)], group_domains])) == len(for_records):
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1871, in search_count
    res = self.search(domain, count=True)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "hr_leave".id FROM "hr_leave" WHERE (("hr_leave"."active" = %s) AND (("hr_leave"."id" in %s) AND (("hr_leave"."holiday_type" = %s) AND ((("hr_leave"."employee_id" in (SELECT "hr_employee".id FROM "hr_employee" WHERE ("hr_employee"."user_id" = %s))) AND ("hr_leave"."state" in %s)) OR (("hr_leave"."holiday_status_id" in (SELECT "hr_leave_type".id FROM "hr_leave_type" WHERE ("hr_leave_type"."leave_validation_type" in %s))) AND ("hr_leave"."employee_id" in (SELECT "hr_employee".id FROM "hr_employee" WHERE ("hr_employee"."leave_manager_id" = %s))))))))' with params: [True, (31,), 'employee', 189, ('draft', 'confirm', 'refuse', None), ('manager', 'both', 'no_validation'), 189]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 1861, in message_post
    self._notify_thread(new_message, msg_values, **notif_kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (52,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 438, in _send
    mail._postprocess_sent_message(success_pids=success_pids, failure_type=failure_type)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 175, in _postprocess_sent_message
    notifications = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (52,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 1984, in message_notify
    MailThread._notify_thread(new_message, msg_values, **notif_kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (53,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 438, in _send
    mail._postprocess_sent_message(success_pids=success_pids, failure_type=failure_type)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 175, in _postprocess_sent_message
    notifications = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (53,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 1861, in message_post
    self._notify_thread(new_message, msg_values, **notif_kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (54,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 438, in _send
    mail._postprocess_sent_message(success_pids=success_pids, failure_type=failure_type)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 175, in _postprocess_sent_message
    notifications = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (54,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 1861, in message_post
    self._notify_thread(new_message, msg_values, **notif_kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (55,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 438, in _send
    mail._postprocess_sent_message(success_pids=success_pids, failure_type=failure_type)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 175, in _postprocess_sent_message
    notifications = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (55,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 1861, in message_post
    self._notify_thread(new_message, msg_values, **notif_kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (56,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 438, in _send
    mail._postprocess_sent_message(success_pids=success_pids, failure_type=failure_type)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 175, in _postprocess_sent_message
    notifications = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (56,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 1861, in message_post
    self._notify_thread(new_message, msg_values, **notif_kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (57,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 438, in _send
    mail._postprocess_sent_message(success_pids=success_pids, failure_type=failure_type)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 175, in _postprocess_sent_message
    notifications = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (57,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 1861, in message_post
    self._notify_thread(new_message, msg_values, **notif_kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (58,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 438, in _send
    mail._postprocess_sent_message(success_pids=success_pids, failure_type=failure_type)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 175, in _postprocess_sent_message
    notifications = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (58,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 1861, in message_post
    self._notify_thread(new_message, msg_values, **notif_kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (59,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 438, in _send
    mail._postprocess_sent_message(success_pids=success_pids, failure_type=failure_type)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 175, in _postprocess_sent_message
    notifications = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (59,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 1861, in message_post
    self._notify_thread(new_message, msg_values, **notif_kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (60,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 438, in _send
    mail._postprocess_sent_message(success_pids=success_pids, failure_type=failure_type)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 175, in _postprocess_sent_message
    notifications = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (60,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 1861, in message_post
    self._notify_thread(new_message, msg_values, **notif_kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (61,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 438, in _send
    mail._postprocess_sent_message(success_pids=success_pids, failure_type=failure_type)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 175, in _postprocess_sent_message
    notifications = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (61,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 1861, in message_post
    self._notify_thread(new_message, msg_values, **notif_kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (62,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 438, in _send
    mail._postprocess_sent_message(success_pids=success_pids, failure_type=failure_type)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 175, in _postprocess_sent_message
    notifications = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (62,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 1861, in message_post
    self._notify_thread(new_message, msg_values, **notif_kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (63,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 438, in _send
    mail._postprocess_sent_message(success_pids=success_pids, failure_type=failure_type)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 175, in _postprocess_sent_message
    notifications = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (63,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 1861, in message_post
    self._notify_thread(new_message, msg_values, **notif_kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (64,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 438, in _send
    mail._postprocess_sent_message(success_pids=success_pids, failure_type=failure_type)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 175, in _postprocess_sent_message
    notifications = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (64,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 1861, in message_post
    self._notify_thread(new_message, msg_values, **notif_kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (65,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 438, in _send
    mail._postprocess_sent_message(success_pids=success_pids, failure_type=failure_type)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 175, in _postprocess_sent_message
    notifications = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (65,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 1861, in message_post
    self._notify_thread(new_message, msg_values, **notif_kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (66,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 438, in _send
    mail._postprocess_sent_message(success_pids=success_pids, failure_type=failure_type)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 175, in _postprocess_sent_message
    notifications = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (66,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 1861, in message_post
    self._notify_thread(new_message, msg_values, **notif_kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (67,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 438, in _send
    mail._postprocess_sent_message(success_pids=success_pids, failure_type=failure_type)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 175, in _postprocess_sent_message
    notifications = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (67,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 1861, in message_post
    self._notify_thread(new_message, msg_values, **notif_kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (68,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 438, in _send
    mail._postprocess_sent_message(success_pids=success_pids, failure_type=failure_type)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 175, in _postprocess_sent_message
    notifications = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (68,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 1861, in message_post
    self._notify_thread(new_message, msg_values, **notif_kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (69,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 438, in _send
    mail._postprocess_sent_message(success_pids=success_pids, failure_type=failure_type)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 175, in _postprocess_sent_message
    notifications = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (69,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 1861, in message_post
    self._notify_thread(new_message, msg_values, **notif_kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (70,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 438, in _send
    mail._postprocess_sent_message(success_pids=success_pids, failure_type=failure_type)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 175, in _postprocess_sent_message
    notifications = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (70,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 1861, in message_post
    self._notify_thread(new_message, msg_values, **notif_kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (71,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 438, in _send
    mail._postprocess_sent_message(success_pids=success_pids, failure_type=failure_type)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 175, in _postprocess_sent_message
    notifications = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (71,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 1861, in message_post
    self._notify_thread(new_message, msg_values, **notif_kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (72,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 438, in _send
    mail._postprocess_sent_message(success_pids=success_pids, failure_type=failure_type)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 175, in _postprocess_sent_message
    notifications = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (72,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 1861, in message_post
    self._notify_thread(new_message, msg_values, **notif_kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (73,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 438, in _send
    mail._postprocess_sent_message(success_pids=success_pids, failure_type=failure_type)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 175, in _postprocess_sent_message
    notifications = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (73,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 1861, in message_post
    self._notify_thread(new_message, msg_values, **notif_kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (74,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 438, in _send
    mail._postprocess_sent_message(success_pids=success_pids, failure_type=failure_type)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 175, in _postprocess_sent_message
    notifications = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (74,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 1861, in message_post
    self._notify_thread(new_message, msg_values, **notif_kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (75,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 438, in _send
    mail._postprocess_sent_message(success_pids=success_pids, failure_type=failure_type)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 175, in _postprocess_sent_message
    notifications = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (75,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of hr.leave() / state: NOT IN {'refuse', 'cancel'} -> IN ['draft', 'confirm', 'validate1', 'validate', False]
  File "/home/odoo/Documents/dev/odoo/odoo/tests/common.py", line 367, in run
    super().run(result)
  File "/usr/lib/python3.10/unittest/case.py", line 591, in run
    self._callTestMethod(testMethod)
  File "/usr/lib/python3.10/unittest/case.py", line 549, in _callTestMethod
    method()
  File "/home/odoo/Documents/dev/odoo/addons/hr_holidays/tests/test_company_leave.py", line 69, in test_leave_whole_company_01
    company_leave.action_validate()
  File "/home/odoo/Documents/dev/odoo/addons/hr_holidays/models/hr_leave.py", line 1289, in action_validate
    ).search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "hr_leave".id FROM "hr_leave" WHERE (((((("hr_leave"."active" = %s) AND ("hr_leave"."date_from" <= %s)) AND ("hr_leave"."date_to" > %s)) AND ("hr_leave"."state" in %s)) AND ("hr_leave"."holiday_type" = %s)) AND ("hr_leave"."employee_id" in %s))' with params: [True, '2020-01-08 16:00:00', '2020-01-08 07:00:00', ('draft', 'confirm', 'validate1', 'validate', None), 'employee', (78,)]>

 --------------------------------
Inverse selection of hr.leave() / state: NOT IN {'refuse', 'cancel'} -> IN ['draft', 'confirm', 'validate1', 'validate', False]
  File "/home/odoo/Documents/dev/odoo/odoo/tests/common.py", line 367, in run
    super().run(result)
  File "/usr/lib/python3.10/unittest/case.py", line 591, in run
    self._callTestMethod(testMethod)
  File "/usr/lib/python3.10/unittest/case.py", line 549, in _callTestMethod
    method()
  File "/home/odoo/Documents/dev/odoo/addons/hr_holidays/tests/test_company_leave.py", line 123, in test_leave_whole_company_02
    company_leave.action_validate()
  File "/home/odoo/Documents/dev/odoo/addons/hr_holidays/models/hr_leave.py", line 1289, in action_validate
    ).search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "hr_leave".id FROM "hr_leave" WHERE (((((("hr_leave"."active" = %s) AND ("hr_leave"."date_from" <= %s)) AND ("hr_leave"."date_to" > %s)) AND ("hr_leave"."state" in %s)) AND ("hr_leave"."holiday_type" = %s)) AND ("hr_leave"."employee_id" in %s))' with params: [True, '2020-01-08 16:00:00', '2020-01-08 07:00:00', ('draft', 'confirm', 'validate1', 'validate', None), 'employee', (78,)]>

 --------------------------------
Inverse selection of hr.leave() / state: NOT IN {'refuse', 'cancel'} -> IN ['draft', 'confirm', 'validate1', 'validate', False]
  File "/home/odoo/Documents/dev/odoo/odoo/tests/common.py", line 367, in run
    super().run(result)
  File "/usr/lib/python3.10/unittest/case.py", line 591, in run
    self._callTestMethod(testMethod)
  File "/usr/lib/python3.10/unittest/case.py", line 549, in _callTestMethod
    method()
  File "/home/odoo/Documents/dev/odoo/addons/hr_holidays/tests/test_company_leave.py", line 179, in test_leave_whole_company_03
    company_leave.action_validate()
  File "/home/odoo/Documents/dev/odoo/addons/hr_holidays/models/hr_leave.py", line 1289, in action_validate
    ).search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "hr_leave".id FROM "hr_leave" WHERE (((((("hr_leave"."active" = %s) AND ("hr_leave"."date_from" <= %s)) AND ("hr_leave"."date_to" > %s)) AND ("hr_leave"."state" in %s)) AND ("hr_leave"."holiday_type" = %s)) AND ("hr_leave"."employee_id" in %s))' with params: [True, '2020-01-07 16:00:00', '2020-01-07 07:00:00', ('draft', 'confirm', 'validate1', 'validate', None), 'employee', (78,)]>

 --------------------------------
Inverse selection of hr.leave() / state: NOT IN {'refuse', 'cancel'} -> IN ['draft', 'confirm', 'validate1', 'validate', False]
  File "/home/odoo/Documents/dev/odoo/odoo/tests/common.py", line 367, in run
    super().run(result)
  File "/usr/lib/python3.10/unittest/case.py", line 591, in run
    self._callTestMethod(testMethod)
  File "/usr/lib/python3.10/unittest/case.py", line 549, in _callTestMethod
    method()
  File "/home/odoo/Documents/dev/odoo/addons/hr_holidays/tests/test_company_leave.py", line 223, in test_leave_whole_company_04
    company_leave.action_validate()
  File "/home/odoo/Documents/dev/odoo/addons/hr_holidays/models/hr_leave.py", line 1289, in action_validate
    ).search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "hr_leave".id FROM "hr_leave" WHERE (((((("hr_leave"."active" = %s) AND ("hr_leave"."date_from" <= %s)) AND ("hr_leave"."date_to" > %s)) AND ("hr_leave"."state" in %s)) AND ("hr_leave"."holiday_type" = %s)) AND ("hr_leave"."employee_id" in %s))' with params: [True, '2020-01-09 16:00:00', '2020-01-09 07:00:00', ('draft', 'confirm', 'validate1', 'validate', None), 'employee', (78,)]>

 --------------------------------
Inverse selection of hr.leave() / state: NOT IN {'refuse', 'cancel'} -> IN ['draft', 'confirm', 'validate1', 'validate', False]
  File "/home/odoo/Documents/dev/odoo/odoo/tests/common.py", line 367, in run
    super().run(result)
  File "/usr/lib/python3.10/unittest/case.py", line 591, in run
    self._callTestMethod(testMethod)
  File "/usr/lib/python3.10/unittest/case.py", line 549, in _callTestMethod
    method()
  File "/home/odoo/Documents/dev/odoo/addons/hr_holidays/tests/test_company_leave.py", line 274, in test_leave_whole_company_06
    company_leave.action_validate()
  File "/home/odoo/Documents/dev/odoo/addons/hr_holidays/models/hr_leave.py", line 1289, in action_validate
    ).search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "hr_leave".id FROM "hr_leave" WHERE (((((("hr_leave"."active" = %s) AND ("hr_leave"."date_from" <= %s)) AND ("hr_leave"."date_to" > %s)) AND ("hr_leave"."state" in %s)) AND ("hr_leave"."holiday_type" = %s)) AND ("hr_leave"."employee_id" in %s))' with params: [True, '2020-01-10 16:00:00', '2020-01-10 07:00:00', ('draft', 'confirm', 'validate1', 'validate', None), 'employee', (78,)]>

 --------------------------------
Inverse selection of hr.leave() / state: NOT IN {'refuse', 'cancel'} -> IN ['draft', 'confirm', 'validate1', 'validate', False]
  File "/home/odoo/Documents/dev/odoo/odoo/tests/common.py", line 367, in run
    super().run(result)
  File "/usr/lib/python3.10/unittest/case.py", line 591, in run
    self._callTestMethod(testMethod)
  File "/usr/lib/python3.10/unittest/case.py", line 549, in _callTestMethod
    method()
  File "/home/odoo/Documents/dev/odoo/addons/hr_holidays/tests/test_company_leave.py", line 329, in test_leave_whole_company_07
    company_leave.action_validate()
  File "/home/odoo/Documents/dev/odoo/addons/hr_holidays/models/hr_leave.py", line 1289, in action_validate
    ).search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "hr_leave".id FROM "hr_leave" WHERE (((((("hr_leave"."active" = %s) AND ("hr_leave"."date_from" <= %s)) AND ("hr_leave"."date_to" > %s)) AND ("hr_leave"."state" in %s)) AND ("hr_leave"."holiday_type" = %s)) AND ("hr_leave"."employee_id" in %s))' with params: [True, '2020-04-01 15:00:00', '2020-04-01 06:00:00', ('draft', 'confirm', 'validate1', 'validate', None), 'employee', (79, 80, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 81, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 82, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 83, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 84, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 85, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 86, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 87, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 88, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 78)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 1861, in message_post
    self._notify_thread(new_message, msg_values, **notif_kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (76,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 438, in _send
    mail._postprocess_sent_message(success_pids=success_pids, failure_type=failure_type)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 175, in _postprocess_sent_message
    notifications = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (76,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 1984, in message_notify
    MailThread._notify_thread(new_message, msg_values, **notif_kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (77,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 438, in _send
    mail._postprocess_sent_message(success_pids=success_pids, failure_type=failure_type)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 175, in _postprocess_sent_message
    notifications = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (77,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 1861, in message_post
    self._notify_thread(new_message, msg_values, **notif_kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (78,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 438, in _send
    mail._postprocess_sent_message(success_pids=success_pids, failure_type=failure_type)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 175, in _postprocess_sent_message
    notifications = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (78,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 1984, in message_notify
    MailThread._notify_thread(new_message, msg_values, **notif_kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (79,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 438, in _send
    mail._postprocess_sent_message(success_pids=success_pids, failure_type=failure_type)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 175, in _postprocess_sent_message
    notifications = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (79,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 1861, in message_post
    self._notify_thread(new_message, msg_values, **notif_kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (80,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 438, in _send
    mail._postprocess_sent_message(success_pids=success_pids, failure_type=failure_type)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 175, in _postprocess_sent_message
    notifications = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (80,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 1861, in message_post
    self._notify_thread(new_message, msg_values, **notif_kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (81,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 438, in _send
    mail._postprocess_sent_message(success_pids=success_pids, failure_type=failure_type)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 175, in _postprocess_sent_message
    notifications = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (81,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 1861, in message_post
    self._notify_thread(new_message, msg_values, **notif_kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (82,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 438, in _send
    mail._postprocess_sent_message(success_pids=success_pids, failure_type=failure_type)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 175, in _postprocess_sent_message
    notifications = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (82,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of hr.leave() / state: NOT IN {'refuse', 'cancel'} -> IN ['draft', 'confirm', 'validate1', 'validate', False]
  File "/usr/lib/python3.10/unittest/case.py", line 591, in run
    self._callTestMethod(testMethod)
  File "/usr/lib/python3.10/unittest/case.py", line 549, in _callTestMethod
    method()
  File "/home/odoo/Documents/dev/odoo/addons/hr_holidays/tests/test_leave_requests.py", line 556, in test_company_leaves
    req1_form.save().action_approve()
  File "/home/odoo/Documents/dev/odoo/addons/hr_holidays/models/hr_leave.py", line 1246, in action_approve
    self.filtered(lambda hol: not hol.validation_type == 'both').action_validate()
  File "/home/odoo/Documents/dev/odoo/addons/hr_holidays/models/hr_leave.py", line 1289, in action_validate
    ).search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "hr_leave".id FROM "hr_leave" WHERE (((((("hr_leave"."active" = %s) AND ("hr_leave"."date_from" <= %s)) AND ("hr_leave"."date_to" > %s)) AND ("hr_leave"."state" in %s)) AND ("hr_leave"."holiday_type" = %s)) AND ("hr_leave"."employee_id" in %s))' with params: [True, '2021-12-08 16:00:00', '2021-12-06 07:00:00', ('draft', 'confirm', 'validate1', 'validate', None), 'employee', (193, 191)]>

 --------------------------------
Inverse selection of hr.leave() / state: NOT IN {'refuse', 'cancel'} -> IN ['draft', 'confirm', 'validate1', 'validate', False]
  File "/usr/lib/python3.10/unittest/case.py", line 549, in _callTestMethod
    method()
  File "/home/odoo/Documents/dev/odoo/odoo/tools/misc.py", line 794, in deco
    return func(*args, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/hr_holidays/tests/test_leave_requests.py", line 190, in test_department_leave
    leave.action_approve()
  File "/home/odoo/Documents/dev/odoo/addons/hr_holidays/models/hr_leave.py", line 1246, in action_approve
    self.filtered(lambda hol: not hol.validation_type == 'both').action_validate()
  File "/home/odoo/Documents/dev/odoo/addons/hr_holidays/models/hr_leave.py", line 1289, in action_validate
    ).search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "hr_leave".id FROM "hr_leave" WHERE (((((("hr_leave"."active" = %s) AND ("hr_leave"."date_from" <= %s)) AND ("hr_leave"."date_to" > %s)) AND ("hr_leave"."state" in %s)) AND ("hr_leave"."holiday_type" = %s)) AND ("hr_leave"."employee_id" in %s))' with params: [True, '2019-05-06 15:00:00', '2019-05-06 06:00:00', ('draft', 'confirm', 'validate1', 'validate', None), 'employee', (193,)]>

 --------------------------------
Inverse selection of hr.leave() / state: NOT IN {'refuse', 'cancel'} -> IN ['draft', 'confirm', 'validate1', 'validate', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 389, in _compute_field_value
    return super()._compute_field_value(field)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/hr_holidays/models/hr_employee.py", line 134, in _compute_leave_status
    holidays = self.env['hr.leave'].sudo().search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "hr_leave".id FROM "hr_leave" WHERE ((((("hr_leave"."active" = %s) AND ("hr_leave"."employee_id" in %s)) AND ("hr_leave"."date_from" <= %s)) AND ("hr_leave"."date_to" >= %s)) AND ("hr_leave"."state" in %s))' with params: [True, (191, 193), '2022-05-11 12:56:54', '2022-05-11 12:56:54', ('draft', 'confirm', 'validate1', 'validate', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 1861, in message_post
    self._notify_thread(new_message, msg_values, **notif_kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (83,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 438, in _send
    mail._postprocess_sent_message(success_pids=success_pids, failure_type=failure_type)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 175, in _postprocess_sent_message
    notifications = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (83,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 1984, in message_notify
    MailThread._notify_thread(new_message, msg_values, **notif_kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (84,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 438, in _send
    mail._postprocess_sent_message(success_pids=success_pids, failure_type=failure_type)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 175, in _postprocess_sent_message
    notifications = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (84,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 1861, in message_post
    self._notify_thread(new_message, msg_values, **notif_kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (85,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 438, in _send
    mail._postprocess_sent_message(success_pids=success_pids, failure_type=failure_type)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 175, in _postprocess_sent_message
    notifications = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (85,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 1984, in message_notify
    MailThread._notify_thread(new_message, msg_values, **notif_kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (86,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 438, in _send
    mail._postprocess_sent_message(success_pids=success_pids, failure_type=failure_type)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 175, in _postprocess_sent_message
    notifications = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (86,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 1861, in message_post
    self._notify_thread(new_message, msg_values, **notif_kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (87,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 438, in _send
    mail._postprocess_sent_message(success_pids=success_pids, failure_type=failure_type)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 175, in _postprocess_sent_message
    notifications = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (87,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 1984, in message_notify
    MailThread._notify_thread(new_message, msg_values, **notif_kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (88,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 438, in _send
    mail._postprocess_sent_message(success_pids=success_pids, failure_type=failure_type)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 175, in _postprocess_sent_message
    notifications = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (88,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 1861, in message_post
    self._notify_thread(new_message, msg_values, **notif_kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (89,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 438, in _send
    mail._postprocess_sent_message(success_pids=success_pids, failure_type=failure_type)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 175, in _postprocess_sent_message
    notifications = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (89,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of hr.leave() / state: NOT IN {'refuse', 'cancel'} -> IN ['draft', 'confirm', 'validate1', 'validate', False]
  File "/usr/lib/python3.10/unittest/case.py", line 591, in run
    self._callTestMethod(testMethod)
  File "/usr/lib/python3.10/unittest/case.py", line 549, in _callTestMethod
    method()
  File "/home/odoo/Documents/dev/odoo/odoo/tools/misc.py", line 794, in deco
    return func(*args, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/hr_holidays/tests/test_leave_requests.py", line 271, in test_timezone_company_validated
    leave.action_validate()
  File "/home/odoo/Documents/dev/odoo/addons/hr_holidays/models/hr_leave.py", line 1289, in action_validate
    ).search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "hr_leave".id FROM "hr_leave" WHERE (((((("hr_leave"."active" = %s) AND ("hr_leave"."date_from" <= %s)) AND ("hr_leave"."date_to" > %s)) AND ("hr_leave"."state" in %s)) AND ("hr_leave"."holiday_type" = %s)) AND ("hr_leave"."employee_id" in %s))' with params: [True, '2019-05-06 23:59:59', '2019-05-06 00:00:00', ('draft', 'confirm', 'validate1', 'validate', None), 'employee', (194,)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 1861, in message_post
    self._notify_thread(new_message, msg_values, **notif_kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (90,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 438, in _send
    mail._postprocess_sent_message(success_pids=success_pids, failure_type=failure_type)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 175, in _postprocess_sent_message
    notifications = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (90,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of hr.leave() / state: NOT IN {'refuse', 'cancel'} -> IN ['draft', 'confirm', 'validate1', 'validate', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 389, in _compute_field_value
    return super()._compute_field_value(field)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/hr_holidays/models/hr_employee.py", line 134, in _compute_leave_status
    holidays = self.env['hr.leave'].sudo().search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "hr_leave".id FROM "hr_leave" WHERE ((((("hr_leave"."active" = %s) AND ("hr_leave"."employee_id" in %s)) AND ("hr_leave"."date_from" <= %s)) AND ("hr_leave"."date_to" >= %s)) AND ("hr_leave"."state" in %s))' with params: [True, (195, 196), '2022-05-11 12:56:59', '2022-05-11 12:56:59', ('draft', 'confirm', 'validate1', 'validate', None)]>

 --------------------------------
Inverse selection of hr.leave() / state: NOT IN {'refuse', 'cancel'} -> IN ['draft', 'confirm', 'validate1', 'validate', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 389, in _compute_field_value
    return super()._compute_field_value(field)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/hr_holidays/models/hr_employee.py", line 134, in _compute_leave_status
    holidays = self.env['hr.leave'].sudo().search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "hr_leave".id FROM "hr_leave" WHERE ((((("hr_leave"."active" = %s) AND ("hr_leave"."employee_id" in %s)) AND ("hr_leave"."date_from" <= %s)) AND ("hr_leave"."date_to" >= %s)) AND ("hr_leave"."state" in %s))' with params: [True, (201, 202), '2022-05-11 12:57:00', '2022-05-11 12:57:00', ('draft', 'confirm', 'validate1', 'validate', None)]>

 --------------------------------
Inverse selection of hr.leave() / state: NOT IN {'refuse', 'cancel'} -> IN ['draft', 'confirm', 'validate1', 'validate', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 389, in _compute_field_value
    return super()._compute_field_value(field)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/hr_holidays/models/hr_employee.py", line 101, in _compute_allocation_remaining_display
    data_leave = self.env['hr.leave']._read_group([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 2519, in _read_group
    return self.read_group(domain, fields, groupby, offset, limit, orderby, lazy)
  File "/home/odoo/Documents/dev/odoo/addons/hr_holidays/models/hr_leave.py", line 1086, in read_group
    return super(HolidaysRequest, self).read_group(domain, fields, groupby, offset=offset, limit=limit, orderby=orderby, lazy=lazy)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 2560, in read_group
    result = self._read_group_raw(domain, fields, groupby, offset=offset, limit=limit, orderby=orderby, lazy=lazy)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 2596, in _read_group_raw
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "hr_leave".id FROM "hr_leave" WHERE (((((("hr_leave"."active" = %s) AND ("hr_leave"."employee_id" in %s)) AND ("hr_leave"."holiday_status_id" in (SELECT "hr_leave_type".id FROM "hr_leave_type" WHERE ("hr_leave_type"."active" = %s)))) AND ("hr_leave"."holiday_status_id" in (SELECT "hr_leave_type".id FROM "hr_leave_type" WHERE ("hr_leave_type"."requires_allocation" = %s)))) AND ("hr_leave"."state" in %s)) AND (("hr_leave"."holiday_allocation_id" in (SELECT "hr_leave_allocation".id FROM "hr_leave_allocation" WHERE "hr_leave_allocation"."date_to" IS NULL )) OR ("hr_leave"."holiday_allocation_id" in (SELECT "hr_leave_allocation".id FROM "hr_leave_allocation" WHERE ("hr_leave_allocation"."date_to" >= %s)))))' with params: [True, (201, 202), True, 'yes', ('draft', 'confirm', 'validate1', 'validate', None), '2022-05-11']>

 --------------------------------
Inverse selection of hr.leave() / state: NOT IN {'refuse', 'cancel'} -> IN ['draft', 'confirm', 'validate1', 'validate', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 389, in _compute_field_value
    return super()._compute_field_value(field)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/hr_holidays/models/hr_employee.py", line 134, in _compute_leave_status
    holidays = self.env['hr.leave'].sudo().search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "hr_leave".id FROM "hr_leave" WHERE ((((("hr_leave"."active" = %s) AND ("hr_leave"."employee_id" in %s)) AND ("hr_leave"."date_from" <= %s)) AND ("hr_leave"."date_to" >= %s)) AND ("hr_leave"."state" in %s))' with params: [True, (201,), '2022-05-11 12:57:00', '2022-05-11 12:57:00', ('draft', 'confirm', 'validate1', 'validate', None)]>

 --------------------------------
Inverse selection of hr.leave() / state: NOT IN {'refuse', 'cancel'} -> IN ['draft', 'confirm', 'validate1', 'validate', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 389, in _compute_field_value
    return super()._compute_field_value(field)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/hr_holidays/models/hr_employee.py", line 101, in _compute_allocation_remaining_display
    data_leave = self.env['hr.leave']._read_group([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 2519, in _read_group
    return self.read_group(domain, fields, groupby, offset, limit, orderby, lazy)
  File "/home/odoo/Documents/dev/odoo/addons/hr_holidays/models/hr_leave.py", line 1086, in read_group
    return super(HolidaysRequest, self).read_group(domain, fields, groupby, offset=offset, limit=limit, orderby=orderby, lazy=lazy)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 2560, in read_group
    result = self._read_group_raw(domain, fields, groupby, offset=offset, limit=limit, orderby=orderby, lazy=lazy)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 2596, in _read_group_raw
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "hr_leave".id FROM "hr_leave" WHERE (((((("hr_leave"."active" = %s) AND ("hr_leave"."employee_id" in %s)) AND ("hr_leave"."holiday_status_id" in (SELECT "hr_leave_type".id FROM "hr_leave_type" WHERE ("hr_leave_type"."active" = %s)))) AND ("hr_leave"."holiday_status_id" in (SELECT "hr_leave_type".id FROM "hr_leave_type" WHERE ("hr_leave_type"."requires_allocation" = %s)))) AND ("hr_leave"."state" in %s)) AND (("hr_leave"."holiday_allocation_id" in (SELECT "hr_leave_allocation".id FROM "hr_leave_allocation" WHERE "hr_leave_allocation"."date_to" IS NULL )) OR ("hr_leave"."holiday_allocation_id" in (SELECT "hr_leave_allocation".id FROM "hr_leave_allocation" WHERE ("hr_leave_allocation"."date_to" >= %s)))))' with params: [True, (201,), True, 'yes', ('draft', 'confirm', 'validate1', 'validate', None), '2022-05-11']>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/portal/wizard/portal_wizard.py", line 146, in action_grant_access
    self.with_context(active_test=True)._send_email()
  File "/home/odoo/Documents/dev/odoo/addons/portal/wizard/portal_wizard.py", line 225, in _send_email
    template.with_context(dbname=self._cr.dbname, portal_url=portal_url, lang=lang).send_mail(self.id, force_send=True)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_template.py", line 337, in send_mail
    mail.send(raise_exception=raise_exception)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (91,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/portal/wizard/portal_wizard.py", line 146, in action_grant_access
    self.with_context(active_test=True)._send_email()
  File "/home/odoo/Documents/dev/odoo/addons/portal/wizard/portal_wizard.py", line 225, in _send_email
    template.with_context(dbname=self._cr.dbname, portal_url=portal_url, lang=lang).send_mail(self.id, force_send=True)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_template.py", line 337, in send_mail
    mail.send(raise_exception=raise_exception)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (92,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/portal/wizard/portal_wizard.py", line 146, in action_grant_access
    self.with_context(active_test=True)._send_email()
  File "/home/odoo/Documents/dev/odoo/addons/portal/wizard/portal_wizard.py", line 225, in _send_email
    template.with_context(dbname=self._cr.dbname, portal_url=portal_url, lang=lang).send_mail(self.id, force_send=True)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_template.py", line 337, in send_mail
    mail.send(raise_exception=raise_exception)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (93,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of snailmail.letter() / state: NOT IN {'canceled', 'sent'} -> IN ['pending', 'error']
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1346, in determine_inverse
    self.inverse(records)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 685, in _inverse_related
    target[field.name] = record_value[record]
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 6050, in __setitem__
    return self._fields[key].__set__(self, value)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1286, in __set__
    records.write({self.name: write_value})
  File "/home/odoo/Documents/dev/odoo/addons/snailmail/models/res_partner.py", line 20, in write
    letters = self.env['snailmail.letter'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "snailmail_letter".id FROM "snailmail_letter" WHERE (("snailmail_letter"."state" in %s) AND ("snailmail_letter"."partner_id" in %s))' with params: [('pending', 'error'), (3,)]>

 --------------------------------
Inverse selection of snailmail.letter() / state: NOT IN {'canceled', 'sent'} -> IN ['pending', 'error']
  File "/usr/lib/python3.10/unittest/case.py", line 591, in run
    self._callTestMethod(testMethod)
  File "/usr/lib/python3.10/unittest/case.py", line 549, in _callTestMethod
    method()
  File "/home/odoo/Documents/dev/odoo/addons/account/tests/test_fiscal_position.py", line 120, in test_10_fp_country
    george.zip = 6000
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1286, in __set__
    records.write({self.name: write_value})
  File "/home/odoo/Documents/dev/odoo/addons/snailmail/models/res_partner.py", line 20, in write
    letters = self.env['snailmail.letter'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "snailmail_letter".id FROM "snailmail_letter" WHERE (("snailmail_letter"."state" in %s) AND ("snailmail_letter"."partner_id" in %s))' with params: [('pending', 'error'), (764,)]>

 --------------------------------
Inverse selection of snailmail.letter() / state: NOT IN {'canceled', 'sent'} -> IN ['pending', 'error']
  File "/usr/lib/python3.10/unittest/case.py", line 591, in run
    self._callTestMethod(testMethod)
  File "/usr/lib/python3.10/unittest/case.py", line 549, in _callTestMethod
    method()
  File "/home/odoo/Documents/dev/odoo/addons/account/tests/test_fiscal_position.py", line 122, in test_10_fp_country
    george.zip = 3000
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1286, in __set__
    records.write({self.name: write_value})
  File "/home/odoo/Documents/dev/odoo/addons/snailmail/models/res_partner.py", line 20, in write
    letters = self.env['snailmail.letter'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "snailmail_letter".id FROM "snailmail_letter" WHERE (("snailmail_letter"."state" in %s) AND ("snailmail_letter"."partner_id" in %s))' with params: [('pending', 'error'), (764,)]>

 --------------------------------
Inverse selection of snailmail.letter() / state: NOT IN {'canceled', 'sent'} -> IN ['pending', 'error']
  File "/usr/lib/python3.10/unittest/case.py", line 591, in run
    self._callTestMethod(testMethod)
  File "/usr/lib/python3.10/unittest/case.py", line 549, in _callTestMethod
    method()
  File "/home/odoo/Documents/dev/odoo/addons/account/tests/test_fiscal_position.py", line 127, in test_10_fp_country
    george.state_id = self.state_fr
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1286, in __set__
    records.write({self.name: write_value})
  File "/home/odoo/Documents/dev/odoo/addons/snailmail/models/res_partner.py", line 20, in write
    letters = self.env['snailmail.letter'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "snailmail_letter".id FROM "snailmail_letter" WHERE (("snailmail_letter"."state" in %s) AND ("snailmail_letter"."partner_id" in %s))' with params: [('pending', 'error'), (764,)]>

 --------------------------------
Inverse selection of snailmail.letter() / state: NOT IN {'canceled', 'sent'} -> IN ['pending', 'error']
  File "/usr/lib/python3.10/unittest/case.py", line 591, in run
    self._callTestMethod(testMethod)
  File "/usr/lib/python3.10/unittest/case.py", line 549, in _callTestMethod
    method()
  File "/home/odoo/Documents/dev/odoo/addons/account/tests/test_fiscal_position.py", line 129, in test_10_fp_country
    george.zip = False
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1286, in __set__
    records.write({self.name: write_value})
  File "/home/odoo/Documents/dev/odoo/addons/snailmail/models/res_partner.py", line 20, in write
    letters = self.env['snailmail.letter'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "snailmail_letter".id FROM "snailmail_letter" WHERE (("snailmail_letter"."state" in %s) AND ("snailmail_letter"."partner_id" in %s))' with params: [('pending', 'error'), (764,)]>

 --------------------------------
Inverse selection of snailmail.letter() / state: NOT IN {'canceled', 'sent'} -> IN ['pending', 'error']
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 3998, in write
    fields[0].determine_inverse(real_recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1344, in determine_inverse
    getattr(records, self.inverse)()
  File "/home/odoo/Documents/dev/odoo/odoo/addons/base/models/res_company.py", line 157, in _inverse_country
    company.partner_id.country_id = company.country_id
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1286, in __set__
    records.write({self.name: write_value})
  File "/home/odoo/Documents/dev/odoo/addons/snailmail/models/res_partner.py", line 20, in write
    letters = self.env['snailmail.letter'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "snailmail_letter".id FROM "snailmail_letter" WHERE (("snailmail_letter"."state" in %s) AND ("snailmail_letter"."partner_id" in %s))' with params: [('pending', 'error'), (1,)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/enterprise/mail_mobile/models/mail_thread.py", line 25, in _notify_thread
    recipients_data = super(MailThread, self)._notify_thread(message, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (103,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 438, in _send
    mail._postprocess_sent_message(success_pids=success_pids, failure_type=failure_type)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 175, in _postprocess_sent_message
    notifications = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (103,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/enterprise/mail_mobile/models/mail_thread.py", line 25, in _notify_thread
    recipients_data = super(MailThread, self)._notify_thread(message, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (104,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 438, in _send
    mail._postprocess_sent_message(success_pids=success_pids, failure_type=failure_type)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 175, in _postprocess_sent_message
    notifications = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (104,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/enterprise/mail_mobile/models/mail_thread.py", line 25, in _notify_thread
    recipients_data = super(MailThread, self)._notify_thread(message, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (105,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 438, in _send
    mail._postprocess_sent_message(success_pids=success_pids, failure_type=failure_type)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 175, in _postprocess_sent_message
    notifications = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (105,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/enterprise/mail_mobile/models/mail_thread.py", line 25, in _notify_thread
    recipients_data = super(MailThread, self)._notify_thread(message, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (106,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 438, in _send
    mail._postprocess_sent_message(success_pids=success_pids, failure_type=failure_type)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 175, in _postprocess_sent_message
    notifications = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (106,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/enterprise/mail_mobile/models/mail_thread.py", line 25, in _notify_thread
    recipients_data = super(MailThread, self)._notify_thread(message, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (107,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 438, in _send
    mail._postprocess_sent_message(success_pids=success_pids, failure_type=failure_type)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 175, in _postprocess_sent_message
    notifications = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (107,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/enterprise/mail_mobile/models/mail_thread.py", line 25, in _notify_thread
    recipients_data = super(MailThread, self)._notify_thread(message, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (108,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 438, in _send
    mail._postprocess_sent_message(success_pids=success_pids, failure_type=failure_type)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 175, in _postprocess_sent_message
    notifications = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (108,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/enterprise/mail_mobile/models/mail_thread.py", line 25, in _notify_thread
    recipients_data = super(MailThread, self)._notify_thread(message, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (109,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 438, in _send
    mail._postprocess_sent_message(success_pids=success_pids, failure_type=failure_type)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 175, in _postprocess_sent_message
    notifications = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (109,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/enterprise/mail_mobile/models/mail_thread.py", line 25, in _notify_thread
    recipients_data = super(MailThread, self)._notify_thread(message, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (110,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 438, in _send
    mail._postprocess_sent_message(success_pids=success_pids, failure_type=failure_type)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 175, in _postprocess_sent_message
    notifications = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (110,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/enterprise/mail_mobile/models/mail_thread.py", line 25, in _notify_thread
    recipients_data = super(MailThread, self)._notify_thread(message, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (111,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 438, in _send
    mail._postprocess_sent_message(success_pids=success_pids, failure_type=failure_type)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 175, in _postprocess_sent_message
    notifications = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (111,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/enterprise/mail_mobile/models/mail_thread.py", line 25, in _notify_thread
    recipients_data = super(MailThread, self)._notify_thread(message, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (112,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 438, in _send
    mail._postprocess_sent_message(success_pids=success_pids, failure_type=failure_type)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 175, in _postprocess_sent_message
    notifications = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (112,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/enterprise/mail_mobile/models/mail_thread.py", line 25, in _notify_thread
    recipients_data = super(MailThread, self)._notify_thread(message, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (113,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 438, in _send
    mail._postprocess_sent_message(success_pids=success_pids, failure_type=failure_type)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 175, in _postprocess_sent_message
    notifications = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (113,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/enterprise/mail_mobile/models/mail_thread.py", line 25, in _notify_thread
    recipients_data = super(MailThread, self)._notify_thread(message, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (114,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 438, in _send
    mail._postprocess_sent_message(success_pids=success_pids, failure_type=failure_type)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 175, in _postprocess_sent_message
    notifications = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (114,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/enterprise/mail_mobile/models/mail_thread.py", line 25, in _notify_thread
    recipients_data = super(MailThread, self)._notify_thread(message, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (115,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 438, in _send
    mail._postprocess_sent_message(success_pids=success_pids, failure_type=failure_type)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 175, in _postprocess_sent_message
    notifications = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (115,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/enterprise/mail_mobile/models/mail_thread.py", line 25, in _notify_thread
    recipients_data = super(MailThread, self)._notify_thread(message, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (116,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 438, in _send
    mail._postprocess_sent_message(success_pids=success_pids, failure_type=failure_type)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 175, in _postprocess_sent_message
    notifications = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (116,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/enterprise/mail_mobile/models/mail_thread.py", line 25, in _notify_thread
    recipients_data = super(MailThread, self)._notify_thread(message, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (117,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 438, in _send
    mail._postprocess_sent_message(success_pids=success_pids, failure_type=failure_type)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 175, in _postprocess_sent_message
    notifications = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (117,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/enterprise/mail_mobile/models/mail_thread.py", line 25, in _notify_thread
    recipients_data = super(MailThread, self)._notify_thread(message, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (118,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 438, in _send
    mail._postprocess_sent_message(success_pids=success_pids, failure_type=failure_type)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 175, in _postprocess_sent_message
    notifications = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (118,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/enterprise/mail_mobile/models/mail_thread.py", line 25, in _notify_thread
    recipients_data = super(MailThread, self)._notify_thread(message, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (119,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 438, in _send
    mail._postprocess_sent_message(success_pids=success_pids, failure_type=failure_type)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 175, in _postprocess_sent_message
    notifications = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (119,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/enterprise/mail_mobile/models/mail_thread.py", line 25, in _notify_thread
    recipients_data = super(MailThread, self)._notify_thread(message, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (120,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 438, in _send
    mail._postprocess_sent_message(success_pids=success_pids, failure_type=failure_type)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 175, in _postprocess_sent_message
    notifications = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (120,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/enterprise/mail_mobile/models/mail_thread.py", line 25, in _notify_thread
    recipients_data = super(MailThread, self)._notify_thread(message, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (121,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 438, in _send
    mail._postprocess_sent_message(success_pids=success_pids, failure_type=failure_type)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 175, in _postprocess_sent_message
    notifications = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (121,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/enterprise/mail_mobile/models/mail_thread.py", line 25, in _notify_thread
    recipients_data = super(MailThread, self)._notify_thread(message, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (122,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 438, in _send
    mail._postprocess_sent_message(success_pids=success_pids, failure_type=failure_type)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 175, in _postprocess_sent_message
    notifications = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (122,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/enterprise/mail_mobile/models/mail_thread.py", line 25, in _notify_thread
    recipients_data = super(MailThread, self)._notify_thread(message, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (123,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 438, in _send
    mail._postprocess_sent_message(success_pids=success_pids, failure_type=failure_type)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 175, in _postprocess_sent_message
    notifications = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (123,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/enterprise/mail_mobile/models/mail_thread.py", line 25, in _notify_thread
    recipients_data = super(MailThread, self)._notify_thread(message, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (124,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 438, in _send
    mail._postprocess_sent_message(success_pids=success_pids, failure_type=failure_type)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 175, in _postprocess_sent_message
    notifications = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (124,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/enterprise/mail_mobile/models/mail_thread.py", line 25, in _notify_thread
    recipients_data = super(MailThread, self)._notify_thread(message, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (125,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 438, in _send
    mail._postprocess_sent_message(success_pids=success_pids, failure_type=failure_type)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 175, in _postprocess_sent_message
    notifications = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (125,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/enterprise/mail_mobile/models/mail_thread.py", line 25, in _notify_thread
    recipients_data = super(MailThread, self)._notify_thread(message, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (126,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 438, in _send
    mail._postprocess_sent_message(success_pids=success_pids, failure_type=failure_type)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 175, in _postprocess_sent_message
    notifications = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (126,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/enterprise/mail_mobile/models/mail_thread.py", line 25, in _notify_thread
    recipients_data = super(MailThread, self)._notify_thread(message, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (127,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 438, in _send
    mail._postprocess_sent_message(success_pids=success_pids, failure_type=failure_type)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 175, in _postprocess_sent_message
    notifications = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (127,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/enterprise/mail_mobile/models/mail_thread.py", line 25, in _notify_thread
    recipients_data = super(MailThread, self)._notify_thread(message, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (128,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 438, in _send
    mail._postprocess_sent_message(success_pids=success_pids, failure_type=failure_type)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 175, in _postprocess_sent_message
    notifications = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (128,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/enterprise/mail_mobile/models/mail_thread.py", line 25, in _notify_thread
    recipients_data = super(MailThread, self)._notify_thread(message, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (129,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 438, in _send
    mail._postprocess_sent_message(success_pids=success_pids, failure_type=failure_type)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 175, in _postprocess_sent_message
    notifications = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (129,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/enterprise/mail_mobile/models/mail_thread.py", line 25, in _notify_thread
    recipients_data = super(MailThread, self)._notify_thread(message, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (130,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 438, in _send
    mail._postprocess_sent_message(success_pids=success_pids, failure_type=failure_type)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 175, in _postprocess_sent_message
    notifications = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (130,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/enterprise/mail_mobile/models/mail_thread.py", line 25, in _notify_thread
    recipients_data = super(MailThread, self)._notify_thread(message, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (131,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 438, in _send
    mail._postprocess_sent_message(success_pids=success_pids, failure_type=failure_type)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 175, in _postprocess_sent_message
    notifications = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (131,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/enterprise/mail_mobile/models/mail_thread.py", line 25, in _notify_thread
    recipients_data = super(MailThread, self)._notify_thread(message, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (132,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 438, in _send
    mail._postprocess_sent_message(success_pids=success_pids, failure_type=failure_type)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 175, in _postprocess_sent_message
    notifications = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (132,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/enterprise/mail_mobile/models/mail_thread.py", line 25, in _notify_thread
    recipients_data = super(MailThread, self)._notify_thread(message, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (133,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 438, in _send
    mail._postprocess_sent_message(success_pids=success_pids, failure_type=failure_type)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 175, in _postprocess_sent_message
    notifications = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (133,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/enterprise/mail_mobile/models/mail_thread.py", line 25, in _notify_thread
    recipients_data = super(MailThread, self)._notify_thread(message, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (134,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 438, in _send
    mail._postprocess_sent_message(success_pids=success_pids, failure_type=failure_type)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 175, in _postprocess_sent_message
    notifications = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (134,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/enterprise/mail_mobile/models/mail_thread.py", line 25, in _notify_thread
    recipients_data = super(MailThread, self)._notify_thread(message, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (135,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 438, in _send
    mail._postprocess_sent_message(success_pids=success_pids, failure_type=failure_type)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 175, in _postprocess_sent_message
    notifications = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (135,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/enterprise/mail_mobile/models/mail_thread.py", line 25, in _notify_thread
    recipients_data = super(MailThread, self)._notify_thread(message, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (136,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 438, in _send
    mail._postprocess_sent_message(success_pids=success_pids, failure_type=failure_type)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 175, in _postprocess_sent_message
    notifications = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (136,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/enterprise/mail_mobile/models/mail_thread.py", line 25, in _notify_thread
    recipients_data = super(MailThread, self)._notify_thread(message, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (137,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 438, in _send
    mail._postprocess_sent_message(success_pids=success_pids, failure_type=failure_type)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 175, in _postprocess_sent_message
    notifications = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (137,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/enterprise/mail_mobile/models/mail_thread.py", line 25, in _notify_thread
    recipients_data = super(MailThread, self)._notify_thread(message, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (138,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 438, in _send
    mail._postprocess_sent_message(success_pids=success_pids, failure_type=failure_type)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 175, in _postprocess_sent_message
    notifications = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (138,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/enterprise/mail_mobile/models/mail_thread.py", line 25, in _notify_thread
    recipients_data = super(MailThread, self)._notify_thread(message, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (139,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 438, in _send
    mail._postprocess_sent_message(success_pids=success_pids, failure_type=failure_type)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 175, in _postprocess_sent_message
    notifications = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (139,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/enterprise/mail_mobile/models/mail_thread.py", line 25, in _notify_thread
    recipients_data = super(MailThread, self)._notify_thread(message, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (140,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 438, in _send
    mail._postprocess_sent_message(success_pids=success_pids, failure_type=failure_type)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 175, in _postprocess_sent_message
    notifications = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (140,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/enterprise/mail_mobile/models/mail_thread.py", line 25, in _notify_thread
    recipients_data = super(MailThread, self)._notify_thread(message, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (141,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 438, in _send
    mail._postprocess_sent_message(success_pids=success_pids, failure_type=failure_type)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 175, in _postprocess_sent_message
    notifications = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (141,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/enterprise/mail_mobile/models/mail_thread.py", line 25, in _notify_thread
    recipients_data = super(MailThread, self)._notify_thread(message, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (142,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 438, in _send
    mail._postprocess_sent_message(success_pids=success_pids, failure_type=failure_type)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 175, in _postprocess_sent_message
    notifications = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (142,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/enterprise/mail_mobile/models/mail_thread.py", line 25, in _notify_thread
    recipients_data = super(MailThread, self)._notify_thread(message, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (143,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 438, in _send
    mail._postprocess_sent_message(success_pids=success_pids, failure_type=failure_type)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 175, in _postprocess_sent_message
    notifications = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (143,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/enterprise/mail_mobile/models/mail_thread.py", line 25, in _notify_thread
    recipients_data = super(MailThread, self)._notify_thread(message, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (144,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 438, in _send
    mail._postprocess_sent_message(success_pids=success_pids, failure_type=failure_type)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 175, in _postprocess_sent_message
    notifications = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (144,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/enterprise/mail_mobile/models/mail_thread.py", line 25, in _notify_thread
    recipients_data = super(MailThread, self)._notify_thread(message, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (145,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 438, in _send
    mail._postprocess_sent_message(success_pids=success_pids, failure_type=failure_type)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 175, in _postprocess_sent_message
    notifications = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (145,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/enterprise/mail_mobile/models/mail_thread.py", line 25, in _notify_thread
    recipients_data = super(MailThread, self)._notify_thread(message, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (146,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 438, in _send
    mail._postprocess_sent_message(success_pids=success_pids, failure_type=failure_type)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 175, in _postprocess_sent_message
    notifications = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (146,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/enterprise/mail_mobile/models/mail_thread.py", line 25, in _notify_thread
    recipients_data = super(MailThread, self)._notify_thread(message, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (147,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 438, in _send
    mail._postprocess_sent_message(success_pids=success_pids, failure_type=failure_type)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 175, in _postprocess_sent_message
    notifications = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (147,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/enterprise/mail_mobile/models/mail_thread.py", line 25, in _notify_thread
    recipients_data = super(MailThread, self)._notify_thread(message, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (148,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 438, in _send
    mail._postprocess_sent_message(success_pids=success_pids, failure_type=failure_type)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 175, in _postprocess_sent_message
    notifications = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (148,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/enterprise/mail_mobile/models/mail_thread.py", line 25, in _notify_thread
    recipients_data = super(MailThread, self)._notify_thread(message, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (149,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 438, in _send
    mail._postprocess_sent_message(success_pids=success_pids, failure_type=failure_type)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 175, in _postprocess_sent_message
    notifications = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (149,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/enterprise/mail_mobile/models/mail_thread.py", line 25, in _notify_thread
    recipients_data = super(MailThread, self)._notify_thread(message, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (150,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 438, in _send
    mail._postprocess_sent_message(success_pids=success_pids, failure_type=failure_type)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 175, in _postprocess_sent_message
    notifications = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (150,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/enterprise/mail_mobile/models/mail_thread.py", line 25, in _notify_thread
    recipients_data = super(MailThread, self)._notify_thread(message, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (151,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 438, in _send
    mail._postprocess_sent_message(success_pids=success_pids, failure_type=failure_type)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 175, in _postprocess_sent_message
    notifications = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (151,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/enterprise/mail_mobile/models/mail_thread.py", line 25, in _notify_thread
    recipients_data = super(MailThread, self)._notify_thread(message, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (152,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 438, in _send
    mail._postprocess_sent_message(success_pids=success_pids, failure_type=failure_type)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 175, in _postprocess_sent_message
    notifications = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (152,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/enterprise/mail_mobile/models/mail_thread.py", line 25, in _notify_thread
    recipients_data = super(MailThread, self)._notify_thread(message, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (153,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 438, in _send
    mail._postprocess_sent_message(success_pids=success_pids, failure_type=failure_type)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 175, in _postprocess_sent_message
    notifications = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (153,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/enterprise/mail_mobile/models/mail_thread.py", line 25, in _notify_thread
    recipients_data = super(MailThread, self)._notify_thread(message, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (154,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 438, in _send
    mail._postprocess_sent_message(success_pids=success_pids, failure_type=failure_type)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 175, in _postprocess_sent_message
    notifications = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (154,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/enterprise/mail_mobile/models/mail_thread.py", line 25, in _notify_thread
    recipients_data = super(MailThread, self)._notify_thread(message, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (155,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 438, in _send
    mail._postprocess_sent_message(success_pids=success_pids, failure_type=failure_type)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 175, in _postprocess_sent_message
    notifications = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (155,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/enterprise/mail_mobile/models/mail_thread.py", line 25, in _notify_thread
    recipients_data = super(MailThread, self)._notify_thread(message, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (156,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 438, in _send
    mail._postprocess_sent_message(success_pids=success_pids, failure_type=failure_type)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 175, in _postprocess_sent_message
    notifications = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (156,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/enterprise/mail_mobile/models/mail_thread.py", line 25, in _notify_thread
    recipients_data = super(MailThread, self)._notify_thread(message, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (157,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 438, in _send
    mail._postprocess_sent_message(success_pids=success_pids, failure_type=failure_type)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 175, in _postprocess_sent_message
    notifications = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (157,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/enterprise/mail_mobile/models/mail_thread.py", line 25, in _notify_thread
    recipients_data = super(MailThread, self)._notify_thread(message, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (158,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 438, in _send
    mail._postprocess_sent_message(success_pids=success_pids, failure_type=failure_type)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 175, in _postprocess_sent_message
    notifications = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (158,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/enterprise/mail_mobile/models/mail_thread.py", line 25, in _notify_thread
    recipients_data = super(MailThread, self)._notify_thread(message, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (159,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 438, in _send
    mail._postprocess_sent_message(success_pids=success_pids, failure_type=failure_type)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 175, in _postprocess_sent_message
    notifications = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (159,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/enterprise/mail_mobile/models/mail_thread.py", line 25, in _notify_thread
    recipients_data = super(MailThread, self)._notify_thread(message, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (160,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 438, in _send
    mail._postprocess_sent_message(success_pids=success_pids, failure_type=failure_type)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 175, in _postprocess_sent_message
    notifications = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (160,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/enterprise/mail_mobile/models/mail_thread.py", line 25, in _notify_thread
    recipients_data = super(MailThread, self)._notify_thread(message, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (161,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 438, in _send
    mail._postprocess_sent_message(success_pids=success_pids, failure_type=failure_type)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 175, in _postprocess_sent_message
    notifications = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (161,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/enterprise/mail_mobile/models/mail_thread.py", line 25, in _notify_thread
    recipients_data = super(MailThread, self)._notify_thread(message, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (162,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 438, in _send
    mail._postprocess_sent_message(success_pids=success_pids, failure_type=failure_type)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 175, in _postprocess_sent_message
    notifications = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (162,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/enterprise/mail_mobile/models/mail_thread.py", line 25, in _notify_thread
    recipients_data = super(MailThread, self)._notify_thread(message, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (163,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 438, in _send
    mail._postprocess_sent_message(success_pids=success_pids, failure_type=failure_type)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 175, in _postprocess_sent_message
    notifications = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (163,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/enterprise/mail_mobile/models/mail_thread.py", line 25, in _notify_thread
    recipients_data = super(MailThread, self)._notify_thread(message, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (164,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 438, in _send
    mail._postprocess_sent_message(success_pids=success_pids, failure_type=failure_type)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 175, in _postprocess_sent_message
    notifications = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (164,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/enterprise/mail_mobile/models/mail_thread.py", line 25, in _notify_thread
    recipients_data = super(MailThread, self)._notify_thread(message, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (165,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 438, in _send
    mail._postprocess_sent_message(success_pids=success_pids, failure_type=failure_type)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 175, in _postprocess_sent_message
    notifications = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (165,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/enterprise/mail_mobile/models/mail_thread.py", line 25, in _notify_thread
    recipients_data = super(MailThread, self)._notify_thread(message, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (166,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 438, in _send
    mail._postprocess_sent_message(success_pids=success_pids, failure_type=failure_type)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 175, in _postprocess_sent_message
    notifications = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (166,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/enterprise/mail_mobile/models/mail_thread.py", line 25, in _notify_thread
    recipients_data = super(MailThread, self)._notify_thread(message, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (167,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 438, in _send
    mail._postprocess_sent_message(success_pids=success_pids, failure_type=failure_type)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 175, in _postprocess_sent_message
    notifications = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (167,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/enterprise/mail_mobile/models/mail_thread.py", line 25, in _notify_thread
    recipients_data = super(MailThread, self)._notify_thread(message, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (168,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 438, in _send
    mail._postprocess_sent_message(success_pids=success_pids, failure_type=failure_type)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 175, in _postprocess_sent_message
    notifications = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (168,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/enterprise/mail_mobile/models/mail_thread.py", line 25, in _notify_thread
    recipients_data = super(MailThread, self)._notify_thread(message, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (169,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 438, in _send
    mail._postprocess_sent_message(success_pids=success_pids, failure_type=failure_type)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 175, in _postprocess_sent_message
    notifications = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (169,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/enterprise/mail_mobile/models/mail_thread.py", line 25, in _notify_thread
    recipients_data = super(MailThread, self)._notify_thread(message, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (170,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 438, in _send
    mail._postprocess_sent_message(success_pids=success_pids, failure_type=failure_type)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 175, in _postprocess_sent_message
    notifications = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (170,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/enterprise/mail_mobile/models/mail_thread.py", line 25, in _notify_thread
    recipients_data = super(MailThread, self)._notify_thread(message, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (171,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 438, in _send
    mail._postprocess_sent_message(success_pids=success_pids, failure_type=failure_type)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 175, in _postprocess_sent_message
    notifications = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (171,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/enterprise/mail_mobile/models/mail_thread.py", line 25, in _notify_thread
    recipients_data = super(MailThread, self)._notify_thread(message, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (172,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 438, in _send
    mail._postprocess_sent_message(success_pids=success_pids, failure_type=failure_type)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 175, in _postprocess_sent_message
    notifications = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (172,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/enterprise/mail_mobile/models/mail_thread.py", line 25, in _notify_thread
    recipients_data = super(MailThread, self)._notify_thread(message, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (173,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 438, in _send
    mail._postprocess_sent_message(success_pids=success_pids, failure_type=failure_type)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 175, in _postprocess_sent_message
    notifications = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (173,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/enterprise/mail_mobile/models/mail_thread.py", line 25, in _notify_thread
    recipients_data = super(MailThread, self)._notify_thread(message, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (174,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 438, in _send
    mail._postprocess_sent_message(success_pids=success_pids, failure_type=failure_type)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 175, in _postprocess_sent_message
    notifications = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (174,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/enterprise/mail_mobile/models/mail_thread.py", line 25, in _notify_thread
    recipients_data = super(MailThread, self)._notify_thread(message, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (175,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 438, in _send
    mail._postprocess_sent_message(success_pids=success_pids, failure_type=failure_type)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 175, in _postprocess_sent_message
    notifications = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (175,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/enterprise/mail_mobile/models/mail_thread.py", line 25, in _notify_thread
    recipients_data = super(MailThread, self)._notify_thread(message, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (176,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 438, in _send
    mail._postprocess_sent_message(success_pids=success_pids, failure_type=failure_type)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 175, in _postprocess_sent_message
    notifications = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (176,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/enterprise/mail_mobile/models/mail_thread.py", line 25, in _notify_thread
    recipients_data = super(MailThread, self)._notify_thread(message, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (177,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 438, in _send
    mail._postprocess_sent_message(success_pids=success_pids, failure_type=failure_type)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 175, in _postprocess_sent_message
    notifications = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (177,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/enterprise/mail_mobile/models/mail_thread.py", line 25, in _notify_thread
    recipients_data = super(MailThread, self)._notify_thread(message, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (178,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 438, in _send
    mail._postprocess_sent_message(success_pids=success_pids, failure_type=failure_type)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 175, in _postprocess_sent_message
    notifications = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (178,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/enterprise/mail_mobile/models/mail_thread.py", line 25, in _notify_thread
    recipients_data = super(MailThread, self)._notify_thread(message, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (179,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 438, in _send
    mail._postprocess_sent_message(success_pids=success_pids, failure_type=failure_type)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 175, in _postprocess_sent_message
    notifications = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (179,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/enterprise/mail_mobile/models/mail_thread.py", line 25, in _notify_thread
    recipients_data = super(MailThread, self)._notify_thread(message, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (180,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 438, in _send
    mail._postprocess_sent_message(success_pids=success_pids, failure_type=failure_type)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 175, in _postprocess_sent_message
    notifications = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (180,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/enterprise/mail_mobile/models/mail_thread.py", line 25, in _notify_thread
    recipients_data = super(MailThread, self)._notify_thread(message, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (181,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 438, in _send
    mail._postprocess_sent_message(success_pids=success_pids, failure_type=failure_type)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 175, in _postprocess_sent_message
    notifications = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (181,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/enterprise/mail_mobile/models/mail_thread.py", line 25, in _notify_thread
    recipients_data = super(MailThread, self)._notify_thread(message, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (182,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 438, in _send
    mail._postprocess_sent_message(success_pids=success_pids, failure_type=failure_type)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 175, in _postprocess_sent_message
    notifications = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (182,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/enterprise/mail_mobile/models/mail_thread.py", line 25, in _notify_thread
    recipients_data = super(MailThread, self)._notify_thread(message, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (183,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 438, in _send
    mail._postprocess_sent_message(success_pids=success_pids, failure_type=failure_type)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 175, in _postprocess_sent_message
    notifications = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (183,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/enterprise/mail_mobile/models/mail_thread.py", line 25, in _notify_thread
    recipients_data = super(MailThread, self)._notify_thread(message, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (184,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 438, in _send
    mail._postprocess_sent_message(success_pids=success_pids, failure_type=failure_type)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 175, in _postprocess_sent_message
    notifications = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (184,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/enterprise/mail_mobile/models/mail_thread.py", line 25, in _notify_thread
    recipients_data = super(MailThread, self)._notify_thread(message, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (185,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 438, in _send
    mail._postprocess_sent_message(success_pids=success_pids, failure_type=failure_type)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 175, in _postprocess_sent_message
    notifications = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (185,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/enterprise/mail_mobile/models/mail_thread.py", line 25, in _notify_thread
    recipients_data = super(MailThread, self)._notify_thread(message, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (186,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 438, in _send
    mail._postprocess_sent_message(success_pids=success_pids, failure_type=failure_type)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 175, in _postprocess_sent_message
    notifications = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (186,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/enterprise/mail_mobile/models/mail_thread.py", line 25, in _notify_thread
    recipients_data = super(MailThread, self)._notify_thread(message, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (187,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 438, in _send
    mail._postprocess_sent_message(success_pids=success_pids, failure_type=failure_type)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 175, in _postprocess_sent_message
    notifications = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (187,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/enterprise/mail_mobile/models/mail_thread.py", line 25, in _notify_thread
    recipients_data = super(MailThread, self)._notify_thread(message, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (188,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 438, in _send
    mail._postprocess_sent_message(success_pids=success_pids, failure_type=failure_type)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 175, in _postprocess_sent_message
    notifications = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (188,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/enterprise/mail_mobile/models/mail_thread.py", line 25, in _notify_thread
    recipients_data = super(MailThread, self)._notify_thread(message, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (189,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 438, in _send
    mail._postprocess_sent_message(success_pids=success_pids, failure_type=failure_type)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 175, in _postprocess_sent_message
    notifications = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (189,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/enterprise/mail_mobile/models/mail_thread.py", line 25, in _notify_thread
    recipients_data = super(MailThread, self)._notify_thread(message, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (190,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 438, in _send
    mail._postprocess_sent_message(success_pids=success_pids, failure_type=failure_type)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 175, in _postprocess_sent_message
    notifications = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (190,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/enterprise/mail_mobile/models/mail_thread.py", line 25, in _notify_thread
    recipients_data = super(MailThread, self)._notify_thread(message, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (191,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 438, in _send
    mail._postprocess_sent_message(success_pids=success_pids, failure_type=failure_type)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 175, in _postprocess_sent_message
    notifications = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (191,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/enterprise/mail_mobile/models/mail_thread.py", line 25, in _notify_thread
    recipients_data = super(MailThread, self)._notify_thread(message, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (192,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 438, in _send
    mail._postprocess_sent_message(success_pids=success_pids, failure_type=failure_type)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 175, in _postprocess_sent_message
    notifications = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (192,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/enterprise/mail_mobile/models/mail_thread.py", line 25, in _notify_thread
    recipients_data = super(MailThread, self)._notify_thread(message, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (193,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 438, in _send
    mail._postprocess_sent_message(success_pids=success_pids, failure_type=failure_type)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 175, in _postprocess_sent_message
    notifications = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (193,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/enterprise/mail_mobile/models/mail_thread.py", line 25, in _notify_thread
    recipients_data = super(MailThread, self)._notify_thread(message, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (194,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 438, in _send
    mail._postprocess_sent_message(success_pids=success_pids, failure_type=failure_type)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 175, in _postprocess_sent_message
    notifications = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (194,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/enterprise/mail_mobile/models/mail_thread.py", line 25, in _notify_thread
    recipients_data = super(MailThread, self)._notify_thread(message, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (195,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 438, in _send
    mail._postprocess_sent_message(success_pids=success_pids, failure_type=failure_type)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 175, in _postprocess_sent_message
    notifications = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (195,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/enterprise/mail_mobile/models/mail_thread.py", line 25, in _notify_thread
    recipients_data = super(MailThread, self)._notify_thread(message, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (196,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 438, in _send
    mail._postprocess_sent_message(success_pids=success_pids, failure_type=failure_type)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 175, in _postprocess_sent_message
    notifications = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (196,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/enterprise/mail_mobile/models/mail_thread.py", line 25, in _notify_thread
    recipients_data = super(MailThread, self)._notify_thread(message, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (197,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 438, in _send
    mail._postprocess_sent_message(success_pids=success_pids, failure_type=failure_type)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 175, in _postprocess_sent_message
    notifications = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (197,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/enterprise/mail_mobile/models/mail_thread.py", line 25, in _notify_thread
    recipients_data = super(MailThread, self)._notify_thread(message, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (198,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 438, in _send
    mail._postprocess_sent_message(success_pids=success_pids, failure_type=failure_type)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 175, in _postprocess_sent_message
    notifications = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (198,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/enterprise/mail_mobile/models/mail_thread.py", line 25, in _notify_thread
    recipients_data = super(MailThread, self)._notify_thread(message, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (199,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 438, in _send
    mail._postprocess_sent_message(success_pids=success_pids, failure_type=failure_type)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 175, in _postprocess_sent_message
    notifications = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (199,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/enterprise/mail_mobile/models/mail_thread.py", line 25, in _notify_thread
    recipients_data = super(MailThread, self)._notify_thread(message, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (200,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 438, in _send
    mail._postprocess_sent_message(success_pids=success_pids, failure_type=failure_type)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 175, in _postprocess_sent_message
    notifications = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (200,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/enterprise/mail_mobile/models/mail_thread.py", line 25, in _notify_thread
    recipients_data = super(MailThread, self)._notify_thread(message, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (201,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 438, in _send
    mail._postprocess_sent_message(success_pids=success_pids, failure_type=failure_type)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 175, in _postprocess_sent_message
    notifications = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (201,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/enterprise/mail_mobile/models/mail_thread.py", line 25, in _notify_thread
    recipients_data = super(MailThread, self)._notify_thread(message, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (202,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 438, in _send
    mail._postprocess_sent_message(success_pids=success_pids, failure_type=failure_type)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 175, in _postprocess_sent_message
    notifications = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (202,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/enterprise/mail_mobile/models/mail_thread.py", line 25, in _notify_thread
    recipients_data = super(MailThread, self)._notify_thread(message, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (203,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 438, in _send
    mail._postprocess_sent_message(success_pids=success_pids, failure_type=failure_type)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 175, in _postprocess_sent_message
    notifications = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (203,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/enterprise/mail_mobile/models/mail_thread.py", line 25, in _notify_thread
    recipients_data = super(MailThread, self)._notify_thread(message, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (204,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 438, in _send
    mail._postprocess_sent_message(success_pids=success_pids, failure_type=failure_type)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 175, in _postprocess_sent_message
    notifications = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (204,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/enterprise/mail_mobile/models/mail_thread.py", line 25, in _notify_thread
    recipients_data = super(MailThread, self)._notify_thread(message, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (205,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 438, in _send
    mail._postprocess_sent_message(success_pids=success_pids, failure_type=failure_type)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 175, in _postprocess_sent_message
    notifications = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (205,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/enterprise/mail_mobile/models/mail_thread.py", line 25, in _notify_thread
    recipients_data = super(MailThread, self)._notify_thread(message, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (206,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 438, in _send
    mail._postprocess_sent_message(success_pids=success_pids, failure_type=failure_type)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 175, in _postprocess_sent_message
    notifications = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (206,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/enterprise/mail_mobile/models/mail_thread.py", line 25, in _notify_thread
    recipients_data = super(MailThread, self)._notify_thread(message, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (207,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 438, in _send
    mail._postprocess_sent_message(success_pids=success_pids, failure_type=failure_type)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 175, in _postprocess_sent_message
    notifications = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (207,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/enterprise/mail_mobile/models/mail_thread.py", line 25, in _notify_thread
    recipients_data = super(MailThread, self)._notify_thread(message, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (208,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 438, in _send
    mail._postprocess_sent_message(success_pids=success_pids, failure_type=failure_type)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 175, in _postprocess_sent_message
    notifications = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (208,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/enterprise/mail_mobile/models/mail_thread.py", line 25, in _notify_thread
    recipients_data = super(MailThread, self)._notify_thread(message, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (209,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 438, in _send
    mail._postprocess_sent_message(success_pids=success_pids, failure_type=failure_type)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 175, in _postprocess_sent_message
    notifications = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (209,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/enterprise/mail_mobile/models/mail_thread.py", line 25, in _notify_thread
    recipients_data = super(MailThread, self)._notify_thread(message, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (210,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 438, in _send
    mail._postprocess_sent_message(success_pids=success_pids, failure_type=failure_type)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 175, in _postprocess_sent_message
    notifications = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (210,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/enterprise/mail_mobile/models/mail_thread.py", line 25, in _notify_thread
    recipients_data = super(MailThread, self)._notify_thread(message, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (211,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 438, in _send
    mail._postprocess_sent_message(success_pids=success_pids, failure_type=failure_type)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 175, in _postprocess_sent_message
    notifications = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (211,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/enterprise/mail_mobile/models/mail_thread.py", line 25, in _notify_thread
    recipients_data = super(MailThread, self)._notify_thread(message, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (212,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 438, in _send
    mail._postprocess_sent_message(success_pids=success_pids, failure_type=failure_type)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 175, in _postprocess_sent_message
    notifications = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (212,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/enterprise/mail_mobile/models/mail_thread.py", line 25, in _notify_thread
    recipients_data = super(MailThread, self)._notify_thread(message, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (213,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 438, in _send
    mail._postprocess_sent_message(success_pids=success_pids, failure_type=failure_type)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 175, in _postprocess_sent_message
    notifications = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (213,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/enterprise/mail_mobile/models/mail_thread.py", line 25, in _notify_thread
    recipients_data = super(MailThread, self)._notify_thread(message, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (214,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 438, in _send
    mail._postprocess_sent_message(success_pids=success_pids, failure_type=failure_type)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 175, in _postprocess_sent_message
    notifications = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (214,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/enterprise/mail_mobile/models/mail_thread.py", line 25, in _notify_thread
    recipients_data = super(MailThread, self)._notify_thread(message, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (215,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 438, in _send
    mail._postprocess_sent_message(success_pids=success_pids, failure_type=failure_type)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 175, in _postprocess_sent_message
    notifications = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (215,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/enterprise/mail_mobile/models/mail_thread.py", line 25, in _notify_thread
    recipients_data = super(MailThread, self)._notify_thread(message, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (216,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 438, in _send
    mail._postprocess_sent_message(success_pids=success_pids, failure_type=failure_type)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 175, in _postprocess_sent_message
    notifications = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (216,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/enterprise/mail_mobile/models/mail_thread.py", line 25, in _notify_thread
    recipients_data = super(MailThread, self)._notify_thread(message, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (217,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 438, in _send
    mail._postprocess_sent_message(success_pids=success_pids, failure_type=failure_type)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 175, in _postprocess_sent_message
    notifications = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (217,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/enterprise/mail_mobile/models/mail_thread.py", line 25, in _notify_thread
    recipients_data = super(MailThread, self)._notify_thread(message, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (218,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 438, in _send
    mail._postprocess_sent_message(success_pids=success_pids, failure_type=failure_type)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 175, in _postprocess_sent_message
    notifications = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (218,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/enterprise/mail_mobile/models/mail_thread.py", line 25, in _notify_thread
    recipients_data = super(MailThread, self)._notify_thread(message, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (219,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 438, in _send
    mail._postprocess_sent_message(success_pids=success_pids, failure_type=failure_type)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 175, in _postprocess_sent_message
    notifications = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (219,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/enterprise/mail_mobile/models/mail_thread.py", line 25, in _notify_thread
    recipients_data = super(MailThread, self)._notify_thread(message, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (220,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 438, in _send
    mail._postprocess_sent_message(success_pids=success_pids, failure_type=failure_type)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 175, in _postprocess_sent_message
    notifications = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (220,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of snailmail.letter() / state: NOT IN {'canceled', 'sent'} -> IN ['pending', 'error']
  File "/home/odoo/Documents/dev/odoo/odoo/tools/convert.py", line 692, in _tag_root
    f(rec)
  File "/home/odoo/Documents/dev/odoo/odoo/tools/convert.py", line 593, in _tag_record
    record = model._load_records([data], self.mode == 'update')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4571, in _load_records
    records = self._load_records_create([data['values'] for data in to_create])
  File "/home/odoo/Documents/dev/odoo/odoo/addons/base/models/res_partner.py", line 680, in _load_records_create
    self.browse(children).write(to_write)
  File "/home/odoo/Documents/dev/odoo/addons/snailmail/models/res_partner.py", line 20, in write
    letters = self.env['snailmail.letter'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "snailmail_letter".id FROM "snailmail_letter" WHERE (("snailmail_letter"."state" in %s) AND ("snailmail_letter"."partner_id" in %s))' with params: [('pending', 'error'), (1027,)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_picking.py", line 457, in _compute_products_availability
    all_moves._fields['forecast_availability'].compute_value(all_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(484,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_picking.py", line 457, in _compute_products_availability
    all_moves._fields['forecast_availability'].compute_value(all_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(484,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_picking.py", line 457, in _compute_products_availability
    all_moves._fields['forecast_availability'].compute_value(all_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(484,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 308, in test_report_forecast_1
    report_values, docs, lines = self.get_report_forecast(product_template_ids=self.product_template.ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 35, in get_report_forecast
    report_values = report._get_report_values(docids=product_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 246, in _get_report_values
    'docs': self._get_report_data(product_template_ids=docids),
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 106, in _get_report_data
    res['lines'] = self._get_report_lines(product_template_ids, product_variant_ids, wh_location_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 161, in _get_report_lines
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in (SELECT "product_product".id FROM "product_product" WHERE ("product_product"."product_tmpl_id" in %s))) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in %s) AND (("stock_move"."location_dest_id" not in %s) OR "stock_move"."location_dest_id" IS NULL))) AND ("stock_move"."state" in %s))' with params: [(340,), '0.00', (7, 19, 20, 21, 22, 8, 18, 17, 33), (7, 19, 20, 21, 22, 8, 18, 17, 33), ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 308, in test_report_forecast_1
    report_values, docs, lines = self.get_report_forecast(product_template_ids=self.product_template.ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 35, in get_report_forecast
    report_values = report._get_report_values(docids=product_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 246, in _get_report_values
    'docs': self._get_report_data(product_template_ids=docids),
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 106, in _get_report_data
    res['lines'] = self._get_report_lines(product_template_ids, product_variant_ids, wh_location_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 162, in _get_report_lines
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in (SELECT "product_product".id FROM "product_product" WHERE ("product_product"."product_tmpl_id" in %s))) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in %s) AND (("stock_move"."location_dest_id" not in %s) OR "stock_move"."location_dest_id" IS NULL))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(340,), '0.00', (7, 19, 20, 21, 22, 8, 18, 17, 33), (7, 19, 20, 21, 22, 8, 18, 17, 33), ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 308, in test_report_forecast_1
    report_values, docs, lines = self.get_report_forecast(product_template_ids=self.product_template.ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 35, in get_report_forecast
    report_values = report._get_report_values(docids=product_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 246, in _get_report_values
    'docs': self._get_report_data(product_template_ids=docids),
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 106, in _get_report_data
    res['lines'] = self._get_report_lines(product_template_ids, product_variant_ids, wh_location_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 171, in _get_report_lines
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in (SELECT "product_product".id FROM "product_product" WHERE ("product_product"."product_tmpl_id" in %s))) AND ("stock_move"."product_uom_qty" != %s)) AND ((("stock_move"."location_id" not in %s) OR "stock_move"."location_id" IS NULL) AND ("stock_move"."location_dest_id" in %s))) AND ("stock_move"."state" in %s))' with params: [(340,), '0.00', (7, 19, 20, 21, 22, 8, 18, 17, 33), (7, 19, 20, 21, 22, 8, 18, 17, 33), ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 326, in test_report_forecast_1
    report_values, docs, lines = self.get_report_forecast(product_template_ids=self.product_template.ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 35, in get_report_forecast
    report_values = report._get_report_values(docids=product_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 246, in _get_report_values
    'docs': self._get_report_data(product_template_ids=docids),
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 106, in _get_report_data
    res['lines'] = self._get_report_lines(product_template_ids, product_variant_ids, wh_location_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 161, in _get_report_lines
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in (SELECT "product_product".id FROM "product_product" WHERE ("product_product"."product_tmpl_id" in %s))) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in %s) AND (("stock_move"."location_dest_id" not in %s) OR "stock_move"."location_dest_id" IS NULL))) AND ("stock_move"."state" in %s))' with params: [(340,), '0.00', (7, 19, 20, 21, 22, 8, 18, 17, 33), (7, 19, 20, 21, 22, 8, 18, 17, 33), ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 326, in test_report_forecast_1
    report_values, docs, lines = self.get_report_forecast(product_template_ids=self.product_template.ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 35, in get_report_forecast
    report_values = report._get_report_values(docids=product_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 246, in _get_report_values
    'docs': self._get_report_data(product_template_ids=docids),
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 106, in _get_report_data
    res['lines'] = self._get_report_lines(product_template_ids, product_variant_ids, wh_location_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 162, in _get_report_lines
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in (SELECT "product_product".id FROM "product_product" WHERE ("product_product"."product_tmpl_id" in %s))) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in %s) AND (("stock_move"."location_dest_id" not in %s) OR "stock_move"."location_dest_id" IS NULL))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(340,), '0.00', (7, 19, 20, 21, 22, 8, 18, 17, 33), (7, 19, 20, 21, 22, 8, 18, 17, 33), ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 326, in test_report_forecast_1
    report_values, docs, lines = self.get_report_forecast(product_template_ids=self.product_template.ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 35, in get_report_forecast
    report_values = report._get_report_values(docids=product_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 246, in _get_report_values
    'docs': self._get_report_data(product_template_ids=docids),
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 106, in _get_report_data
    res['lines'] = self._get_report_lines(product_template_ids, product_variant_ids, wh_location_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 171, in _get_report_lines
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in (SELECT "product_product".id FROM "product_product" WHERE ("product_product"."product_tmpl_id" in %s))) AND ("stock_move"."product_uom_qty" != %s)) AND ((("stock_move"."location_id" not in %s) OR "stock_move"."location_id" IS NULL) AND ("stock_move"."location_dest_id" in %s))) AND ("stock_move"."state" in %s))' with params: [(340,), '0.00', (7, 19, 20, 21, 22, 8, 18, 17, 33), (7, 19, 20, 21, 22, 8, 18, 17, 33), ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 344, in test_report_forecast_1
    report_values, docs, lines = self.get_report_forecast(product_template_ids=self.product_template.ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 35, in get_report_forecast
    report_values = report._get_report_values(docids=product_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 246, in _get_report_values
    'docs': self._get_report_data(product_template_ids=docids),
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 106, in _get_report_data
    res['lines'] = self._get_report_lines(product_template_ids, product_variant_ids, wh_location_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 161, in _get_report_lines
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in (SELECT "product_product".id FROM "product_product" WHERE ("product_product"."product_tmpl_id" in %s))) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in %s) AND (("stock_move"."location_dest_id" not in %s) OR "stock_move"."location_dest_id" IS NULL))) AND ("stock_move"."state" in %s))' with params: [(340,), '0.00', (7, 19, 20, 21, 22, 8, 18, 17, 33), (7, 19, 20, 21, 22, 8, 18, 17, 33), ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 344, in test_report_forecast_1
    report_values, docs, lines = self.get_report_forecast(product_template_ids=self.product_template.ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 35, in get_report_forecast
    report_values = report._get_report_values(docids=product_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 246, in _get_report_values
    'docs': self._get_report_data(product_template_ids=docids),
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 106, in _get_report_data
    res['lines'] = self._get_report_lines(product_template_ids, product_variant_ids, wh_location_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 162, in _get_report_lines
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in (SELECT "product_product".id FROM "product_product" WHERE ("product_product"."product_tmpl_id" in %s))) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in %s) AND (("stock_move"."location_dest_id" not in %s) OR "stock_move"."location_dest_id" IS NULL))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(340,), '0.00', (7, 19, 20, 21, 22, 8, 18, 17, 33), (7, 19, 20, 21, 22, 8, 18, 17, 33), ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 344, in test_report_forecast_1
    report_values, docs, lines = self.get_report_forecast(product_template_ids=self.product_template.ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 35, in get_report_forecast
    report_values = report._get_report_values(docids=product_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 246, in _get_report_values
    'docs': self._get_report_data(product_template_ids=docids),
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 106, in _get_report_data
    res['lines'] = self._get_report_lines(product_template_ids, product_variant_ids, wh_location_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 171, in _get_report_lines
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in (SELECT "product_product".id FROM "product_product" WHERE ("product_product"."product_tmpl_id" in %s))) AND ("stock_move"."product_uom_qty" != %s)) AND ((("stock_move"."location_id" not in %s) OR "stock_move"."location_id" IS NULL) AND ("stock_move"."location_dest_id" in %s))) AND ("stock_move"."state" in %s))' with params: [(340,), '0.00', (7, 19, 20, 21, 22, 8, 18, 17, 33), (7, 19, 20, 21, 22, 8, 18, 17, 33), ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 352, in test_report_forecast_1
    report_values, docs, lines = self.get_report_forecast(product_template_ids=self.product_template.ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 35, in get_report_forecast
    report_values = report._get_report_values(docids=product_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 246, in _get_report_values
    'docs': self._get_report_data(product_template_ids=docids),
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 106, in _get_report_data
    res['lines'] = self._get_report_lines(product_template_ids, product_variant_ids, wh_location_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 161, in _get_report_lines
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in (SELECT "product_product".id FROM "product_product" WHERE ("product_product"."product_tmpl_id" in %s))) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in %s) AND (("stock_move"."location_dest_id" not in %s) OR "stock_move"."location_dest_id" IS NULL))) AND ("stock_move"."state" in %s))' with params: [(340,), '0.00', (7, 19, 20, 21, 22, 8, 18, 17, 33), (7, 19, 20, 21, 22, 8, 18, 17, 33), ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 352, in test_report_forecast_1
    report_values, docs, lines = self.get_report_forecast(product_template_ids=self.product_template.ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 35, in get_report_forecast
    report_values = report._get_report_values(docids=product_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 246, in _get_report_values
    'docs': self._get_report_data(product_template_ids=docids),
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 106, in _get_report_data
    res['lines'] = self._get_report_lines(product_template_ids, product_variant_ids, wh_location_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 162, in _get_report_lines
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in (SELECT "product_product".id FROM "product_product" WHERE ("product_product"."product_tmpl_id" in %s))) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in %s) AND (("stock_move"."location_dest_id" not in %s) OR "stock_move"."location_dest_id" IS NULL))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(340,), '0.00', (7, 19, 20, 21, 22, 8, 18, 17, 33), (7, 19, 20, 21, 22, 8, 18, 17, 33), ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 352, in test_report_forecast_1
    report_values, docs, lines = self.get_report_forecast(product_template_ids=self.product_template.ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 35, in get_report_forecast
    report_values = report._get_report_values(docids=product_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 246, in _get_report_values
    'docs': self._get_report_data(product_template_ids=docids),
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 106, in _get_report_data
    res['lines'] = self._get_report_lines(product_template_ids, product_variant_ids, wh_location_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 171, in _get_report_lines
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in (SELECT "product_product".id FROM "product_product" WHERE ("product_product"."product_tmpl_id" in %s))) AND ("stock_move"."product_uom_qty" != %s)) AND ((("stock_move"."location_id" not in %s) OR "stock_move"."location_id" IS NULL) AND ("stock_move"."location_dest_id" in %s))) AND ("stock_move"."state" in %s))' with params: [(340,), '0.00', (7, 19, 20, 21, 22, 8, 18, 17, 33), (7, 19, 20, 21, 22, 8, 18, 17, 33), ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 366, in test_report_forecast_1
    report_values, docs, lines = self.get_report_forecast(product_template_ids=self.product_template.ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 35, in get_report_forecast
    report_values = report._get_report_values(docids=product_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 246, in _get_report_values
    'docs': self._get_report_data(product_template_ids=docids),
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 106, in _get_report_data
    res['lines'] = self._get_report_lines(product_template_ids, product_variant_ids, wh_location_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 161, in _get_report_lines
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in (SELECT "product_product".id FROM "product_product" WHERE ("product_product"."product_tmpl_id" in %s))) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in %s) AND (("stock_move"."location_dest_id" not in %s) OR "stock_move"."location_dest_id" IS NULL))) AND ("stock_move"."state" in %s))' with params: [(340,), '0.00', (7, 19, 20, 21, 22, 8, 18, 17, 33), (7, 19, 20, 21, 22, 8, 18, 17, 33), ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 366, in test_report_forecast_1
    report_values, docs, lines = self.get_report_forecast(product_template_ids=self.product_template.ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 35, in get_report_forecast
    report_values = report._get_report_values(docids=product_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 246, in _get_report_values
    'docs': self._get_report_data(product_template_ids=docids),
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 106, in _get_report_data
    res['lines'] = self._get_report_lines(product_template_ids, product_variant_ids, wh_location_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 162, in _get_report_lines
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in (SELECT "product_product".id FROM "product_product" WHERE ("product_product"."product_tmpl_id" in %s))) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in %s) AND (("stock_move"."location_dest_id" not in %s) OR "stock_move"."location_dest_id" IS NULL))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(340,), '0.00', (7, 19, 20, 21, 22, 8, 18, 17, 33), (7, 19, 20, 21, 22, 8, 18, 17, 33), ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 366, in test_report_forecast_1
    report_values, docs, lines = self.get_report_forecast(product_template_ids=self.product_template.ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 35, in get_report_forecast
    report_values = report._get_report_values(docids=product_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 246, in _get_report_values
    'docs': self._get_report_data(product_template_ids=docids),
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 106, in _get_report_data
    res['lines'] = self._get_report_lines(product_template_ids, product_variant_ids, wh_location_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 171, in _get_report_lines
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in (SELECT "product_product".id FROM "product_product" WHERE ("product_product"."product_tmpl_id" in %s))) AND ("stock_move"."product_uom_qty" != %s)) AND ((("stock_move"."location_id" not in %s) OR "stock_move"."location_id" IS NULL) AND ("stock_move"."location_dest_id" in %s))) AND ("stock_move"."state" in %s))' with params: [(340,), '0.00', (7, 19, 20, 21, 22, 8, 18, 17, 33), (7, 19, 20, 21, 22, 8, 18, 17, 33), ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 400, in test_report_forecast_1
    report_values, docs, lines = self.get_report_forecast(product_template_ids=self.product_template.ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 35, in get_report_forecast
    report_values = report._get_report_values(docids=product_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 246, in _get_report_values
    'docs': self._get_report_data(product_template_ids=docids),
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 106, in _get_report_data
    res['lines'] = self._get_report_lines(product_template_ids, product_variant_ids, wh_location_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 161, in _get_report_lines
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in (SELECT "product_product".id FROM "product_product" WHERE ("product_product"."product_tmpl_id" in %s))) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in %s) AND (("stock_move"."location_dest_id" not in %s) OR "stock_move"."location_dest_id" IS NULL))) AND ("stock_move"."state" in %s))' with params: [(340,), '0.00', (7, 19, 20, 21, 22, 8, 18, 17, 33), (7, 19, 20, 21, 22, 8, 18, 17, 33), ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 400, in test_report_forecast_1
    report_values, docs, lines = self.get_report_forecast(product_template_ids=self.product_template.ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 35, in get_report_forecast
    report_values = report._get_report_values(docids=product_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 246, in _get_report_values
    'docs': self._get_report_data(product_template_ids=docids),
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 106, in _get_report_data
    res['lines'] = self._get_report_lines(product_template_ids, product_variant_ids, wh_location_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 162, in _get_report_lines
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in (SELECT "product_product".id FROM "product_product" WHERE ("product_product"."product_tmpl_id" in %s))) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in %s) AND (("stock_move"."location_dest_id" not in %s) OR "stock_move"."location_dest_id" IS NULL))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(340,), '0.00', (7, 19, 20, 21, 22, 8, 18, 17, 33), (7, 19, 20, 21, 22, 8, 18, 17, 33), ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 400, in test_report_forecast_1
    report_values, docs, lines = self.get_report_forecast(product_template_ids=self.product_template.ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 35, in get_report_forecast
    report_values = report._get_report_values(docids=product_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 246, in _get_report_values
    'docs': self._get_report_data(product_template_ids=docids),
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 106, in _get_report_data
    res['lines'] = self._get_report_lines(product_template_ids, product_variant_ids, wh_location_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 171, in _get_report_lines
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in (SELECT "product_product".id FROM "product_product" WHERE ("product_product"."product_tmpl_id" in %s))) AND ("stock_move"."product_uom_qty" != %s)) AND ((("stock_move"."location_id" not in %s) OR "stock_move"."location_id" IS NULL) AND ("stock_move"."location_dest_id" in %s))) AND ("stock_move"."state" in %s))' with params: [(340,), '0.00', (7, 19, 20, 21, 22, 8, 18, 17, 33), (7, 19, 20, 21, 22, 8, 18, 17, 33), ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(554,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(554,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(554,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/usr/lib/python3.10/unittest/case.py", line 591, in run
    self._callTestMethod(testMethod)
  File "/usr/lib/python3.10/unittest/case.py", line 549, in _callTestMethod
    method()
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 1100, in test_report_forecast_10_report_line_corresponding_to_picking_highlighted
    delivery1.move_ids._compute_forecast_information()  # Because depends not "complete"
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(554,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/usr/lib/python3.10/unittest/case.py", line 591, in run
    self._callTestMethod(testMethod)
  File "/usr/lib/python3.10/unittest/case.py", line 549, in _callTestMethod
    method()
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 1100, in test_report_forecast_10_report_line_corresponding_to_picking_highlighted
    delivery1.move_ids._compute_forecast_information()  # Because depends not "complete"
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(554,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/usr/lib/python3.10/unittest/case.py", line 591, in run
    self._callTestMethod(testMethod)
  File "/usr/lib/python3.10/unittest/case.py", line 549, in _callTestMethod
    method()
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 1100, in test_report_forecast_10_report_line_corresponding_to_picking_highlighted
    delivery1.move_ids._compute_forecast_information()  # Because depends not "complete"
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(554,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/usr/lib/python3.10/unittest/case.py", line 591, in run
    self._callTestMethod(testMethod)
  File "/usr/lib/python3.10/unittest/case.py", line 549, in _callTestMethod
    method()
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 1108, in test_report_forecast_10_report_line_corresponding_to_picking_highlighted
    delivery1.move_ids._compute_forecast_information()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(554,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/usr/lib/python3.10/unittest/case.py", line 591, in run
    self._callTestMethod(testMethod)
  File "/usr/lib/python3.10/unittest/case.py", line 549, in _callTestMethod
    method()
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 1108, in test_report_forecast_10_report_line_corresponding_to_picking_highlighted
    delivery1.move_ids._compute_forecast_information()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(554,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/usr/lib/python3.10/unittest/case.py", line 591, in run
    self._callTestMethod(testMethod)
  File "/usr/lib/python3.10/unittest/case.py", line 549, in _callTestMethod
    method()
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 1108, in test_report_forecast_10_report_line_corresponding_to_picking_highlighted
    delivery1.move_ids._compute_forecast_information()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(554,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(554,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(554,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(554,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 1122, in test_report_forecast_10_report_line_corresponding_to_picking_highlighted
    _, _, lines = self.get_report_forecast(product_template_ids=self.product_template.ids, context=context)
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 35, in get_report_forecast
    report_values = report._get_report_values(docids=product_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 246, in _get_report_values
    'docs': self._get_report_data(product_template_ids=docids),
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 106, in _get_report_data
    res['lines'] = self._get_report_lines(product_template_ids, product_variant_ids, wh_location_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 161, in _get_report_lines
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in (SELECT "product_product".id FROM "product_product" WHERE ("product_product"."product_tmpl_id" in %s))) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in %s) AND (("stock_move"."location_dest_id" not in %s) OR "stock_move"."location_dest_id" IS NULL))) AND ("stock_move"."state" in %s))' with params: [(340,), '0.00', (7, 19, 20, 21, 22, 8, 18, 17, 33), (7, 19, 20, 21, 22, 8, 18, 17, 33), ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 1122, in test_report_forecast_10_report_line_corresponding_to_picking_highlighted
    _, _, lines = self.get_report_forecast(product_template_ids=self.product_template.ids, context=context)
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 35, in get_report_forecast
    report_values = report._get_report_values(docids=product_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 246, in _get_report_values
    'docs': self._get_report_data(product_template_ids=docids),
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 106, in _get_report_data
    res['lines'] = self._get_report_lines(product_template_ids, product_variant_ids, wh_location_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 162, in _get_report_lines
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in (SELECT "product_product".id FROM "product_product" WHERE ("product_product"."product_tmpl_id" in %s))) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in %s) AND (("stock_move"."location_dest_id" not in %s) OR "stock_move"."location_dest_id" IS NULL))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(340,), '0.00', (7, 19, 20, 21, 22, 8, 18, 17, 33), (7, 19, 20, 21, 22, 8, 18, 17, 33), ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 1122, in test_report_forecast_10_report_line_corresponding_to_picking_highlighted
    _, _, lines = self.get_report_forecast(product_template_ids=self.product_template.ids, context=context)
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 35, in get_report_forecast
    report_values = report._get_report_values(docids=product_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 246, in _get_report_values
    'docs': self._get_report_data(product_template_ids=docids),
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 106, in _get_report_data
    res['lines'] = self._get_report_lines(product_template_ids, product_variant_ids, wh_location_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 171, in _get_report_lines
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in (SELECT "product_product".id FROM "product_product" WHERE ("product_product"."product_tmpl_id" in %s))) AND ("stock_move"."product_uom_qty" != %s)) AND ((("stock_move"."location_id" not in %s) OR "stock_move"."location_id" IS NULL) AND ("stock_move"."location_dest_id" in %s))) AND ("stock_move"."state" in %s))' with params: [(340,), '0.00', (7, 19, 20, 21, 22, 8, 18, 17, 33), (7, 19, 20, 21, 22, 8, 18, 17, 33), ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 1122, in test_report_forecast_10_report_line_corresponding_to_picking_highlighted
    _, _, lines = self.get_report_forecast(product_template_ids=self.product_template.ids, context=context)
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 35, in get_report_forecast
    report_values = report._get_report_values(docids=product_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 246, in _get_report_values
    'docs': self._get_report_data(product_template_ids=docids),
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 106, in _get_report_data
    res['lines'] = self._get_report_lines(product_template_ids, product_variant_ids, wh_location_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 161, in _get_report_lines
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in (SELECT "product_product".id FROM "product_product" WHERE ("product_product"."product_tmpl_id" in %s))) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in %s) AND (("stock_move"."location_dest_id" not in %s) OR "stock_move"."location_dest_id" IS NULL))) AND ("stock_move"."state" in %s))' with params: [(340,), '0.00', (7, 19, 20, 21, 22, 8, 18, 17, 33), (7, 19, 20, 21, 22, 8, 18, 17, 33), ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 1122, in test_report_forecast_10_report_line_corresponding_to_picking_highlighted
    _, _, lines = self.get_report_forecast(product_template_ids=self.product_template.ids, context=context)
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 35, in get_report_forecast
    report_values = report._get_report_values(docids=product_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 246, in _get_report_values
    'docs': self._get_report_data(product_template_ids=docids),
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 106, in _get_report_data
    res['lines'] = self._get_report_lines(product_template_ids, product_variant_ids, wh_location_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 162, in _get_report_lines
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in (SELECT "product_product".id FROM "product_product" WHERE ("product_product"."product_tmpl_id" in %s))) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in %s) AND (("stock_move"."location_dest_id" not in %s) OR "stock_move"."location_dest_id" IS NULL))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(340,), '0.00', (7, 19, 20, 21, 22, 8, 18, 17, 33), (7, 19, 20, 21, 22, 8, 18, 17, 33), ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 1122, in test_report_forecast_10_report_line_corresponding_to_picking_highlighted
    _, _, lines = self.get_report_forecast(product_template_ids=self.product_template.ids, context=context)
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 35, in get_report_forecast
    report_values = report._get_report_values(docids=product_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 246, in _get_report_values
    'docs': self._get_report_data(product_template_ids=docids),
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 106, in _get_report_data
    res['lines'] = self._get_report_lines(product_template_ids, product_variant_ids, wh_location_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 171, in _get_report_lines
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in (SELECT "product_product".id FROM "product_product" WHERE ("product_product"."product_tmpl_id" in %s))) AND ("stock_move"."product_uom_qty" != %s)) AND ((("stock_move"."location_id" not in %s) OR "stock_move"."location_id" IS NULL) AND ("stock_move"."location_dest_id" in %s))) AND ("stock_move"."state" in %s))' with params: [(340,), '0.00', (7, 19, 20, 21, 22, 8, 18, 17, 33), (7, 19, 20, 21, 22, 8, 18, 17, 33), ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 1122, in test_report_forecast_10_report_line_corresponding_to_picking_highlighted
    _, _, lines = self.get_report_forecast(product_template_ids=self.product_template.ids, context=context)
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 35, in get_report_forecast
    report_values = report._get_report_values(docids=product_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 246, in _get_report_values
    'docs': self._get_report_data(product_template_ids=docids),
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 106, in _get_report_data
    res['lines'] = self._get_report_lines(product_template_ids, product_variant_ids, wh_location_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 161, in _get_report_lines
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in (SELECT "product_product".id FROM "product_product" WHERE ("product_product"."product_tmpl_id" in %s))) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in %s) AND (("stock_move"."location_dest_id" not in %s) OR "stock_move"."location_dest_id" IS NULL))) AND ("stock_move"."state" in %s))' with params: [(340,), '0.00', (7, 19, 20, 21, 22, 8, 18, 17, 33), (7, 19, 20, 21, 22, 8, 18, 17, 33), ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 1122, in test_report_forecast_10_report_line_corresponding_to_picking_highlighted
    _, _, lines = self.get_report_forecast(product_template_ids=self.product_template.ids, context=context)
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 35, in get_report_forecast
    report_values = report._get_report_values(docids=product_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 246, in _get_report_values
    'docs': self._get_report_data(product_template_ids=docids),
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 106, in _get_report_data
    res['lines'] = self._get_report_lines(product_template_ids, product_variant_ids, wh_location_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 162, in _get_report_lines
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in (SELECT "product_product".id FROM "product_product" WHERE ("product_product"."product_tmpl_id" in %s))) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in %s) AND (("stock_move"."location_dest_id" not in %s) OR "stock_move"."location_dest_id" IS NULL))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(340,), '0.00', (7, 19, 20, 21, 22, 8, 18, 17, 33), (7, 19, 20, 21, 22, 8, 18, 17, 33), ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 1122, in test_report_forecast_10_report_line_corresponding_to_picking_highlighted
    _, _, lines = self.get_report_forecast(product_template_ids=self.product_template.ids, context=context)
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 35, in get_report_forecast
    report_values = report._get_report_values(docids=product_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 246, in _get_report_values
    'docs': self._get_report_data(product_template_ids=docids),
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 106, in _get_report_data
    res['lines'] = self._get_report_lines(product_template_ids, product_variant_ids, wh_location_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 171, in _get_report_lines
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in (SELECT "product_product".id FROM "product_product" WHERE ("product_product"."product_tmpl_id" in %s))) AND ("stock_move"."product_uom_qty" != %s)) AND ((("stock_move"."location_id" not in %s) OR "stock_move"."location_id" IS NULL) AND ("stock_move"."location_dest_id" in %s))) AND ("stock_move"."state" in %s))' with params: [(340,), '0.00', (7, 19, 20, 21, 22, 8, 18, 17, 33), (7, 19, 20, 21, 22, 8, 18, 17, 33), ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 1122, in test_report_forecast_10_report_line_corresponding_to_picking_highlighted
    _, _, lines = self.get_report_forecast(product_template_ids=self.product_template.ids, context=context)
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 35, in get_report_forecast
    report_values = report._get_report_values(docids=product_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 246, in _get_report_values
    'docs': self._get_report_data(product_template_ids=docids),
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 106, in _get_report_data
    res['lines'] = self._get_report_lines(product_template_ids, product_variant_ids, wh_location_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 161, in _get_report_lines
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in (SELECT "product_product".id FROM "product_product" WHERE ("product_product"."product_tmpl_id" in %s))) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in %s) AND (("stock_move"."location_dest_id" not in %s) OR "stock_move"."location_dest_id" IS NULL))) AND ("stock_move"."state" in %s))' with params: [(340,), '0.00', (7, 19, 20, 21, 22, 8, 18, 17, 33), (7, 19, 20, 21, 22, 8, 18, 17, 33), ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 1122, in test_report_forecast_10_report_line_corresponding_to_picking_highlighted
    _, _, lines = self.get_report_forecast(product_template_ids=self.product_template.ids, context=context)
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 35, in get_report_forecast
    report_values = report._get_report_values(docids=product_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 246, in _get_report_values
    'docs': self._get_report_data(product_template_ids=docids),
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 106, in _get_report_data
    res['lines'] = self._get_report_lines(product_template_ids, product_variant_ids, wh_location_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 162, in _get_report_lines
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in (SELECT "product_product".id FROM "product_product" WHERE ("product_product"."product_tmpl_id" in %s))) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in %s) AND (("stock_move"."location_dest_id" not in %s) OR "stock_move"."location_dest_id" IS NULL))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(340,), '0.00', (7, 19, 20, 21, 22, 8, 18, 17, 33), (7, 19, 20, 21, 22, 8, 18, 17, 33), ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 1122, in test_report_forecast_10_report_line_corresponding_to_picking_highlighted
    _, _, lines = self.get_report_forecast(product_template_ids=self.product_template.ids, context=context)
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 35, in get_report_forecast
    report_values = report._get_report_values(docids=product_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 246, in _get_report_values
    'docs': self._get_report_data(product_template_ids=docids),
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 106, in _get_report_data
    res['lines'] = self._get_report_lines(product_template_ids, product_variant_ids, wh_location_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 171, in _get_report_lines
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in (SELECT "product_product".id FROM "product_product" WHERE ("product_product"."product_tmpl_id" in %s))) AND ("stock_move"."product_uom_qty" != %s)) AND ((("stock_move"."location_id" not in %s) OR "stock_move"."location_id" IS NULL) AND ("stock_move"."location_dest_id" in %s))) AND ("stock_move"."state" in %s))' with params: [(340,), '0.00', (7, 19, 20, 21, 22, 8, 18, 17, 33), (7, 19, 20, 21, 22, 8, 18, 17, 33), ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 1204, in test_report_forecast_11_non_reserved_order
    _, _, lines = self.get_report_forecast(product_template_ids=self.product_template.ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 35, in get_report_forecast
    report_values = report._get_report_values(docids=product_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 246, in _get_report_values
    'docs': self._get_report_data(product_template_ids=docids),
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 106, in _get_report_data
    res['lines'] = self._get_report_lines(product_template_ids, product_variant_ids, wh_location_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 161, in _get_report_lines
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in (SELECT "product_product".id FROM "product_product" WHERE ("product_product"."product_tmpl_id" in %s))) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in %s) AND (("stock_move"."location_dest_id" not in %s) OR "stock_move"."location_dest_id" IS NULL))) AND ("stock_move"."state" in %s))' with params: [(340,), '0.00', (7, 19, 20, 21, 22, 8, 18, 17, 33), (7, 19, 20, 21, 22, 8, 18, 17, 33), ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 1204, in test_report_forecast_11_non_reserved_order
    _, _, lines = self.get_report_forecast(product_template_ids=self.product_template.ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 35, in get_report_forecast
    report_values = report._get_report_values(docids=product_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 246, in _get_report_values
    'docs': self._get_report_data(product_template_ids=docids),
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 106, in _get_report_data
    res['lines'] = self._get_report_lines(product_template_ids, product_variant_ids, wh_location_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 162, in _get_report_lines
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in (SELECT "product_product".id FROM "product_product" WHERE ("product_product"."product_tmpl_id" in %s))) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in %s) AND (("stock_move"."location_dest_id" not in %s) OR "stock_move"."location_dest_id" IS NULL))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(340,), '0.00', (7, 19, 20, 21, 22, 8, 18, 17, 33), (7, 19, 20, 21, 22, 8, 18, 17, 33), ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 1204, in test_report_forecast_11_non_reserved_order
    _, _, lines = self.get_report_forecast(product_template_ids=self.product_template.ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 35, in get_report_forecast
    report_values = report._get_report_values(docids=product_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 246, in _get_report_values
    'docs': self._get_report_data(product_template_ids=docids),
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 106, in _get_report_data
    res['lines'] = self._get_report_lines(product_template_ids, product_variant_ids, wh_location_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 171, in _get_report_lines
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in (SELECT "product_product".id FROM "product_product" WHERE ("product_product"."product_tmpl_id" in %s))) AND ("stock_move"."product_uom_qty" != %s)) AND ((("stock_move"."location_id" not in %s) OR "stock_move"."location_id" IS NULL) AND ("stock_move"."location_dest_id" in %s))) AND ("stock_move"."state" in %s))' with params: [(340,), '0.00', (7, 19, 20, 21, 22, 8, 18, 17, 33), (7, 19, 20, 21, 22, 8, 18, 17, 33), ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(554,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(554,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(554,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(554,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(554,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(554,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 446, in test_report_forecast_2_replenishments_order
    report_values, docs, lines = self.get_report_forecast(product_template_ids=self.product_template.ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 35, in get_report_forecast
    report_values = report._get_report_values(docids=product_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 246, in _get_report_values
    'docs': self._get_report_data(product_template_ids=docids),
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 106, in _get_report_data
    res['lines'] = self._get_report_lines(product_template_ids, product_variant_ids, wh_location_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 161, in _get_report_lines
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in (SELECT "product_product".id FROM "product_product" WHERE ("product_product"."product_tmpl_id" in %s))) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in %s) AND (("stock_move"."location_dest_id" not in %s) OR "stock_move"."location_dest_id" IS NULL))) AND ("stock_move"."state" in %s))' with params: [(340,), '0.00', (7, 19, 20, 21, 22, 8, 18, 17, 33), (7, 19, 20, 21, 22, 8, 18, 17, 33), ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 446, in test_report_forecast_2_replenishments_order
    report_values, docs, lines = self.get_report_forecast(product_template_ids=self.product_template.ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 35, in get_report_forecast
    report_values = report._get_report_values(docids=product_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 246, in _get_report_values
    'docs': self._get_report_data(product_template_ids=docids),
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 106, in _get_report_data
    res['lines'] = self._get_report_lines(product_template_ids, product_variant_ids, wh_location_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 162, in _get_report_lines
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in (SELECT "product_product".id FROM "product_product" WHERE ("product_product"."product_tmpl_id" in %s))) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in %s) AND (("stock_move"."location_dest_id" not in %s) OR "stock_move"."location_dest_id" IS NULL))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(340,), '0.00', (7, 19, 20, 21, 22, 8, 18, 17, 33), (7, 19, 20, 21, 22, 8, 18, 17, 33), ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 446, in test_report_forecast_2_replenishments_order
    report_values, docs, lines = self.get_report_forecast(product_template_ids=self.product_template.ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 35, in get_report_forecast
    report_values = report._get_report_values(docids=product_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 246, in _get_report_values
    'docs': self._get_report_data(product_template_ids=docids),
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 106, in _get_report_data
    res['lines'] = self._get_report_lines(product_template_ids, product_variant_ids, wh_location_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 171, in _get_report_lines
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in (SELECT "product_product".id FROM "product_product" WHERE ("product_product"."product_tmpl_id" in %s))) AND ("stock_move"."product_uom_qty" != %s)) AND ((("stock_move"."location_id" not in %s) OR "stock_move"."location_id" IS NULL) AND ("stock_move"."location_dest_id" in %s))) AND ("stock_move"."state" in %s))' with params: [(340,), '0.00', (7, 19, 20, 21, 22, 8, 18, 17, 33), (7, 19, 20, 21, 22, 8, 18, 17, 33), ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 550, in test_report_forecast_3_sort_by_date
    report_values, docs, lines = self.get_report_forecast(product_template_ids=self.product_template.ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 35, in get_report_forecast
    report_values = report._get_report_values(docids=product_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 246, in _get_report_values
    'docs': self._get_report_data(product_template_ids=docids),
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 106, in _get_report_data
    res['lines'] = self._get_report_lines(product_template_ids, product_variant_ids, wh_location_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 161, in _get_report_lines
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in (SELECT "product_product".id FROM "product_product" WHERE ("product_product"."product_tmpl_id" in %s))) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in %s) AND (("stock_move"."location_dest_id" not in %s) OR "stock_move"."location_dest_id" IS NULL))) AND ("stock_move"."state" in %s))' with params: [(340,), '0.00', (7, 19, 20, 21, 22, 8, 18, 17, 33), (7, 19, 20, 21, 22, 8, 18, 17, 33), ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 550, in test_report_forecast_3_sort_by_date
    report_values, docs, lines = self.get_report_forecast(product_template_ids=self.product_template.ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 35, in get_report_forecast
    report_values = report._get_report_values(docids=product_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 246, in _get_report_values
    'docs': self._get_report_data(product_template_ids=docids),
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 106, in _get_report_data
    res['lines'] = self._get_report_lines(product_template_ids, product_variant_ids, wh_location_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 162, in _get_report_lines
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in (SELECT "product_product".id FROM "product_product" WHERE ("product_product"."product_tmpl_id" in %s))) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in %s) AND (("stock_move"."location_dest_id" not in %s) OR "stock_move"."location_dest_id" IS NULL))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(340,), '0.00', (7, 19, 20, 21, 22, 8, 18, 17, 33), (7, 19, 20, 21, 22, 8, 18, 17, 33), ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 550, in test_report_forecast_3_sort_by_date
    report_values, docs, lines = self.get_report_forecast(product_template_ids=self.product_template.ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 35, in get_report_forecast
    report_values = report._get_report_values(docids=product_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 246, in _get_report_values
    'docs': self._get_report_data(product_template_ids=docids),
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 106, in _get_report_data
    res['lines'] = self._get_report_lines(product_template_ids, product_variant_ids, wh_location_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 171, in _get_report_lines
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in (SELECT "product_product".id FROM "product_product" WHERE ("product_product"."product_tmpl_id" in %s))) AND ("stock_move"."product_uom_qty" != %s)) AND ((("stock_move"."location_id" not in %s) OR "stock_move"."location_id" IS NULL) AND ("stock_move"."location_dest_id" in %s))) AND ("stock_move"."state" in %s))' with params: [(340,), '0.00', (7, 19, 20, 21, 22, 8, 18, 17, 33), (7, 19, 20, 21, 22, 8, 18, 17, 33), ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 601, in test_report_forecast_3_sort_by_date
    report_values, docs, lines = self.get_report_forecast(product_template_ids=self.product_template.ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 35, in get_report_forecast
    report_values = report._get_report_values(docids=product_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 246, in _get_report_values
    'docs': self._get_report_data(product_template_ids=docids),
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 106, in _get_report_data
    res['lines'] = self._get_report_lines(product_template_ids, product_variant_ids, wh_location_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 161, in _get_report_lines
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in (SELECT "product_product".id FROM "product_product" WHERE ("product_product"."product_tmpl_id" in %s))) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in %s) AND (("stock_move"."location_dest_id" not in %s) OR "stock_move"."location_dest_id" IS NULL))) AND ("stock_move"."state" in %s))' with params: [(340,), '0.00', (7, 19, 20, 21, 22, 8, 18, 17, 33), (7, 19, 20, 21, 22, 8, 18, 17, 33), ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 601, in test_report_forecast_3_sort_by_date
    report_values, docs, lines = self.get_report_forecast(product_template_ids=self.product_template.ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 35, in get_report_forecast
    report_values = report._get_report_values(docids=product_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 246, in _get_report_values
    'docs': self._get_report_data(product_template_ids=docids),
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 106, in _get_report_data
    res['lines'] = self._get_report_lines(product_template_ids, product_variant_ids, wh_location_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 162, in _get_report_lines
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in (SELECT "product_product".id FROM "product_product" WHERE ("product_product"."product_tmpl_id" in %s))) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in %s) AND (("stock_move"."location_dest_id" not in %s) OR "stock_move"."location_dest_id" IS NULL))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(340,), '0.00', (7, 19, 20, 21, 22, 8, 18, 17, 33), (7, 19, 20, 21, 22, 8, 18, 17, 33), ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 601, in test_report_forecast_3_sort_by_date
    report_values, docs, lines = self.get_report_forecast(product_template_ids=self.product_template.ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 35, in get_report_forecast
    report_values = report._get_report_values(docids=product_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 246, in _get_report_values
    'docs': self._get_report_data(product_template_ids=docids),
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 106, in _get_report_data
    res['lines'] = self._get_report_lines(product_template_ids, product_variant_ids, wh_location_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 171, in _get_report_lines
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in (SELECT "product_product".id FROM "product_product" WHERE ("product_product"."product_tmpl_id" in %s))) AND ("stock_move"."product_uom_qty" != %s)) AND ((("stock_move"."location_id" not in %s) OR "stock_move"."location_id" IS NULL) AND ("stock_move"."location_dest_id" in %s))) AND ("stock_move"."state" in %s))' with params: [(340,), '0.00', (7, 19, 20, 21, 22, 8, 18, 17, 33), (7, 19, 20, 21, 22, 8, 18, 17, 33), ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 648, in test_report_forecast_4_intermediate_transfers
    report_values, docs, lines = self.get_report_forecast(product_template_ids=self.product_template.ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 35, in get_report_forecast
    report_values = report._get_report_values(docids=product_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 246, in _get_report_values
    'docs': self._get_report_data(product_template_ids=docids),
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 106, in _get_report_data
    res['lines'] = self._get_report_lines(product_template_ids, product_variant_ids, wh_location_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 161, in _get_report_lines
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in (SELECT "product_product".id FROM "product_product" WHERE ("product_product"."product_tmpl_id" in %s))) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in %s) AND (("stock_move"."location_dest_id" not in %s) OR "stock_move"."location_dest_id" IS NULL))) AND ("stock_move"."state" in %s))' with params: [(340,), '0.00', (7, 9, 19, 20, 21, 22, 10, 8, 18, 17, 33), (7, 9, 19, 20, 21, 22, 10, 8, 18, 17, 33), ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 648, in test_report_forecast_4_intermediate_transfers
    report_values, docs, lines = self.get_report_forecast(product_template_ids=self.product_template.ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 35, in get_report_forecast
    report_values = report._get_report_values(docids=product_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 246, in _get_report_values
    'docs': self._get_report_data(product_template_ids=docids),
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 106, in _get_report_data
    res['lines'] = self._get_report_lines(product_template_ids, product_variant_ids, wh_location_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 162, in _get_report_lines
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in (SELECT "product_product".id FROM "product_product" WHERE ("product_product"."product_tmpl_id" in %s))) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in %s) AND (("stock_move"."location_dest_id" not in %s) OR "stock_move"."location_dest_id" IS NULL))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(340,), '0.00', (7, 9, 19, 20, 21, 22, 10, 8, 18, 17, 33), (7, 9, 19, 20, 21, 22, 10, 8, 18, 17, 33), ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 648, in test_report_forecast_4_intermediate_transfers
    report_values, docs, lines = self.get_report_forecast(product_template_ids=self.product_template.ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 35, in get_report_forecast
    report_values = report._get_report_values(docids=product_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 246, in _get_report_values
    'docs': self._get_report_data(product_template_ids=docids),
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 106, in _get_report_data
    res['lines'] = self._get_report_lines(product_template_ids, product_variant_ids, wh_location_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 171, in _get_report_lines
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in (SELECT "product_product".id FROM "product_product" WHERE ("product_product"."product_tmpl_id" in %s))) AND ("stock_move"."product_uom_qty" != %s)) AND ((("stock_move"."location_id" not in %s) OR "stock_move"."location_id" IS NULL) AND ("stock_move"."location_dest_id" in %s))) AND ("stock_move"."state" in %s))' with params: [(340,), '0.00', (7, 9, 19, 20, 21, 22, 10, 8, 18, 17, 33), (7, 9, 19, 20, 21, 22, 10, 8, 18, 17, 33), ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 684, in test_report_forecast_5_multi_warehouse
    report_values, docs, lines = self.get_report_forecast(product_template_ids=self.product_template.ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 35, in get_report_forecast
    report_values = report._get_report_values(docids=product_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 246, in _get_report_values
    'docs': self._get_report_data(product_template_ids=docids),
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 106, in _get_report_data
    res['lines'] = self._get_report_lines(product_template_ids, product_variant_ids, wh_location_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 161, in _get_report_lines
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in (SELECT "product_product".id FROM "product_product" WHERE ("product_product"."product_tmpl_id" in %s))) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in %s) AND (("stock_move"."location_dest_id" not in %s) OR "stock_move"."location_dest_id" IS NULL))) AND ("stock_move"."state" in %s))' with params: [(340,), '0.00', (7, 19, 20, 21, 22, 8, 18, 17, 33), (7, 19, 20, 21, 22, 8, 18, 17, 33), ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 684, in test_report_forecast_5_multi_warehouse
    report_values, docs, lines = self.get_report_forecast(product_template_ids=self.product_template.ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 35, in get_report_forecast
    report_values = report._get_report_values(docids=product_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 246, in _get_report_values
    'docs': self._get_report_data(product_template_ids=docids),
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 106, in _get_report_data
    res['lines'] = self._get_report_lines(product_template_ids, product_variant_ids, wh_location_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 162, in _get_report_lines
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in (SELECT "product_product".id FROM "product_product" WHERE ("product_product"."product_tmpl_id" in %s))) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in %s) AND (("stock_move"."location_dest_id" not in %s) OR "stock_move"."location_dest_id" IS NULL))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(340,), '0.00', (7, 19, 20, 21, 22, 8, 18, 17, 33), (7, 19, 20, 21, 22, 8, 18, 17, 33), ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 684, in test_report_forecast_5_multi_warehouse
    report_values, docs, lines = self.get_report_forecast(product_template_ids=self.product_template.ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 35, in get_report_forecast
    report_values = report._get_report_values(docids=product_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 246, in _get_report_values
    'docs': self._get_report_data(product_template_ids=docids),
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 106, in _get_report_data
    res['lines'] = self._get_report_lines(product_template_ids, product_variant_ids, wh_location_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 171, in _get_report_lines
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in (SELECT "product_product".id FROM "product_product" WHERE ("product_product"."product_tmpl_id" in %s))) AND ("stock_move"."product_uom_qty" != %s)) AND ((("stock_move"."location_id" not in %s) OR "stock_move"."location_id" IS NULL) AND ("stock_move"."location_dest_id" in %s))) AND ("stock_move"."state" in %s))' with params: [(340,), '0.00', (7, 19, 20, 21, 22, 8, 18, 17, 33), (7, 19, 20, 21, 22, 8, 18, 17, 33), ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 689, in test_report_forecast_5_multi_warehouse
    report_values, docs, lines = self.get_report_forecast(
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 35, in get_report_forecast
    report_values = report._get_report_values(docids=product_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 246, in _get_report_values
    'docs': self._get_report_data(product_template_ids=docids),
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 106, in _get_report_data
    res['lines'] = self._get_report_lines(product_template_ids, product_variant_ids, wh_location_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 161, in _get_report_lines
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in (SELECT "product_product".id FROM "product_product" WHERE ("product_product"."product_tmpl_id" in %s))) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in %s) AND (("stock_move"."location_dest_id" not in %s) OR "stock_move"."location_dest_id" IS NULL))) AND ("stock_move"."state" in %s))' with params: [(340,), '0.00', (190, 191), (190, 191), ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 689, in test_report_forecast_5_multi_warehouse
    report_values, docs, lines = self.get_report_forecast(
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 35, in get_report_forecast
    report_values = report._get_report_values(docids=product_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 246, in _get_report_values
    'docs': self._get_report_data(product_template_ids=docids),
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 106, in _get_report_data
    res['lines'] = self._get_report_lines(product_template_ids, product_variant_ids, wh_location_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 162, in _get_report_lines
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in (SELECT "product_product".id FROM "product_product" WHERE ("product_product"."product_tmpl_id" in %s))) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in %s) AND (("stock_move"."location_dest_id" not in %s) OR "stock_move"."location_dest_id" IS NULL))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(340,), '0.00', (190, 191), (190, 191), ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 689, in test_report_forecast_5_multi_warehouse
    report_values, docs, lines = self.get_report_forecast(
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 35, in get_report_forecast
    report_values = report._get_report_values(docids=product_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 246, in _get_report_values
    'docs': self._get_report_data(product_template_ids=docids),
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 106, in _get_report_data
    res['lines'] = self._get_report_lines(product_template_ids, product_variant_ids, wh_location_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 171, in _get_report_lines
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in (SELECT "product_product".id FROM "product_product" WHERE ("product_product"."product_tmpl_id" in %s))) AND ("stock_move"."product_uom_qty" != %s)) AND ((("stock_move"."location_id" not in %s) OR "stock_move"."location_id" IS NULL) AND ("stock_move"."location_dest_id" in %s))) AND ("stock_move"."state" in %s))' with params: [(340,), '0.00', (190, 191), (190, 191), ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 699, in test_report_forecast_5_multi_warehouse
    report_values, docs, lines = self.get_report_forecast(product_template_ids=self.product_template.ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 35, in get_report_forecast
    report_values = report._get_report_values(docids=product_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 246, in _get_report_values
    'docs': self._get_report_data(product_template_ids=docids),
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 106, in _get_report_data
    res['lines'] = self._get_report_lines(product_template_ids, product_variant_ids, wh_location_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 161, in _get_report_lines
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in (SELECT "product_product".id FROM "product_product" WHERE ("product_product"."product_tmpl_id" in %s))) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in %s) AND (("stock_move"."location_dest_id" not in %s) OR "stock_move"."location_dest_id" IS NULL))) AND ("stock_move"."state" in %s))' with params: [(340,), '0.00', (7, 19, 20, 21, 22, 8, 18, 17, 33), (7, 19, 20, 21, 22, 8, 18, 17, 33), ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 699, in test_report_forecast_5_multi_warehouse
    report_values, docs, lines = self.get_report_forecast(product_template_ids=self.product_template.ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 35, in get_report_forecast
    report_values = report._get_report_values(docids=product_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 246, in _get_report_values
    'docs': self._get_report_data(product_template_ids=docids),
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 106, in _get_report_data
    res['lines'] = self._get_report_lines(product_template_ids, product_variant_ids, wh_location_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 162, in _get_report_lines
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in (SELECT "product_product".id FROM "product_product" WHERE ("product_product"."product_tmpl_id" in %s))) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in %s) AND (("stock_move"."location_dest_id" not in %s) OR "stock_move"."location_dest_id" IS NULL))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(340,), '0.00', (7, 19, 20, 21, 22, 8, 18, 17, 33), (7, 19, 20, 21, 22, 8, 18, 17, 33), ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 699, in test_report_forecast_5_multi_warehouse
    report_values, docs, lines = self.get_report_forecast(product_template_ids=self.product_template.ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 35, in get_report_forecast
    report_values = report._get_report_values(docids=product_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 246, in _get_report_values
    'docs': self._get_report_data(product_template_ids=docids),
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 106, in _get_report_data
    res['lines'] = self._get_report_lines(product_template_ids, product_variant_ids, wh_location_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 171, in _get_report_lines
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in (SELECT "product_product".id FROM "product_product" WHERE ("product_product"."product_tmpl_id" in %s))) AND ("stock_move"."product_uom_qty" != %s)) AND ((("stock_move"."location_id" not in %s) OR "stock_move"."location_id" IS NULL) AND ("stock_move"."location_dest_id" in %s))) AND ("stock_move"."state" in %s))' with params: [(340,), '0.00', (7, 19, 20, 21, 22, 8, 18, 17, 33), (7, 19, 20, 21, 22, 8, 18, 17, 33), ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 706, in test_report_forecast_5_multi_warehouse
    report_values, docs, lines = self.get_report_forecast(
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 35, in get_report_forecast
    report_values = report._get_report_values(docids=product_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 246, in _get_report_values
    'docs': self._get_report_data(product_template_ids=docids),
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 106, in _get_report_data
    res['lines'] = self._get_report_lines(product_template_ids, product_variant_ids, wh_location_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 161, in _get_report_lines
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in (SELECT "product_product".id FROM "product_product" WHERE ("product_product"."product_tmpl_id" in %s))) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in %s) AND (("stock_move"."location_dest_id" not in %s) OR "stock_move"."location_dest_id" IS NULL))) AND ("stock_move"."state" in %s))' with params: [(340,), '0.00', (190, 191), (190, 191), ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 706, in test_report_forecast_5_multi_warehouse
    report_values, docs, lines = self.get_report_forecast(
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 35, in get_report_forecast
    report_values = report._get_report_values(docids=product_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 246, in _get_report_values
    'docs': self._get_report_data(product_template_ids=docids),
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 106, in _get_report_data
    res['lines'] = self._get_report_lines(product_template_ids, product_variant_ids, wh_location_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 162, in _get_report_lines
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in (SELECT "product_product".id FROM "product_product" WHERE ("product_product"."product_tmpl_id" in %s))) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in %s) AND (("stock_move"."location_dest_id" not in %s) OR "stock_move"."location_dest_id" IS NULL))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(340,), '0.00', (190, 191), (190, 191), ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 706, in test_report_forecast_5_multi_warehouse
    report_values, docs, lines = self.get_report_forecast(
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 35, in get_report_forecast
    report_values = report._get_report_values(docids=product_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 246, in _get_report_values
    'docs': self._get_report_data(product_template_ids=docids),
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 106, in _get_report_data
    res['lines'] = self._get_report_lines(product_template_ids, product_variant_ids, wh_location_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 171, in _get_report_lines
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in (SELECT "product_product".id FROM "product_product" WHERE ("product_product"."product_tmpl_id" in %s))) AND ("stock_move"."product_uom_qty" != %s)) AND ((("stock_move"."location_id" not in %s) OR "stock_move"."location_id" IS NULL) AND ("stock_move"."location_dest_id" in %s))) AND ("stock_move"."state" in %s))' with params: [(340,), '0.00', (190, 191), (190, 191), ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 726, in test_report_forecast_5_multi_warehouse
    report_values, docs, lines = self.get_report_forecast(product_template_ids=self.product_template.ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 35, in get_report_forecast
    report_values = report._get_report_values(docids=product_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 246, in _get_report_values
    'docs': self._get_report_data(product_template_ids=docids),
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 106, in _get_report_data
    res['lines'] = self._get_report_lines(product_template_ids, product_variant_ids, wh_location_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 161, in _get_report_lines
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in (SELECT "product_product".id FROM "product_product" WHERE ("product_product"."product_tmpl_id" in %s))) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in %s) AND (("stock_move"."location_dest_id" not in %s) OR "stock_move"."location_dest_id" IS NULL))) AND ("stock_move"."state" in %s))' with params: [(340,), '0.00', (7, 19, 20, 21, 22, 8, 18, 17, 33), (7, 19, 20, 21, 22, 8, 18, 17, 33), ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 726, in test_report_forecast_5_multi_warehouse
    report_values, docs, lines = self.get_report_forecast(product_template_ids=self.product_template.ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 35, in get_report_forecast
    report_values = report._get_report_values(docids=product_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 246, in _get_report_values
    'docs': self._get_report_data(product_template_ids=docids),
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 106, in _get_report_data
    res['lines'] = self._get_report_lines(product_template_ids, product_variant_ids, wh_location_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 162, in _get_report_lines
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in (SELECT "product_product".id FROM "product_product" WHERE ("product_product"."product_tmpl_id" in %s))) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in %s) AND (("stock_move"."location_dest_id" not in %s) OR "stock_move"."location_dest_id" IS NULL))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(340,), '0.00', (7, 19, 20, 21, 22, 8, 18, 17, 33), (7, 19, 20, 21, 22, 8, 18, 17, 33), ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 726, in test_report_forecast_5_multi_warehouse
    report_values, docs, lines = self.get_report_forecast(product_template_ids=self.product_template.ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 35, in get_report_forecast
    report_values = report._get_report_values(docids=product_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 246, in _get_report_values
    'docs': self._get_report_data(product_template_ids=docids),
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 106, in _get_report_data
    res['lines'] = self._get_report_lines(product_template_ids, product_variant_ids, wh_location_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 171, in _get_report_lines
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in (SELECT "product_product".id FROM "product_product" WHERE ("product_product"."product_tmpl_id" in %s))) AND ("stock_move"."product_uom_qty" != %s)) AND ((("stock_move"."location_id" not in %s) OR "stock_move"."location_id" IS NULL) AND ("stock_move"."location_dest_id" in %s))) AND ("stock_move"."state" in %s))' with params: [(340,), '0.00', (7, 19, 20, 21, 22, 8, 18, 17, 33), (7, 19, 20, 21, 22, 8, 18, 17, 33), ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 733, in test_report_forecast_5_multi_warehouse
    report_values, docs, lines = self.get_report_forecast(
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 35, in get_report_forecast
    report_values = report._get_report_values(docids=product_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 246, in _get_report_values
    'docs': self._get_report_data(product_template_ids=docids),
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 106, in _get_report_data
    res['lines'] = self._get_report_lines(product_template_ids, product_variant_ids, wh_location_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 161, in _get_report_lines
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in (SELECT "product_product".id FROM "product_product" WHERE ("product_product"."product_tmpl_id" in %s))) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in %s) AND (("stock_move"."location_dest_id" not in %s) OR "stock_move"."location_dest_id" IS NULL))) AND ("stock_move"."state" in %s))' with params: [(340,), '0.00', (190, 191), (190, 191), ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 733, in test_report_forecast_5_multi_warehouse
    report_values, docs, lines = self.get_report_forecast(
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 35, in get_report_forecast
    report_values = report._get_report_values(docids=product_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 246, in _get_report_values
    'docs': self._get_report_data(product_template_ids=docids),
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 106, in _get_report_data
    res['lines'] = self._get_report_lines(product_template_ids, product_variant_ids, wh_location_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 162, in _get_report_lines
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in (SELECT "product_product".id FROM "product_product" WHERE ("product_product"."product_tmpl_id" in %s))) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in %s) AND (("stock_move"."location_dest_id" not in %s) OR "stock_move"."location_dest_id" IS NULL))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(340,), '0.00', (190, 191), (190, 191), ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 733, in test_report_forecast_5_multi_warehouse
    report_values, docs, lines = self.get_report_forecast(
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 35, in get_report_forecast
    report_values = report._get_report_values(docids=product_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 246, in _get_report_values
    'docs': self._get_report_data(product_template_ids=docids),
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 106, in _get_report_data
    res['lines'] = self._get_report_lines(product_template_ids, product_variant_ids, wh_location_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 171, in _get_report_lines
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in (SELECT "product_product".id FROM "product_product" WHERE ("product_product"."product_tmpl_id" in %s))) AND ("stock_move"."product_uom_qty" != %s)) AND ((("stock_move"."location_id" not in %s) OR "stock_move"."location_id" IS NULL) AND ("stock_move"."location_dest_id" in %s))) AND ("stock_move"."state" in %s))' with params: [(340,), '0.00', (190, 191), (190, 191), ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 742, in test_report_forecast_5_multi_warehouse
    report_values, docs, lines = self.get_report_forecast(product_template_ids=self.product_template.ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 35, in get_report_forecast
    report_values = report._get_report_values(docids=product_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 246, in _get_report_values
    'docs': self._get_report_data(product_template_ids=docids),
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 106, in _get_report_data
    res['lines'] = self._get_report_lines(product_template_ids, product_variant_ids, wh_location_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 161, in _get_report_lines
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in (SELECT "product_product".id FROM "product_product" WHERE ("product_product"."product_tmpl_id" in %s))) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in %s) AND (("stock_move"."location_dest_id" not in %s) OR "stock_move"."location_dest_id" IS NULL))) AND ("stock_move"."state" in %s))' with params: [(340,), '0.00', (7, 19, 20, 21, 22, 8, 18, 17, 33), (7, 19, 20, 21, 22, 8, 18, 17, 33), ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 742, in test_report_forecast_5_multi_warehouse
    report_values, docs, lines = self.get_report_forecast(product_template_ids=self.product_template.ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 35, in get_report_forecast
    report_values = report._get_report_values(docids=product_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 246, in _get_report_values
    'docs': self._get_report_data(product_template_ids=docids),
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 106, in _get_report_data
    res['lines'] = self._get_report_lines(product_template_ids, product_variant_ids, wh_location_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 162, in _get_report_lines
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in (SELECT "product_product".id FROM "product_product" WHERE ("product_product"."product_tmpl_id" in %s))) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in %s) AND (("stock_move"."location_dest_id" not in %s) OR "stock_move"."location_dest_id" IS NULL))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(340,), '0.00', (7, 19, 20, 21, 22, 8, 18, 17, 33), (7, 19, 20, 21, 22, 8, 18, 17, 33), ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 742, in test_report_forecast_5_multi_warehouse
    report_values, docs, lines = self.get_report_forecast(product_template_ids=self.product_template.ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 35, in get_report_forecast
    report_values = report._get_report_values(docids=product_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 246, in _get_report_values
    'docs': self._get_report_data(product_template_ids=docids),
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 106, in _get_report_data
    res['lines'] = self._get_report_lines(product_template_ids, product_variant_ids, wh_location_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 171, in _get_report_lines
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in (SELECT "product_product".id FROM "product_product" WHERE ("product_product"."product_tmpl_id" in %s))) AND ("stock_move"."product_uom_qty" != %s)) AND ((("stock_move"."location_id" not in %s) OR "stock_move"."location_id" IS NULL) AND ("stock_move"."location_dest_id" in %s))) AND ("stock_move"."state" in %s))' with params: [(340,), '0.00', (7, 19, 20, 21, 22, 8, 18, 17, 33), (7, 19, 20, 21, 22, 8, 18, 17, 33), ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 749, in test_report_forecast_5_multi_warehouse
    report_values, docs, lines = self.get_report_forecast(
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 35, in get_report_forecast
    report_values = report._get_report_values(docids=product_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 246, in _get_report_values
    'docs': self._get_report_data(product_template_ids=docids),
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 106, in _get_report_data
    res['lines'] = self._get_report_lines(product_template_ids, product_variant_ids, wh_location_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 161, in _get_report_lines
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in (SELECT "product_product".id FROM "product_product" WHERE ("product_product"."product_tmpl_id" in %s))) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in %s) AND (("stock_move"."location_dest_id" not in %s) OR "stock_move"."location_dest_id" IS NULL))) AND ("stock_move"."state" in %s))' with params: [(340,), '0.00', (190, 191), (190, 191), ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 749, in test_report_forecast_5_multi_warehouse
    report_values, docs, lines = self.get_report_forecast(
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 35, in get_report_forecast
    report_values = report._get_report_values(docids=product_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 246, in _get_report_values
    'docs': self._get_report_data(product_template_ids=docids),
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 106, in _get_report_data
    res['lines'] = self._get_report_lines(product_template_ids, product_variant_ids, wh_location_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 162, in _get_report_lines
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in (SELECT "product_product".id FROM "product_product" WHERE ("product_product"."product_tmpl_id" in %s))) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in %s) AND (("stock_move"."location_dest_id" not in %s) OR "stock_move"."location_dest_id" IS NULL))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(340,), '0.00', (190, 191), (190, 191), ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 749, in test_report_forecast_5_multi_warehouse
    report_values, docs, lines = self.get_report_forecast(
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 35, in get_report_forecast
    report_values = report._get_report_values(docids=product_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 246, in _get_report_values
    'docs': self._get_report_data(product_template_ids=docids),
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 106, in _get_report_data
    res['lines'] = self._get_report_lines(product_template_ids, product_variant_ids, wh_location_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 171, in _get_report_lines
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in (SELECT "product_product".id FROM "product_product" WHERE ("product_product"."product_tmpl_id" in %s))) AND ("stock_move"."product_uom_qty" != %s)) AND ((("stock_move"."location_id" not in %s) OR "stock_move"."location_id" IS NULL) AND ("stock_move"."location_dest_id" in %s))) AND ("stock_move"."state" in %s))' with params: [(340,), '0.00', (190, 191), (190, 191), ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 792, in test_report_forecast_6_multi_company
    report_values, docs, lines = self.get_report_forecast(product_template_ids=self.product_template.ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 35, in get_report_forecast
    report_values = report._get_report_values(docids=product_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 246, in _get_report_values
    'docs': self._get_report_data(product_template_ids=docids),
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 106, in _get_report_data
    res['lines'] = self._get_report_lines(product_template_ids, product_variant_ids, wh_location_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 161, in _get_report_lines
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in (SELECT "product_product".id FROM "product_product" WHERE ("product_product"."product_tmpl_id" in %s))) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in %s) AND (("stock_move"."location_dest_id" not in %s) OR "stock_move"."location_dest_id" IS NULL))) AND ("stock_move"."state" in %s))' with params: [(340,), '0.00', (7, 19, 20, 21, 22, 8, 18, 17, 33), (7, 19, 20, 21, 22, 8, 18, 17, 33), ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 792, in test_report_forecast_6_multi_company
    report_values, docs, lines = self.get_report_forecast(product_template_ids=self.product_template.ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 35, in get_report_forecast
    report_values = report._get_report_values(docids=product_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 246, in _get_report_values
    'docs': self._get_report_data(product_template_ids=docids),
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 106, in _get_report_data
    res['lines'] = self._get_report_lines(product_template_ids, product_variant_ids, wh_location_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 162, in _get_report_lines
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in (SELECT "product_product".id FROM "product_product" WHERE ("product_product"."product_tmpl_id" in %s))) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in %s) AND (("stock_move"."location_dest_id" not in %s) OR "stock_move"."location_dest_id" IS NULL))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(340,), '0.00', (7, 19, 20, 21, 22, 8, 18, 17, 33), (7, 19, 20, 21, 22, 8, 18, 17, 33), ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 792, in test_report_forecast_6_multi_company
    report_values, docs, lines = self.get_report_forecast(product_template_ids=self.product_template.ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 35, in get_report_forecast
    report_values = report._get_report_values(docids=product_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 246, in _get_report_values
    'docs': self._get_report_data(product_template_ids=docids),
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 106, in _get_report_data
    res['lines'] = self._get_report_lines(product_template_ids, product_variant_ids, wh_location_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 171, in _get_report_lines
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in (SELECT "product_product".id FROM "product_product" WHERE ("product_product"."product_tmpl_id" in %s))) AND ("stock_move"."product_uom_qty" != %s)) AND ((("stock_move"."location_id" not in %s) OR "stock_move"."location_id" IS NULL) AND ("stock_move"."location_dest_id" in %s))) AND ("stock_move"."state" in %s))' with params: [(340,), '0.00', (7, 19, 20, 21, 22, 8, 18, 17, 33), (7, 19, 20, 21, 22, 8, 18, 17, 33), ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 798, in test_report_forecast_6_multi_company
    report_values, docs, lines = self.get_report_forecast(
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 35, in get_report_forecast
    report_values = report._get_report_values(docids=product_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 246, in _get_report_values
    'docs': self._get_report_data(product_template_ids=docids),
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 106, in _get_report_data
    res['lines'] = self._get_report_lines(product_template_ids, product_variant_ids, wh_location_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 161, in _get_report_lines
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in (SELECT "product_product".id FROM "product_product" WHERE ("product_product"."product_tmpl_id" in %s))) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in %s) AND (("stock_move"."location_dest_id" not in %s) OR "stock_move"."location_dest_id" IS NULL))) AND ("stock_move"."state" in %s))' with params: [(340,), '0.00', (200, 201), (200, 201), ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 798, in test_report_forecast_6_multi_company
    report_values, docs, lines = self.get_report_forecast(
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 35, in get_report_forecast
    report_values = report._get_report_values(docids=product_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 246, in _get_report_values
    'docs': self._get_report_data(product_template_ids=docids),
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 106, in _get_report_data
    res['lines'] = self._get_report_lines(product_template_ids, product_variant_ids, wh_location_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 162, in _get_report_lines
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in (SELECT "product_product".id FROM "product_product" WHERE ("product_product"."product_tmpl_id" in %s))) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in %s) AND (("stock_move"."location_dest_id" not in %s) OR "stock_move"."location_dest_id" IS NULL))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(340,), '0.00', (200, 201), (200, 201), ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 798, in test_report_forecast_6_multi_company
    report_values, docs, lines = self.get_report_forecast(
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 35, in get_report_forecast
    report_values = report._get_report_values(docids=product_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 246, in _get_report_values
    'docs': self._get_report_data(product_template_ids=docids),
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 106, in _get_report_data
    res['lines'] = self._get_report_lines(product_template_ids, product_variant_ids, wh_location_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 171, in _get_report_lines
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in (SELECT "product_product".id FROM "product_product" WHERE ("product_product"."product_tmpl_id" in %s))) AND ("stock_move"."product_uom_qty" != %s)) AND ((("stock_move"."location_id" not in %s) OR "stock_move"."location_id" IS NULL) AND ("stock_move"."location_dest_id" in %s))) AND ("stock_move"."state" in %s))' with params: [(340,), '0.00', (200, 201), (200, 201), ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 811, in test_report_forecast_6_multi_company
    report_values, docs, lines = self.get_report_forecast(product_template_ids=self.product_template.ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 35, in get_report_forecast
    report_values = report._get_report_values(docids=product_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 246, in _get_report_values
    'docs': self._get_report_data(product_template_ids=docids),
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 106, in _get_report_data
    res['lines'] = self._get_report_lines(product_template_ids, product_variant_ids, wh_location_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 161, in _get_report_lines
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in (SELECT "product_product".id FROM "product_product" WHERE ("product_product"."product_tmpl_id" in %s))) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in %s) AND (("stock_move"."location_dest_id" not in %s) OR "stock_move"."location_dest_id" IS NULL))) AND ("stock_move"."state" in %s))' with params: [(340,), '0.00', (7, 19, 20, 21, 22, 8, 18, 17, 33), (7, 19, 20, 21, 22, 8, 18, 17, 33), ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 811, in test_report_forecast_6_multi_company
    report_values, docs, lines = self.get_report_forecast(product_template_ids=self.product_template.ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 35, in get_report_forecast
    report_values = report._get_report_values(docids=product_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 246, in _get_report_values
    'docs': self._get_report_data(product_template_ids=docids),
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 106, in _get_report_data
    res['lines'] = self._get_report_lines(product_template_ids, product_variant_ids, wh_location_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 162, in _get_report_lines
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in (SELECT "product_product".id FROM "product_product" WHERE ("product_product"."product_tmpl_id" in %s))) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in %s) AND (("stock_move"."location_dest_id" not in %s) OR "stock_move"."location_dest_id" IS NULL))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(340,), '0.00', (7, 19, 20, 21, 22, 8, 18, 17, 33), (7, 19, 20, 21, 22, 8, 18, 17, 33), ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 811, in test_report_forecast_6_multi_company
    report_values, docs, lines = self.get_report_forecast(product_template_ids=self.product_template.ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 35, in get_report_forecast
    report_values = report._get_report_values(docids=product_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 246, in _get_report_values
    'docs': self._get_report_data(product_template_ids=docids),
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 106, in _get_report_data
    res['lines'] = self._get_report_lines(product_template_ids, product_variant_ids, wh_location_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 171, in _get_report_lines
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in (SELECT "product_product".id FROM "product_product" WHERE ("product_product"."product_tmpl_id" in %s))) AND ("stock_move"."product_uom_qty" != %s)) AND ((("stock_move"."location_id" not in %s) OR "stock_move"."location_id" IS NULL) AND ("stock_move"."location_dest_id" in %s))) AND ("stock_move"."state" in %s))' with params: [(340,), '0.00', (7, 19, 20, 21, 22, 8, 18, 17, 33), (7, 19, 20, 21, 22, 8, 18, 17, 33), ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 816, in test_report_forecast_6_multi_company
    report_values, docs, lines = self.get_report_forecast(
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 35, in get_report_forecast
    report_values = report._get_report_values(docids=product_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 246, in _get_report_values
    'docs': self._get_report_data(product_template_ids=docids),
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 106, in _get_report_data
    res['lines'] = self._get_report_lines(product_template_ids, product_variant_ids, wh_location_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 161, in _get_report_lines
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in (SELECT "product_product".id FROM "product_product" WHERE ("product_product"."product_tmpl_id" in %s))) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in %s) AND (("stock_move"."location_dest_id" not in %s) OR "stock_move"."location_dest_id" IS NULL))) AND ("stock_move"."state" in %s))' with params: [(340,), '0.00', (200, 201), (200, 201), ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 816, in test_report_forecast_6_multi_company
    report_values, docs, lines = self.get_report_forecast(
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 35, in get_report_forecast
    report_values = report._get_report_values(docids=product_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 246, in _get_report_values
    'docs': self._get_report_data(product_template_ids=docids),
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 106, in _get_report_data
    res['lines'] = self._get_report_lines(product_template_ids, product_variant_ids, wh_location_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 162, in _get_report_lines
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in (SELECT "product_product".id FROM "product_product" WHERE ("product_product"."product_tmpl_id" in %s))) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in %s) AND (("stock_move"."location_dest_id" not in %s) OR "stock_move"."location_dest_id" IS NULL))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(340,), '0.00', (200, 201), (200, 201), ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 816, in test_report_forecast_6_multi_company
    report_values, docs, lines = self.get_report_forecast(
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 35, in get_report_forecast
    report_values = report._get_report_values(docids=product_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 246, in _get_report_values
    'docs': self._get_report_data(product_template_ids=docids),
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 106, in _get_report_data
    res['lines'] = self._get_report_lines(product_template_ids, product_variant_ids, wh_location_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 171, in _get_report_lines
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in (SELECT "product_product".id FROM "product_product" WHERE ("product_product"."product_tmpl_id" in %s))) AND ("stock_move"."product_uom_qty" != %s)) AND ((("stock_move"."location_id" not in %s) OR "stock_move"."location_id" IS NULL) AND ("stock_move"."location_dest_id" in %s))) AND ("stock_move"."state" in %s))' with params: [(340,), '0.00', (200, 201), (200, 201), ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 901, in test_report_forecast_7_multiple_variants
    report_values, docs, lines = self.get_report_forecast(product_template_ids=product_template.ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 35, in get_report_forecast
    report_values = report._get_report_values(docids=product_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 246, in _get_report_values
    'docs': self._get_report_data(product_template_ids=docids),
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 106, in _get_report_data
    res['lines'] = self._get_report_lines(product_template_ids, product_variant_ids, wh_location_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 161, in _get_report_lines
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in (SELECT "product_product".id FROM "product_product" WHERE ("product_product"."product_tmpl_id" in %s))) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in %s) AND (("stock_move"."location_dest_id" not in %s) OR "stock_move"."location_dest_id" IS NULL))) AND ("stock_move"."state" in %s))' with params: [(341,), '0.00', (7, 19, 20, 21, 22, 8, 18, 17, 33), (7, 19, 20, 21, 22, 8, 18, 17, 33), ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 901, in test_report_forecast_7_multiple_variants
    report_values, docs, lines = self.get_report_forecast(product_template_ids=product_template.ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 35, in get_report_forecast
    report_values = report._get_report_values(docids=product_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 246, in _get_report_values
    'docs': self._get_report_data(product_template_ids=docids),
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 106, in _get_report_data
    res['lines'] = self._get_report_lines(product_template_ids, product_variant_ids, wh_location_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 162, in _get_report_lines
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in (SELECT "product_product".id FROM "product_product" WHERE ("product_product"."product_tmpl_id" in %s))) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in %s) AND (("stock_move"."location_dest_id" not in %s) OR "stock_move"."location_dest_id" IS NULL))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(341,), '0.00', (7, 19, 20, 21, 22, 8, 18, 17, 33), (7, 19, 20, 21, 22, 8, 18, 17, 33), ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 901, in test_report_forecast_7_multiple_variants
    report_values, docs, lines = self.get_report_forecast(product_template_ids=product_template.ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 35, in get_report_forecast
    report_values = report._get_report_values(docids=product_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 246, in _get_report_values
    'docs': self._get_report_data(product_template_ids=docids),
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 106, in _get_report_data
    res['lines'] = self._get_report_lines(product_template_ids, product_variant_ids, wh_location_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 171, in _get_report_lines
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in (SELECT "product_product".id FROM "product_product" WHERE ("product_product"."product_tmpl_id" in %s))) AND ("stock_move"."product_uom_qty" != %s)) AND ((("stock_move"."location_id" not in %s) OR "stock_move"."location_id" IS NULL) AND ("stock_move"."location_dest_id" in %s))) AND ("stock_move"."state" in %s))' with params: [(341,), '0.00', (7, 19, 20, 21, 22, 8, 18, 17, 33), (7, 19, 20, 21, 22, 8, 18, 17, 33), ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 918, in test_report_forecast_7_multiple_variants
    report_values, docs, lines = self.get_report_forecast(product_template_ids=product_template.ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 35, in get_report_forecast
    report_values = report._get_report_values(docids=product_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 246, in _get_report_values
    'docs': self._get_report_data(product_template_ids=docids),
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 106, in _get_report_data
    res['lines'] = self._get_report_lines(product_template_ids, product_variant_ids, wh_location_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 161, in _get_report_lines
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in (SELECT "product_product".id FROM "product_product" WHERE ("product_product"."product_tmpl_id" in %s))) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in %s) AND (("stock_move"."location_dest_id" not in %s) OR "stock_move"."location_dest_id" IS NULL))) AND ("stock_move"."state" in %s))' with params: [(341,), '0.00', (7, 19, 20, 21, 22, 8, 18, 17, 33), (7, 19, 20, 21, 22, 8, 18, 17, 33), ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 918, in test_report_forecast_7_multiple_variants
    report_values, docs, lines = self.get_report_forecast(product_template_ids=product_template.ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 35, in get_report_forecast
    report_values = report._get_report_values(docids=product_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 246, in _get_report_values
    'docs': self._get_report_data(product_template_ids=docids),
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 106, in _get_report_data
    res['lines'] = self._get_report_lines(product_template_ids, product_variant_ids, wh_location_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 162, in _get_report_lines
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in (SELECT "product_product".id FROM "product_product" WHERE ("product_product"."product_tmpl_id" in %s))) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in %s) AND (("stock_move"."location_dest_id" not in %s) OR "stock_move"."location_dest_id" IS NULL))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(341,), '0.00', (7, 19, 20, 21, 22, 8, 18, 17, 33), (7, 19, 20, 21, 22, 8, 18, 17, 33), ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 918, in test_report_forecast_7_multiple_variants
    report_values, docs, lines = self.get_report_forecast(product_template_ids=product_template.ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 35, in get_report_forecast
    report_values = report._get_report_values(docids=product_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 246, in _get_report_values
    'docs': self._get_report_data(product_template_ids=docids),
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 106, in _get_report_data
    res['lines'] = self._get_report_lines(product_template_ids, product_variant_ids, wh_location_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 171, in _get_report_lines
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in (SELECT "product_product".id FROM "product_product" WHERE ("product_product"."product_tmpl_id" in %s))) AND ("stock_move"."product_uom_qty" != %s)) AND ((("stock_move"."location_id" not in %s) OR "stock_move"."location_id" IS NULL) AND ("stock_move"."location_dest_id" in %s))) AND ("stock_move"."state" in %s))' with params: [(341,), '0.00', (7, 19, 20, 21, 22, 8, 18, 17, 33), (7, 19, 20, 21, 22, 8, 18, 17, 33), ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(554,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(554,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(554,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(554,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(554,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(554,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 985, in test_report_forecast_8_delivery_to_receipt_link
    _, _, lines = self.get_report_forecast(product_template_ids=self.product_template.ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 35, in get_report_forecast
    report_values = report._get_report_values(docids=product_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 246, in _get_report_values
    'docs': self._get_report_data(product_template_ids=docids),
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 106, in _get_report_data
    res['lines'] = self._get_report_lines(product_template_ids, product_variant_ids, wh_location_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 161, in _get_report_lines
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in (SELECT "product_product".id FROM "product_product" WHERE ("product_product"."product_tmpl_id" in %s))) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in %s) AND (("stock_move"."location_dest_id" not in %s) OR "stock_move"."location_dest_id" IS NULL))) AND ("stock_move"."state" in %s))' with params: [(340,), '0.00', (7, 19, 20, 21, 22, 8, 18, 17, 33), (7, 19, 20, 21, 22, 8, 18, 17, 33), ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 985, in test_report_forecast_8_delivery_to_receipt_link
    _, _, lines = self.get_report_forecast(product_template_ids=self.product_template.ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 35, in get_report_forecast
    report_values = report._get_report_values(docids=product_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 246, in _get_report_values
    'docs': self._get_report_data(product_template_ids=docids),
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 106, in _get_report_data
    res['lines'] = self._get_report_lines(product_template_ids, product_variant_ids, wh_location_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 162, in _get_report_lines
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in (SELECT "product_product".id FROM "product_product" WHERE ("product_product"."product_tmpl_id" in %s))) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in %s) AND (("stock_move"."location_dest_id" not in %s) OR "stock_move"."location_dest_id" IS NULL))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(340,), '0.00', (7, 19, 20, 21, 22, 8, 18, 17, 33), (7, 19, 20, 21, 22, 8, 18, 17, 33), ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 985, in test_report_forecast_8_delivery_to_receipt_link
    _, _, lines = self.get_report_forecast(product_template_ids=self.product_template.ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 35, in get_report_forecast
    report_values = report._get_report_values(docids=product_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 246, in _get_report_values
    'docs': self._get_report_data(product_template_ids=docids),
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 106, in _get_report_data
    res['lines'] = self._get_report_lines(product_template_ids, product_variant_ids, wh_location_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 171, in _get_report_lines
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in (SELECT "product_product".id FROM "product_product" WHERE ("product_product"."product_tmpl_id" in %s))) AND ("stock_move"."product_uom_qty" != %s)) AND ((("stock_move"."location_id" not in %s) OR "stock_move"."location_id" IS NULL) AND ("stock_move"."location_dest_id" in %s))) AND ("stock_move"."state" in %s))' with params: [(340,), '0.00', (7, 19, 20, 21, 22, 8, 18, 17, 33), (7, 19, 20, 21, 22, 8, 18, 17, 33), ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(554,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(554,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(554,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(554,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(554,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(554,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 1045, in test_report_forecast_9_delivery_to_receipt_link_over_received
    _, _, lines = self.get_report_forecast(product_template_ids=self.product_template.ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 35, in get_report_forecast
    report_values = report._get_report_values(docids=product_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 246, in _get_report_values
    'docs': self._get_report_data(product_template_ids=docids),
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 106, in _get_report_data
    res['lines'] = self._get_report_lines(product_template_ids, product_variant_ids, wh_location_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 161, in _get_report_lines
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in (SELECT "product_product".id FROM "product_product" WHERE ("product_product"."product_tmpl_id" in %s))) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in %s) AND (("stock_move"."location_dest_id" not in %s) OR "stock_move"."location_dest_id" IS NULL))) AND ("stock_move"."state" in %s))' with params: [(340,), '0.00', (7, 19, 20, 21, 22, 8, 18, 17, 33), (7, 19, 20, 21, 22, 8, 18, 17, 33), ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 1045, in test_report_forecast_9_delivery_to_receipt_link_over_received
    _, _, lines = self.get_report_forecast(product_template_ids=self.product_template.ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 35, in get_report_forecast
    report_values = report._get_report_values(docids=product_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 246, in _get_report_values
    'docs': self._get_report_data(product_template_ids=docids),
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 106, in _get_report_data
    res['lines'] = self._get_report_lines(product_template_ids, product_variant_ids, wh_location_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 162, in _get_report_lines
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in (SELECT "product_product".id FROM "product_product" WHERE ("product_product"."product_tmpl_id" in %s))) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in %s) AND (("stock_move"."location_dest_id" not in %s) OR "stock_move"."location_dest_id" IS NULL))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(340,), '0.00', (7, 19, 20, 21, 22, 8, 18, 17, 33), (7, 19, 20, 21, 22, 8, 18, 17, 33), ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 1045, in test_report_forecast_9_delivery_to_receipt_link_over_received
    _, _, lines = self.get_report_forecast(product_template_ids=self.product_template.ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 35, in get_report_forecast
    report_values = report._get_report_values(docids=product_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 246, in _get_report_values
    'docs': self._get_report_data(product_template_ids=docids),
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 106, in _get_report_data
    res['lines'] = self._get_report_lines(product_template_ids, product_variant_ids, wh_location_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 171, in _get_report_lines
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in (SELECT "product_product".id FROM "product_product" WHERE ("product_product"."product_tmpl_id" in %s))) AND ("stock_move"."product_uom_qty" != %s)) AND ((("stock_move"."location_id" not in %s) OR "stock_move"."location_id" IS NULL) AND ("stock_move"."location_dest_id" in %s))) AND ("stock_move"."state" in %s))' with params: [(340,), '0.00', (7, 19, 20, 21, 22, 8, 18, 17, 33), (7, 19, 20, 21, 22, 8, 18, 17, 33), ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'cancel'} -> IN ['draft', 'waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/usr/lib/python3.10/unittest/case.py", line 549, in _callTestMethod
    method()
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_robustness.py", line 59, in test_uom_factor
    move1.product_uom.factor = 0.05
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1286, in __set__
    records.write({self.name: write_value})
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/product.py", line 1016, in write
    if self.env['stock.move'].sudo().search_count([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1871, in search_count
    res = self.search(domain, count=True)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (("stock_move"."product_uom" in %s) AND ("stock_move"."state" in %s))' with params: [(2,), ('draft', 'waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_picking.py", line 457, in _compute_products_availability
    all_moves._fields['forecast_availability'].compute_value(all_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(584,), '0.000', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_picking.py", line 457, in _compute_products_availability
    all_moves._fields['forecast_availability'].compute_value(all_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(584,), '0.000', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_picking.py", line 457, in _compute_products_availability
    all_moves._fields['forecast_availability'].compute_value(all_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(584,), '0.000', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(584,), '0.000', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(584,), '0.000', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(584,), '0.000', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_picking.py", line 457, in _compute_products_availability
    all_moves._fields['forecast_availability'].compute_value(all_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(584,), '0.000', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_picking.py", line 457, in _compute_products_availability
    all_moves._fields['forecast_availability'].compute_value(all_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(584,), '0.000', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_picking.py", line 457, in _compute_products_availability
    all_moves._fields['forecast_availability'].compute_value(all_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(584,), '0.000', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_picking.py", line 457, in _compute_products_availability
    all_moves._fields['forecast_availability'].compute_value(all_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(584,), '0.000', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_picking.py", line 457, in _compute_products_availability
    all_moves._fields['forecast_availability'].compute_value(all_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(584,), '0.000', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_picking.py", line 457, in _compute_products_availability
    all_moves._fields['forecast_availability'].compute_value(all_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(584,), '0.000', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'cancel'} -> IN ['draft', 'waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_warehouse.py", line 489, in test_toggle_active_warehouse_1
    warehouse.toggle_active()
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 5210, in toggle_active
    active_recs[self._active_name] = False
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 6050, in __setitem__
    return self._fields[key].__set__(self, value)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1286, in __set__
    records.write({self.name: write_value})
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_warehouse.py", line 210, in write
    move_ids = self.env['stock.move'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (("stock_move"."picking_type_id" in %s) AND ("stock_move"."state" in %s))' with params: [(202, 206, 204, 205, 203, 207), ('draft', 'waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'cancel'} -> IN ['draft', 'waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_warehouse.py", line 514, in test_toggle_active_warehouse_1
    warehouse.toggle_active()
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 5211, in toggle_active
    (self - active_recs)[self._active_name] = True
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 6050, in __setitem__
    return self._fields[key].__set__(self, value)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1286, in __set__
    records.write({self.name: write_value})
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_warehouse.py", line 210, in write
    move_ids = self.env['stock.move'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (("stock_move"."picking_type_id" in %s) AND ("stock_move"."state" in %s))' with params: [(202, 206, 204, 205, 203, 207), ('draft', 'waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'cancel'} -> IN ['draft', 'waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_warehouse.py", line 569, in test_toggle_active_warehouse_2
    warehouse.toggle_active()
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 5210, in toggle_active
    active_recs[self._active_name] = False
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 6050, in __setitem__
    return self._fields[key].__set__(self, value)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1286, in __set__
    records.write({self.name: write_value})
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_warehouse.py", line 210, in write
    move_ids = self.env['stock.move'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (("stock_move"."picking_type_id" in %s) AND ("stock_move"."state" in %s))' with params: [(208, 212, 210, 211, 209, 213), ('draft', 'waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'cancel'} -> IN ['draft', 'waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_warehouse.py", line 594, in test_toggle_active_warehouse_2
    warehouse.toggle_active()
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 5211, in toggle_active
    (self - active_recs)[self._active_name] = True
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 6050, in __setitem__
    return self._fields[key].__set__(self, value)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1286, in __set__
    records.write({self.name: write_value})
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_warehouse.py", line 210, in write
    move_ids = self.env['stock.move'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (("stock_move"."picking_type_id" in %s) AND ("stock_move"."state" in %s))' with params: [(208, 212, 210, 211, 209, 213), ('draft', 'waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(650, 649), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(650, 649), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(650, 649), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(650, 649), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(650, 649), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(650, 649), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(650, 649), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(650, 649), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(650, 649), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(650, 649), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(650, 649), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(650, 649), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(650,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(650,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(650,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(649,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(649,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(649,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(650, 649), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(650, 649), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(650, 649), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(650, 649), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(650, 649), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(650, 649), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(650, 649), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(650, 649), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(650, 649), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(650, 649), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(650, 649), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(650, 649), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(650, 649), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(650, 649), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(650, 649), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(650,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(650,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(650,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(649,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(649,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(649,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(650, 649), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(650, 649), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(650, 649), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(650, 649), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(650, 649), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(650, 649), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(650, 649), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(650, 649), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(650, 649), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(650, 649), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(650, 649), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(650, 649), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(650, 649), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(650, 649), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(650, 649), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(650,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(650,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(650,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(649,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(649,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(649,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(650, 649), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(650, 649), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(650, 649), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(650, 649), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(650, 649), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(650, 649), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(650, 649), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(650, 649), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(650, 649), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(650, 649), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(650, 649), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(650, 649), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(650, 649), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(650, 649), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(650, 649), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(650,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(650,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(650,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(649,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(649,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(649,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(650, 649), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(650, 649), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(650, 649), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(653, 652), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(653, 652), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(653, 652), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(653, 652), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(653, 652), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(653, 652), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(653, 652), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(653, 652), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(653, 652), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(653, 652), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(653, 652), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(653, 652), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(653,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(653,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(653,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(652,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(652,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(652,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(653, 652), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(653, 652), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(653, 652), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(656, 655), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(656, 655), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(656, 655), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(656, 655), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(656, 655), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(656, 655), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(656, 655), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(656, 655), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(656, 655), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(656, 655), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(656, 655), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(656, 655), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(656,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(656,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(656,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(655,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(655,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(655,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(656, 655), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(656, 655), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(656, 655), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(662, 661), '0.00', True, '1/459/%', True, '1/459/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(662, 661), '0.00', True, '1/459/%', True, '1/459/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(662, 661), '0.00', True, '1/459/%', True, '1/459/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(662, 661), '0.00', True, '1/459/%', True, '1/459/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(662, 661), '0.00', True, '1/459/%', True, '1/459/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(662, 661), '0.00', True, '1/459/%', True, '1/459/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(662, 661), '0.00', True, '1/459/%', True, '1/459/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(662, 661), '0.00', True, '1/459/%', True, '1/459/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(662, 661), '0.00', True, '1/459/%', True, '1/459/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(662, 661), '0.00', True, '1/459/%', True, '1/459/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(662, 661), '0.00', True, '1/459/%', True, '1/459/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(662, 661), '0.00', True, '1/459/%', True, '1/459/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(662,), '0.00', True, '1/459/%', True, '1/459/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(662,), '0.00', True, '1/459/%', True, '1/459/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(662,), '0.00', True, '1/459/%', True, '1/459/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(661,), '0.00', True, '1/459/%', True, '1/459/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(661,), '0.00', True, '1/459/%', True, '1/459/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(661,), '0.00', True, '1/459/%', True, '1/459/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(662, 661), '0.00', True, '1/459/%', True, '1/459/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(662, 661), '0.00', True, '1/459/%', True, '1/459/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(662, 661), '0.00', True, '1/459/%', True, '1/459/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(665, 664), '0.00', True, '1/459/%', True, '1/459/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(665, 664), '0.00', True, '1/459/%', True, '1/459/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(665, 664), '0.00', True, '1/459/%', True, '1/459/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(665, 664), '0.00', True, '1/459/%', True, '1/459/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(665, 664), '0.00', True, '1/459/%', True, '1/459/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(665, 664), '0.00', True, '1/459/%', True, '1/459/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(665, 664), '0.00', True, '1/459/%', True, '1/459/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(665, 664), '0.00', True, '1/459/%', True, '1/459/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(665, 664), '0.00', True, '1/459/%', True, '1/459/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(665, 664), '0.00', True, '1/459/%', True, '1/459/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(665, 664), '0.00', True, '1/459/%', True, '1/459/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(665, 664), '0.00', True, '1/459/%', True, '1/459/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(665,), '0.00', True, '1/459/%', True, '1/459/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(665,), '0.00', True, '1/459/%', True, '1/459/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(665,), '0.00', True, '1/459/%', True, '1/459/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(664,), '0.00', True, '1/459/%', True, '1/459/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(664,), '0.00', True, '1/459/%', True, '1/459/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(664,), '0.00', True, '1/459/%', True, '1/459/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(665, 664), '0.00', True, '1/459/%', True, '1/459/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(665, 664), '0.00', True, '1/459/%', True, '1/459/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(665, 664), '0.00', True, '1/459/%', True, '1/459/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(635, 634), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(635, 634), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(635, 634), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(635, 634), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(635, 634), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(635, 634), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(635, 634), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(635, 634), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(635, 634), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(635, 634), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(635, 634), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(635, 634), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(635,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(635,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(635,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(634,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(634,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(634,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(635, 634), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(635, 634), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(635, 634), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(635, 634), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(635, 634), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(635, 634), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(635, 634), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(635, 634), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(635, 634), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(635, 634), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(635, 634), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(635, 634), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(635, 634), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(635, 634), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(635, 634), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(635,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(635,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(635,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(634,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(634,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(634,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(635, 634), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(635, 634), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(635, 634), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(671, 670), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(671, 670), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(671, 670), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(734,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(734,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(734,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(734,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(734,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(734,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(734,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(734,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(734,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(734,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(734,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(734,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(734,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(734,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(734,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(734,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(734,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(734,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(756, 755), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(756, 755), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(756, 755), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(756, 755), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(756, 755), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(756, 755), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(756, 755), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(756, 755), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(756, 755), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(756, 755), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(756, 755), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(756, 755), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(756,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(756,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(756,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(755,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(755,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(755,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(756, 755), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(756, 755), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(756, 755), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(759, 758), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(759, 758), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(759, 758), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(759, 758), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(759, 758), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(759, 758), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(759, 758), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(759, 758), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(759, 758), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(759, 758), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(759, 758), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(759, 758), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(759,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(759,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(759,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(758,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(758,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(758,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(759, 758), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(759, 758), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(759, 758), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(764, 765), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(764, 765), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(764, 765), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(764, 765), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(764, 765), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(764, 765), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(764, 765), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(764, 765), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(764, 765), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(764, 765), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(764, 765), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(764, 765), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(765,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(765,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(765,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(764,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(764,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(764,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(764, 765), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(764, 765), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(764, 765), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(793, 794), '0.00', True, '1/524/%', True, '1/524/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(793, 794), '0.00', True, '1/524/%', True, '1/524/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(793, 794), '0.00', True, '1/524/%', True, '1/524/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(793, 794), '0.00', True, '1/524/%', True, '1/524/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(793, 794), '0.00', True, '1/524/%', True, '1/524/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(793, 794), '0.00', True, '1/524/%', True, '1/524/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(793, 794), '0.00', True, '1/524/%', True, '1/524/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(793, 794), '0.00', True, '1/524/%', True, '1/524/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(793, 794), '0.00', True, '1/524/%', True, '1/524/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(793, 794), '0.00', True, '1/524/%', True, '1/524/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(793, 794), '0.00', True, '1/524/%', True, '1/524/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(793, 794), '0.00', True, '1/524/%', True, '1/524/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(794,), '0.00', True, '1/524/%', True, '1/524/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(794,), '0.00', True, '1/524/%', True, '1/524/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(794,), '0.00', True, '1/524/%', True, '1/524/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(793,), '0.00', True, '1/524/%', True, '1/524/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(793,), '0.00', True, '1/524/%', True, '1/524/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(793,), '0.00', True, '1/524/%', True, '1/524/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(793, 794), '0.00', True, '1/524/%', True, '1/524/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(793, 794), '0.00', True, '1/524/%', True, '1/524/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(793, 794), '0.00', True, '1/524/%', True, '1/524/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of mrp.production() / state: NOT IN {'done', 'cancel'} -> IN ['draft', 'confirmed', 'progress', 'to_close', False]
  File "/usr/lib/python3.10/unittest/case.py", line 549, in _callTestMethod
    method()
  File "/home/odoo/Documents/dev/odoo/addons/mrp/tests/test_order.py", line 1635, in test_components_availability
    self.bom_2.unlink()  # remove the kit bom of product_5
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 316, in unlink
    res = super(MailThread, self).unlink()
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 3739, in unlink
    func(self)
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_bom.py", line 209, in _unlink_except_running_mo
    if self.env['mrp.production'].search([('bom_id', 'in', self.ids), ('state', 'not in', ['done', 'cancel'])], limit=1):
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mrp_production".id FROM "mrp_production" WHERE (("mrp_production"."bom_id" in %s) AND ("mrp_production"."state" in %s))' with params: [(80,), ('draft', 'confirmed', 'progress', 'to_close', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(796, 794, 797), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(796, 794, 797), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(796, 794, 797), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(796, 794, 797), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(796, 794, 797), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(796, 794, 797), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(796, 794, 797), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(796, 794, 797), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(796, 794, 797), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(796, 794, 797), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(796, 794, 797), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(796, 794, 797), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(828, 827), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(828, 827), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(828, 827), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(828, 827), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(828, 827), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(828, 827), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(828, 827), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(828, 827), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(828, 827), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(828, 827), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(828, 827), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(828, 827), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(828,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(828,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(828,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(827,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(827,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(827,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(828, 827), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(828, 827), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(828, 827), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(828, 827), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(828, 827), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(828, 827), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(828, 827), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(828, 827), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(828, 827), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(828, 827), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(828, 827), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(828, 827), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(828, 827), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(828, 827), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(828, 827), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(828,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(828,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(828,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(827,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(827,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(827,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(828, 827), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(828, 827), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(828, 827), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(860, 859), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(860, 859), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(860, 859), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(860, 859), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(860, 859), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(860, 859), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(860, 859), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(860, 859), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(860, 859), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(860, 859), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(860, 859), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(860, 859), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(860,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(860,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(860,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(859,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(859,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(859,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(860, 859), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(860, 859), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(860, 859), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(794,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(794,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(794,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(794,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(794,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(794,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(794,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(794,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(794,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(794,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(794,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(794,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(794,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(794,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(794,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(794,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(794,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(794,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(794,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(794,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(794,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(794,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(794,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(794,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(794,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(794,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(794,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(794,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(794,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(794,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(794,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(794,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(794,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(794,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(794,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(794,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(874, 873), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(874, 873), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(874, 873), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(874, 873), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(874, 873), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(874, 873), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(874, 873), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(874, 873), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(874, 873), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(874, 873), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(874, 873), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(874, 873), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(874,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(874,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(874,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(873,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(873,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(873,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(874, 873), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(874, 873), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(874, 873), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(897, 896), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(897, 896), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(897, 896), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(897, 896), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(897, 896), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(897, 896), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(897, 896), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(897, 896), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(897, 896), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(897, 896), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(897, 896), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(897, 896), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(897,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(897,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(897,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(896,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(896,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(896,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(897, 896), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(897, 896), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(897, 896), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(897, 896), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(897, 896), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(897, 896), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(897, 896), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(897, 896), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(897, 896), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(897, 896), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(897, 896), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(897, 896), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(897, 896), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(897, 896), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(897, 896), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(897, 896), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(897, 896), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(897, 896), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(897,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(897,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(897,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(896,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(896,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(896,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(897, 896), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(897, 896), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(897, 896), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(900, 899), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(900, 899), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(900, 899), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(900, 899), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(900, 899), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(900, 899), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(900, 899), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(900, 899), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(900, 899), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(900, 899), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(900, 899), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(900, 899), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(900,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(900,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(900,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(899,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(899,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(899,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(900, 899), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(900, 899), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(900, 899), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(900, 899), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(900, 899), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(900, 899), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(900, 899), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(900, 899), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(900, 899), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(900, 899), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(900, 899), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(900, 899), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(900, 899), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(900, 899), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(900, 899), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(900,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(900,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(900,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(899,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(899,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(899,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(900, 899), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(900, 899), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(900, 899), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(905, 906), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(905, 906), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(905, 906), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(905, 906), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(905, 906), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(905, 906), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(905, 906), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(905, 906), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(905, 906), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(905, 906), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(905, 906), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(905, 906), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(906,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(906,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(906,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(905,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(905,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(905,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(905, 906), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(905, 906), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(905, 906), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(906, 905), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(906, 905), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(906, 905), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(906, 905), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(906, 905), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(906, 905), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(906, 905), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(906, 905), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(906, 905), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(906, 905), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(906, 905), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(906, 905), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(906,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(906,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(906,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(905,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(905,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(905,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(906, 905), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(906, 905), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(906, 905), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(908,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(908,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(908,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(908,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(908,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(908,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(908,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(908,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(908,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(908,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(908,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(908,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(908,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(908,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(908,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(908,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(908,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(908,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(908,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(908,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(908,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(908,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(908,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(908,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(908,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(908,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(908,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(794, 802), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(794, 802), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(794, 802), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(794, 802), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(794, 802), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(794, 802), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(794, 802), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(794, 802), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(794, 802), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(794, 802), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(794, 802), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(794, 802), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(794,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(794,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(794,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(802,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(802,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(802,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(794, 802), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(794, 802), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(794, 802), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(920, 919), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(920, 919), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(920, 919), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(920, 919), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(920, 919), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(920, 919), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(920, 919), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(920, 919), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(920, 919), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(920, 919), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(920, 919), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(920, 919), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(920,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(920,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(920,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(919,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(919,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(919,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(920, 919), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(920, 919), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(920, 919), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(794,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(794,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(794,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(794,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(794,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(794,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(794,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(794,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(794,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(794,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(794,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(794,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(794,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(794,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(794,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(794,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(794,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(794,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(794,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(794,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(794,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(794,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(794,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(794,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(794,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(794,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(794,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(927, 928, 929), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(927, 928, 929), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(927, 928, 929), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(927, 928, 929), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(927, 928, 929), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(927, 928, 929), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(927, 928, 929), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(927, 928, 929), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(927, 928, 929), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(927, 928, 929), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(927, 928, 929), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(927, 928, 929), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(927,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(927,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(927,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(928,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(928,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(928,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(929,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(929,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(929,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(927, 928, 929), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(927, 928, 929), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(927, 928, 929), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(927,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(927,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(927,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(928,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(928,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(928,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(929,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(929,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(929,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(927, 928, 929), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(927, 928, 929), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(927, 928, 929), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(927, 928, 929), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(927, 928, 929), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(927, 928, 929), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(927, 928, 929), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(927, 928, 929), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(927, 928, 929), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(927, 928, 929), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(927, 928, 929), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(927, 928, 929), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(927, 928, 929), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(927, 928, 929), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(927, 928, 929), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(927, 928, 929), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(927, 928, 929), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(927, 928, 929), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(927,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(927,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(927,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(928,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(928,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(928,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(929,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(929,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(929,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(927, 928, 929), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(927, 928, 929), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(927, 928, 929), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(930, 931, 932), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(930, 931, 932), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(930, 931, 932), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(930,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(930,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(930,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(931,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(931,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(931,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(932,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(932,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(932,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(930, 931, 932), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(930, 931, 932), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(930, 931, 932), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(930, 931, 932), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(930, 931, 932), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(930, 931, 932), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(930, 931, 932), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(930, 931, 932), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(930, 931, 932), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(930, 931, 932), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(930, 931, 932), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(930, 931, 932), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(930, 931, 932), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(930, 931, 932), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(930, 931, 932), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(930, 931, 932), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(930, 931, 932), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(930, 931, 932), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(930,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(930,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(930,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(931,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(931,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(931,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(932,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(932,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(932,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(930, 931, 932), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(930, 931, 932), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(930, 931, 932), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(951,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(951,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(951,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(951,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(951,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(951,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(951,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(951,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(951,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(951,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(951,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(951,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(951,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(951,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(951,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(951,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(951,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(951,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(951,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(951,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(951,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(951,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(951,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(951,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(960,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(960,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(960,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(960,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(960,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(960,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(960,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(960,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(960,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(960,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(960,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(960,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(960,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(960,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(960,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(960,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(960,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(960,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/tests/test_stock_report.py", line 61, in test_report_forecast_1_mo_count
    report_values, docs, lines = self.get_report_forecast(product_template_ids=product_chococake.product_tmpl_id.ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 35, in get_report_forecast
    report_values = report._get_report_values(docids=product_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 246, in _get_report_values
    'docs': self._get_report_data(product_template_ids=docids),
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 106, in _get_report_data
    res['lines'] = self._get_report_lines(product_template_ids, product_variant_ids, wh_location_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 161, in _get_report_lines
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in (SELECT "product_product".id FROM "product_product" WHERE ("product_product"."product_tmpl_id" in %s))) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in %s) AND (("stock_move"."location_dest_id" not in %s) OR "stock_move"."location_dest_id" IS NULL))) AND ("stock_move"."state" in %s))' with params: [(785,), '0.00', (7, 19, 20, 21, 22, 8, 18, 17, 33), (7, 19, 20, 21, 22, 8, 18, 17, 33), ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/tests/test_stock_report.py", line 61, in test_report_forecast_1_mo_count
    report_values, docs, lines = self.get_report_forecast(product_template_ids=product_chococake.product_tmpl_id.ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 35, in get_report_forecast
    report_values = report._get_report_values(docids=product_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 246, in _get_report_values
    'docs': self._get_report_data(product_template_ids=docids),
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 106, in _get_report_data
    res['lines'] = self._get_report_lines(product_template_ids, product_variant_ids, wh_location_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 162, in _get_report_lines
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in (SELECT "product_product".id FROM "product_product" WHERE ("product_product"."product_tmpl_id" in %s))) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in %s) AND (("stock_move"."location_dest_id" not in %s) OR "stock_move"."location_dest_id" IS NULL))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(785,), '0.00', (7, 19, 20, 21, 22, 8, 18, 17, 33), (7, 19, 20, 21, 22, 8, 18, 17, 33), ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/tests/test_stock_report.py", line 61, in test_report_forecast_1_mo_count
    report_values, docs, lines = self.get_report_forecast(product_template_ids=product_chococake.product_tmpl_id.ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 35, in get_report_forecast
    report_values = report._get_report_values(docids=product_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 246, in _get_report_values
    'docs': self._get_report_data(product_template_ids=docids),
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 106, in _get_report_data
    res['lines'] = self._get_report_lines(product_template_ids, product_variant_ids, wh_location_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 171, in _get_report_lines
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in (SELECT "product_product".id FROM "product_product" WHERE ("product_product"."product_tmpl_id" in %s))) AND ("stock_move"."product_uom_qty" != %s)) AND ((("stock_move"."location_id" not in %s) OR "stock_move"."location_id" IS NULL) AND ("stock_move"."location_dest_id" in %s))) AND ("stock_move"."state" in %s))' with params: [(785,), '0.00', (7, 19, 20, 21, 22, 8, 18, 17, 33), (7, 19, 20, 21, 22, 8, 18, 17, 33), ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/tests/test_stock_report.py", line 73, in test_report_forecast_1_mo_count
    report_values, docs, lines = self.get_report_forecast(product_template_ids=product_chococake.product_tmpl_id.ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 35, in get_report_forecast
    report_values = report._get_report_values(docids=product_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 246, in _get_report_values
    'docs': self._get_report_data(product_template_ids=docids),
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 106, in _get_report_data
    res['lines'] = self._get_report_lines(product_template_ids, product_variant_ids, wh_location_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 161, in _get_report_lines
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in (SELECT "product_product".id FROM "product_product" WHERE ("product_product"."product_tmpl_id" in %s))) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in %s) AND (("stock_move"."location_dest_id" not in %s) OR "stock_move"."location_dest_id" IS NULL))) AND ("stock_move"."state" in %s))' with params: [(785,), '0.00', (7, 19, 20, 21, 22, 8, 18, 17, 33), (7, 19, 20, 21, 22, 8, 18, 17, 33), ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/tests/test_stock_report.py", line 73, in test_report_forecast_1_mo_count
    report_values, docs, lines = self.get_report_forecast(product_template_ids=product_chococake.product_tmpl_id.ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 35, in get_report_forecast
    report_values = report._get_report_values(docids=product_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 246, in _get_report_values
    'docs': self._get_report_data(product_template_ids=docids),
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 106, in _get_report_data
    res['lines'] = self._get_report_lines(product_template_ids, product_variant_ids, wh_location_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 162, in _get_report_lines
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in (SELECT "product_product".id FROM "product_product" WHERE ("product_product"."product_tmpl_id" in %s))) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in %s) AND (("stock_move"."location_dest_id" not in %s) OR "stock_move"."location_dest_id" IS NULL))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(785,), '0.00', (7, 19, 20, 21, 22, 8, 18, 17, 33), (7, 19, 20, 21, 22, 8, 18, 17, 33), ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/tests/test_stock_report.py", line 73, in test_report_forecast_1_mo_count
    report_values, docs, lines = self.get_report_forecast(product_template_ids=product_chococake.product_tmpl_id.ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 35, in get_report_forecast
    report_values = report._get_report_values(docids=product_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 246, in _get_report_values
    'docs': self._get_report_data(product_template_ids=docids),
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 106, in _get_report_data
    res['lines'] = self._get_report_lines(product_template_ids, product_variant_ids, wh_location_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 171, in _get_report_lines
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in (SELECT "product_product".id FROM "product_product" WHERE ("product_product"."product_tmpl_id" in %s))) AND ("stock_move"."product_uom_qty" != %s)) AND ((("stock_move"."location_id" not in %s) OR "stock_move"."location_id" IS NULL) AND ("stock_move"."location_dest_id" in %s))) AND ("stock_move"."state" in %s))' with params: [(785,), '0.00', (7, 19, 20, 21, 22, 8, 18, 17, 33), (7, 19, 20, 21, 22, 8, 18, 17, 33), ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/tests/test_stock_report.py", line 140, in test_report_forecast_2_production_backorder
    report_values, docs, lines = self.get_report_forecast(product_template_ids=product_apple_pie.product_tmpl_id.ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 35, in get_report_forecast
    report_values = report._get_report_values(docids=product_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 246, in _get_report_values
    'docs': self._get_report_data(product_template_ids=docids),
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 106, in _get_report_data
    res['lines'] = self._get_report_lines(product_template_ids, product_variant_ids, wh_location_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 161, in _get_report_lines
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in (SELECT "product_product".id FROM "product_product" WHERE ("product_product"."product_tmpl_id" in %s))) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in %s) AND (("stock_move"."location_dest_id" not in %s) OR "stock_move"."location_dest_id" IS NULL))) AND ("stock_move"."state" in %s))' with params: [(787,), '0.00', (7, 19, 20, 21, 22, 445, 444, 8, 18, 17, 33), (7, 19, 20, 21, 22, 445, 444, 8, 18, 17, 33), ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/tests/test_stock_report.py", line 140, in test_report_forecast_2_production_backorder
    report_values, docs, lines = self.get_report_forecast(product_template_ids=product_apple_pie.product_tmpl_id.ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 35, in get_report_forecast
    report_values = report._get_report_values(docids=product_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 246, in _get_report_values
    'docs': self._get_report_data(product_template_ids=docids),
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 106, in _get_report_data
    res['lines'] = self._get_report_lines(product_template_ids, product_variant_ids, wh_location_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 162, in _get_report_lines
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in (SELECT "product_product".id FROM "product_product" WHERE ("product_product"."product_tmpl_id" in %s))) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in %s) AND (("stock_move"."location_dest_id" not in %s) OR "stock_move"."location_dest_id" IS NULL))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(787,), '0.00', (7, 19, 20, 21, 22, 445, 444, 8, 18, 17, 33), (7, 19, 20, 21, 22, 445, 444, 8, 18, 17, 33), ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/tests/test_stock_report.py", line 140, in test_report_forecast_2_production_backorder
    report_values, docs, lines = self.get_report_forecast(product_template_ids=product_apple_pie.product_tmpl_id.ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 35, in get_report_forecast
    report_values = report._get_report_values(docids=product_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 246, in _get_report_values
    'docs': self._get_report_data(product_template_ids=docids),
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 106, in _get_report_data
    res['lines'] = self._get_report_lines(product_template_ids, product_variant_ids, wh_location_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 171, in _get_report_lines
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in (SELECT "product_product".id FROM "product_product" WHERE ("product_product"."product_tmpl_id" in %s))) AND ("stock_move"."product_uom_qty" != %s)) AND ((("stock_move"."location_id" not in %s) OR "stock_move"."location_id" IS NULL) AND ("stock_move"."location_dest_id" in %s))) AND ("stock_move"."state" in %s))' with params: [(787,), '0.00', (7, 19, 20, 21, 22, 445, 444, 8, 18, 17, 33), (7, 19, 20, 21, 22, 445, 444, 8, 18, 17, 33), ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/tests/test_stock_report.py", line 152, in test_report_forecast_2_production_backorder
    report_values, docs, lines = self.get_report_forecast(product_template_ids=product_apple_pie.product_tmpl_id.ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 35, in get_report_forecast
    report_values = report._get_report_values(docids=product_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 246, in _get_report_values
    'docs': self._get_report_data(product_template_ids=docids),
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 106, in _get_report_data
    res['lines'] = self._get_report_lines(product_template_ids, product_variant_ids, wh_location_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 161, in _get_report_lines
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in (SELECT "product_product".id FROM "product_product" WHERE ("product_product"."product_tmpl_id" in %s))) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in %s) AND (("stock_move"."location_dest_id" not in %s) OR "stock_move"."location_dest_id" IS NULL))) AND ("stock_move"."state" in %s))' with params: [(787,), '0.00', (7, 19, 20, 21, 22, 445, 444, 8, 18, 17, 33), (7, 19, 20, 21, 22, 445, 444, 8, 18, 17, 33), ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/tests/test_stock_report.py", line 152, in test_report_forecast_2_production_backorder
    report_values, docs, lines = self.get_report_forecast(product_template_ids=product_apple_pie.product_tmpl_id.ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 35, in get_report_forecast
    report_values = report._get_report_values(docids=product_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 246, in _get_report_values
    'docs': self._get_report_data(product_template_ids=docids),
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 106, in _get_report_data
    res['lines'] = self._get_report_lines(product_template_ids, product_variant_ids, wh_location_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 162, in _get_report_lines
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in (SELECT "product_product".id FROM "product_product" WHERE ("product_product"."product_tmpl_id" in %s))) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in %s) AND (("stock_move"."location_dest_id" not in %s) OR "stock_move"."location_dest_id" IS NULL))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(787,), '0.00', (7, 19, 20, 21, 22, 445, 444, 8, 18, 17, 33), (7, 19, 20, 21, 22, 445, 444, 8, 18, 17, 33), ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/tests/test_stock_report.py", line 152, in test_report_forecast_2_production_backorder
    report_values, docs, lines = self.get_report_forecast(product_template_ids=product_apple_pie.product_tmpl_id.ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 35, in get_report_forecast
    report_values = report._get_report_values(docids=product_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 246, in _get_report_values
    'docs': self._get_report_data(product_template_ids=docids),
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 106, in _get_report_data
    res['lines'] = self._get_report_lines(product_template_ids, product_variant_ids, wh_location_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 171, in _get_report_lines
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in (SELECT "product_product".id FROM "product_product" WHERE ("product_product"."product_tmpl_id" in %s))) AND ("stock_move"."product_uom_qty" != %s)) AND ((("stock_move"."location_id" not in %s) OR "stock_move"."location_id" IS NULL) AND ("stock_move"."location_dest_id" in %s))) AND ("stock_move"."state" in %s))' with params: [(787,), '0.00', (7, 19, 20, 21, 22, 445, 444, 8, 18, 17, 33), (7, 19, 20, 21, 22, 445, 444, 8, 18, 17, 33), ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/tests/test_stock_report.py", line 181, in test_report_forecast_3_report_line_corresponding_to_mo_highlighted
    _, _, lines = self.get_report_forecast(product_template_ids=product_banana.product_tmpl_id.ids, context=context)
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 35, in get_report_forecast
    report_values = report._get_report_values(docids=product_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 246, in _get_report_values
    'docs': self._get_report_data(product_template_ids=docids),
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 106, in _get_report_data
    res['lines'] = self._get_report_lines(product_template_ids, product_variant_ids, wh_location_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 161, in _get_report_lines
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in (SELECT "product_product".id FROM "product_product" WHERE ("product_product"."product_tmpl_id" in %s))) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in %s) AND (("stock_move"."location_dest_id" not in %s) OR "stock_move"."location_dest_id" IS NULL))) AND ("stock_move"."state" in %s))' with params: [(789,), '0.00', (7, 19, 20, 21, 22, 8, 18, 17, 33), (7, 19, 20, 21, 22, 8, 18, 17, 33), ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/tests/test_stock_report.py", line 181, in test_report_forecast_3_report_line_corresponding_to_mo_highlighted
    _, _, lines = self.get_report_forecast(product_template_ids=product_banana.product_tmpl_id.ids, context=context)
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 35, in get_report_forecast
    report_values = report._get_report_values(docids=product_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 246, in _get_report_values
    'docs': self._get_report_data(product_template_ids=docids),
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 106, in _get_report_data
    res['lines'] = self._get_report_lines(product_template_ids, product_variant_ids, wh_location_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 162, in _get_report_lines
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in (SELECT "product_product".id FROM "product_product" WHERE ("product_product"."product_tmpl_id" in %s))) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in %s) AND (("stock_move"."location_dest_id" not in %s) OR "stock_move"."location_dest_id" IS NULL))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(789,), '0.00', (7, 19, 20, 21, 22, 8, 18, 17, 33), (7, 19, 20, 21, 22, 8, 18, 17, 33), ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/tests/test_stock_report.py", line 181, in test_report_forecast_3_report_line_corresponding_to_mo_highlighted
    _, _, lines = self.get_report_forecast(product_template_ids=product_banana.product_tmpl_id.ids, context=context)
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 35, in get_report_forecast
    report_values = report._get_report_values(docids=product_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 246, in _get_report_values
    'docs': self._get_report_data(product_template_ids=docids),
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 106, in _get_report_data
    res['lines'] = self._get_report_lines(product_template_ids, product_variant_ids, wh_location_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 171, in _get_report_lines
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in (SELECT "product_product".id FROM "product_product" WHERE ("product_product"."product_tmpl_id" in %s))) AND ("stock_move"."product_uom_qty" != %s)) AND ((("stock_move"."location_id" not in %s) OR "stock_move"."location_id" IS NULL) AND ("stock_move"."location_dest_id" in %s))) AND ("stock_move"."state" in %s))' with params: [(789,), '0.00', (7, 19, 20, 21, 22, 8, 18, 17, 33), (7, 19, 20, 21, 22, 8, 18, 17, 33), ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/tests/test_stock_report.py", line 181, in test_report_forecast_3_report_line_corresponding_to_mo_highlighted
    _, _, lines = self.get_report_forecast(product_template_ids=product_banana.product_tmpl_id.ids, context=context)
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 35, in get_report_forecast
    report_values = report._get_report_values(docids=product_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 246, in _get_report_values
    'docs': self._get_report_data(product_template_ids=docids),
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 106, in _get_report_data
    res['lines'] = self._get_report_lines(product_template_ids, product_variant_ids, wh_location_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 161, in _get_report_lines
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in (SELECT "product_product".id FROM "product_product" WHERE ("product_product"."product_tmpl_id" in %s))) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in %s) AND (("stock_move"."location_dest_id" not in %s) OR "stock_move"."location_dest_id" IS NULL))) AND ("stock_move"."state" in %s))' with params: [(789,), '0.00', (7, 19, 20, 21, 22, 8, 18, 17, 33), (7, 19, 20, 21, 22, 8, 18, 17, 33), ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/tests/test_stock_report.py", line 181, in test_report_forecast_3_report_line_corresponding_to_mo_highlighted
    _, _, lines = self.get_report_forecast(product_template_ids=product_banana.product_tmpl_id.ids, context=context)
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 35, in get_report_forecast
    report_values = report._get_report_values(docids=product_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 246, in _get_report_values
    'docs': self._get_report_data(product_template_ids=docids),
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 106, in _get_report_data
    res['lines'] = self._get_report_lines(product_template_ids, product_variant_ids, wh_location_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 162, in _get_report_lines
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in (SELECT "product_product".id FROM "product_product" WHERE ("product_product"."product_tmpl_id" in %s))) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in %s) AND (("stock_move"."location_dest_id" not in %s) OR "stock_move"."location_dest_id" IS NULL))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(789,), '0.00', (7, 19, 20, 21, 22, 8, 18, 17, 33), (7, 19, 20, 21, 22, 8, 18, 17, 33), ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/tests/test_stock_report.py", line 181, in test_report_forecast_3_report_line_corresponding_to_mo_highlighted
    _, _, lines = self.get_report_forecast(product_template_ids=product_banana.product_tmpl_id.ids, context=context)
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 35, in get_report_forecast
    report_values = report._get_report_values(docids=product_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 246, in _get_report_values
    'docs': self._get_report_data(product_template_ids=docids),
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 106, in _get_report_data
    res['lines'] = self._get_report_lines(product_template_ids, product_variant_ids, wh_location_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 171, in _get_report_lines
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in (SELECT "product_product".id FROM "product_product" WHERE ("product_product"."product_tmpl_id" in %s))) AND ("stock_move"."product_uom_qty" != %s)) AND ((("stock_move"."location_id" not in %s) OR "stock_move"."location_id" IS NULL) AND ("stock_move"."location_dest_id" in %s))) AND ("stock_move"."state" in %s))' with params: [(789,), '0.00', (7, 19, 20, 21, 22, 8, 18, 17, 33), (7, 19, 20, 21, 22, 8, 18, 17, 33), ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(1073, 1074), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(1073, 1074), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(1073, 1074), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(1073, 1074), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(1073, 1074), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(1073, 1074), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(1073, 1074), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(1073, 1074), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(1073, 1074), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(1073, 1074), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(1073, 1074), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(1073, 1074), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(1073,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(1073,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(1073,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(1074,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(1074,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(1074,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(1073, 1074), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(1073, 1074), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(1073, 1074), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(1073, 1074), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(1073, 1074), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(1073, 1074), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(1073, 1074), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(1073, 1074), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(1073, 1074), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(1073, 1074), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(1073, 1074), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(1073, 1074), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(1073, 1074), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(1073, 1074), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(1073, 1074), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(1073,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(1073,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(1073,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(1074,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(1074,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(1074,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(1073, 1074), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(1073, 1074), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(1073, 1074), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(1073, 1074), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(1073, 1074), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(1073, 1074), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(1073, 1074), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(1073, 1074), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(1073, 1074), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(1099, 1100), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(1099, 1100), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(1099, 1100), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(1099, 1100), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(1099, 1100), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(1099, 1100), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(1099, 1100), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(1099, 1100), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(1099, 1100), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(1099, 1100), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(1099, 1100), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(1099, 1100), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(1100,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(1100,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(1100,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(1099,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(1099,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(1099,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(1099, 1100), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(1099, 1100), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(1099, 1100), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(1099,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(1099,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(1099,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(1099, 1100), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(1099, 1100), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(1099, 1100), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(1099, 1100), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(1099, 1100), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(1099, 1100), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(1100, 1099), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(1100, 1099), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(1100, 1099), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(1100, 1099), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(1100, 1099), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(1100, 1099), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(1100, 1099), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(1100, 1099), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(1100, 1099), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(1100, 1099), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(1100, 1099), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(1100, 1099), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(1100,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(1100,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(1100,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(1099,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(1099,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(1099,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(1100, 1099), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(1100, 1099), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(1100, 1099), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(1099,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(1099,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(1099,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(1100, 1099), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(1100, 1099), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(1100, 1099), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(1100, 1099), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(1100, 1099), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(1100, 1099), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(1085,), '0.0000', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(1085,), '0.0000', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(1085,), '0.0000', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(1085,), '0.0000', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(1085,), '0.0000', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(1085,), '0.0000', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(1085,), '0.0000', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(1085,), '0.0000', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(1085,), '0.0000', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(1085,), '0.0000', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(1085,), '0.0000', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(1085,), '0.0000', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(1085,), '0.0000', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(1085,), '0.0000', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(1085,), '0.0000', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(1085,), '0.0000', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(1085,), '0.0000', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(1085,), '0.0000', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/enterprise/mail_mobile/models/mail_thread.py", line 25, in _notify_thread
    recipients_data = super(MailThread, self)._notify_thread(message, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (221,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 438, in _send
    mail._postprocess_sent_message(success_pids=success_pids, failure_type=failure_type)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 175, in _postprocess_sent_message
    notifications = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (221,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/enterprise/mail_mobile/models/mail_thread.py", line 25, in _notify_thread
    recipients_data = super(MailThread, self)._notify_thread(message, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (222,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 438, in _send
    mail._postprocess_sent_message(success_pids=success_pids, failure_type=failure_type)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 175, in _postprocess_sent_message
    notifications = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (222,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/enterprise/mail_mobile/models/mail_thread.py", line 25, in _notify_thread
    recipients_data = super(MailThread, self)._notify_thread(message, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (223,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 438, in _send
    mail._postprocess_sent_message(success_pids=success_pids, failure_type=failure_type)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 175, in _postprocess_sent_message
    notifications = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (223,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/enterprise/mail_mobile/models/mail_thread.py", line 25, in _notify_thread
    recipients_data = super(MailThread, self)._notify_thread(message, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (224,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 438, in _send
    mail._postprocess_sent_message(success_pids=success_pids, failure_type=failure_type)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 175, in _postprocess_sent_message
    notifications = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (224,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/enterprise/mail_mobile/models/mail_thread.py", line 25, in _notify_thread
    recipients_data = super(MailThread, self)._notify_thread(message, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (225,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 438, in _send
    mail._postprocess_sent_message(success_pids=success_pids, failure_type=failure_type)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 175, in _postprocess_sent_message
    notifications = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (225,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/enterprise/mail_mobile/models/mail_thread.py", line 25, in _notify_thread
    recipients_data = super(MailThread, self)._notify_thread(message, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (226,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 438, in _send
    mail._postprocess_sent_message(success_pids=success_pids, failure_type=failure_type)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 175, in _postprocess_sent_message
    notifications = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (226,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/enterprise/mail_mobile/models/mail_thread.py", line 25, in _notify_thread
    recipients_data = super(MailThread, self)._notify_thread(message, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (227,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 438, in _send
    mail._postprocess_sent_message(success_pids=success_pids, failure_type=failure_type)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 175, in _postprocess_sent_message
    notifications = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (227,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/enterprise/mail_mobile/models/mail_thread.py", line 25, in _notify_thread
    recipients_data = super(MailThread, self)._notify_thread(message, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (228,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 438, in _send
    mail._postprocess_sent_message(success_pids=success_pids, failure_type=failure_type)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 175, in _postprocess_sent_message
    notifications = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (228,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/enterprise/mail_mobile/models/mail_thread.py", line 25, in _notify_thread
    recipients_data = super(MailThread, self)._notify_thread(message, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (229,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 438, in _send
    mail._postprocess_sent_message(success_pids=success_pids, failure_type=failure_type)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 175, in _postprocess_sent_message
    notifications = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (229,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/enterprise/mail_mobile/models/mail_thread.py", line 25, in _notify_thread
    recipients_data = super(MailThread, self)._notify_thread(message, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (230,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 438, in _send
    mail._postprocess_sent_message(success_pids=success_pids, failure_type=failure_type)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 175, in _postprocess_sent_message
    notifications = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (230,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/enterprise/mail_mobile/models/mail_thread.py", line 25, in _notify_thread
    recipients_data = super(MailThread, self)._notify_thread(message, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (231,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 438, in _send
    mail._postprocess_sent_message(success_pids=success_pids, failure_type=failure_type)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 175, in _postprocess_sent_message
    notifications = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (231,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/enterprise/mail_mobile/models/mail_thread.py", line 25, in _notify_thread
    recipients_data = super(MailThread, self)._notify_thread(message, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (232,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 438, in _send
    mail._postprocess_sent_message(success_pids=success_pids, failure_type=failure_type)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 175, in _postprocess_sent_message
    notifications = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (232,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/enterprise/mail_mobile/models/mail_thread.py", line 25, in _notify_thread
    recipients_data = super(MailThread, self)._notify_thread(message, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (233,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 438, in _send
    mail._postprocess_sent_message(success_pids=success_pids, failure_type=failure_type)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 175, in _postprocess_sent_message
    notifications = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (233,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/enterprise/mail_mobile/models/mail_thread.py", line 25, in _notify_thread
    recipients_data = super(MailThread, self)._notify_thread(message, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (234,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 438, in _send
    mail._postprocess_sent_message(success_pids=success_pids, failure_type=failure_type)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 175, in _postprocess_sent_message
    notifications = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (234,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/enterprise/mail_mobile/models/mail_thread.py", line 25, in _notify_thread
    recipients_data = super(MailThread, self)._notify_thread(message, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (235,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 438, in _send
    mail._postprocess_sent_message(success_pids=success_pids, failure_type=failure_type)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 175, in _postprocess_sent_message
    notifications = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (235,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/enterprise/mail_mobile/models/mail_thread.py", line 25, in _notify_thread
    recipients_data = super(MailThread, self)._notify_thread(message, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (236,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 438, in _send
    mail._postprocess_sent_message(success_pids=success_pids, failure_type=failure_type)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 175, in _postprocess_sent_message
    notifications = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (236,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/enterprise/mail_mobile/models/mail_thread.py", line 25, in _notify_thread
    recipients_data = super(MailThread, self)._notify_thread(message, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (237,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 438, in _send
    mail._postprocess_sent_message(success_pids=success_pids, failure_type=failure_type)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 175, in _postprocess_sent_message
    notifications = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (237,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/enterprise/mail_mobile/models/mail_thread.py", line 25, in _notify_thread
    recipients_data = super(MailThread, self)._notify_thread(message, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (238,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 438, in _send
    mail._postprocess_sent_message(success_pids=success_pids, failure_type=failure_type)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 175, in _postprocess_sent_message
    notifications = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (238,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/enterprise/mail_mobile/models/mail_thread.py", line 25, in _notify_thread
    recipients_data = super(MailThread, self)._notify_thread(message, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (239,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 438, in _send
    mail._postprocess_sent_message(success_pids=success_pids, failure_type=failure_type)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 175, in _postprocess_sent_message
    notifications = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (239,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/enterprise/mail_mobile/models/mail_thread.py", line 25, in _notify_thread
    recipients_data = super(MailThread, self)._notify_thread(message, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (240,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 438, in _send
    mail._postprocess_sent_message(success_pids=success_pids, failure_type=failure_type)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 175, in _postprocess_sent_message
    notifications = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (240,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/enterprise/mail_mobile/models/mail_thread.py", line 25, in _notify_thread
    recipients_data = super(MailThread, self)._notify_thread(message, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (241,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 438, in _send
    mail._postprocess_sent_message(success_pids=success_pids, failure_type=failure_type)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 175, in _postprocess_sent_message
    notifications = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (241,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/enterprise/mail_mobile/models/mail_thread.py", line 25, in _notify_thread
    recipients_data = super(MailThread, self)._notify_thread(message, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (242,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 438, in _send
    mail._postprocess_sent_message(success_pids=success_pids, failure_type=failure_type)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 175, in _postprocess_sent_message
    notifications = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (242,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/enterprise/mail_mobile/models/mail_thread.py", line 25, in _notify_thread
    recipients_data = super(MailThread, self)._notify_thread(message, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (243,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 438, in _send
    mail._postprocess_sent_message(success_pids=success_pids, failure_type=failure_type)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 175, in _postprocess_sent_message
    notifications = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (243,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/enterprise/mail_mobile/models/mail_thread.py", line 25, in _notify_thread
    recipients_data = super(MailThread, self)._notify_thread(message, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (244,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 438, in _send
    mail._postprocess_sent_message(success_pids=success_pids, failure_type=failure_type)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 175, in _postprocess_sent_message
    notifications = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (244,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/auth_signup/models/res_users.py", line 243, in create
    users_with_email.with_context(create_user=True).action_reset_password()
  File "/home/odoo/Documents/dev/odoo/addons/auth_signup/models/res_users.py", line 202, in action_reset_password
    template.send_mail(user.id, force_send=force_send, raise_exception=True, email_values=email_values)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_template.py", line 337, in send_mail
    mail.send(raise_exception=raise_exception)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (245,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of snailmail.letter() / state: NOT IN {'canceled', 'sent'} -> IN ['pending', 'error']
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4188, in create
    next(iter(fields)).determine_inverse(batch_recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1344, in determine_inverse
    getattr(records, self.inverse)()
  File "/home/odoo/Documents/dev/odoo/odoo/addons/base/models/res_company.py", line 137, in _inverse_street
    company.partner_id.street = company.street
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1286, in __set__
    records.write({self.name: write_value})
  File "/home/odoo/Documents/dev/odoo/addons/snailmail/models/res_partner.py", line 20, in write
    letters = self.env['snailmail.letter'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "snailmail_letter".id FROM "snailmail_letter" WHERE (("snailmail_letter"."state" in %s) AND ("snailmail_letter"."partner_id" in %s))' with params: [('pending', 'error'), (1193,)]>

 --------------------------------
Inverse selection of snailmail.letter() / state: NOT IN {'canceled', 'sent'} -> IN ['pending', 'error']
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4188, in create
    next(iter(fields)).determine_inverse(batch_recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1344, in determine_inverse
    getattr(records, self.inverse)()
  File "/home/odoo/Documents/dev/odoo/odoo/addons/base/models/res_company.py", line 141, in _inverse_street2
    company.partner_id.street2 = company.street2
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1286, in __set__
    records.write({self.name: write_value})
  File "/home/odoo/Documents/dev/odoo/addons/snailmail/models/res_partner.py", line 20, in write
    letters = self.env['snailmail.letter'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "snailmail_letter".id FROM "snailmail_letter" WHERE (("snailmail_letter"."state" in %s) AND ("snailmail_letter"."partner_id" in %s))' with params: [('pending', 'error'), (1193,)]>

 --------------------------------
Inverse selection of snailmail.letter() / state: NOT IN {'canceled', 'sent'} -> IN ['pending', 'error']
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4188, in create
    next(iter(fields)).determine_inverse(batch_recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1344, in determine_inverse
    getattr(records, self.inverse)()
  File "/home/odoo/Documents/dev/odoo/odoo/addons/base/models/res_company.py", line 145, in _inverse_zip
    company.partner_id.zip = company.zip
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1286, in __set__
    records.write({self.name: write_value})
  File "/home/odoo/Documents/dev/odoo/addons/snailmail/models/res_partner.py", line 20, in write
    letters = self.env['snailmail.letter'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "snailmail_letter".id FROM "snailmail_letter" WHERE (("snailmail_letter"."state" in %s) AND ("snailmail_letter"."partner_id" in %s))' with params: [('pending', 'error'), (1193,)]>

 --------------------------------
Inverse selection of snailmail.letter() / state: NOT IN {'canceled', 'sent'} -> IN ['pending', 'error']
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4188, in create
    next(iter(fields)).determine_inverse(batch_recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1344, in determine_inverse
    getattr(records, self.inverse)()
  File "/home/odoo/Documents/dev/odoo/odoo/addons/base/models/res_company.py", line 149, in _inverse_city
    company.partner_id.city = company.city
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1286, in __set__
    records.write({self.name: write_value})
  File "/home/odoo/Documents/dev/odoo/addons/snailmail/models/res_partner.py", line 20, in write
    letters = self.env['snailmail.letter'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "snailmail_letter".id FROM "snailmail_letter" WHERE (("snailmail_letter"."state" in %s) AND ("snailmail_letter"."partner_id" in %s))' with params: [('pending', 'error'), (1193,)]>

 --------------------------------
Inverse selection of snailmail.letter() / state: NOT IN {'canceled', 'sent'} -> IN ['pending', 'error']
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4188, in create
    next(iter(fields)).determine_inverse(batch_recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1344, in determine_inverse
    getattr(records, self.inverse)()
  File "/home/odoo/Documents/dev/odoo/odoo/addons/base/models/res_company.py", line 153, in _inverse_state
    company.partner_id.state_id = company.state_id
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1286, in __set__
    records.write({self.name: write_value})
  File "/home/odoo/Documents/dev/odoo/addons/snailmail/models/res_partner.py", line 20, in write
    letters = self.env['snailmail.letter'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "snailmail_letter".id FROM "snailmail_letter" WHERE (("snailmail_letter"."state" in %s) AND ("snailmail_letter"."partner_id" in %s))' with params: [('pending', 'error'), (1193,)]>

 --------------------------------
Inverse selection of snailmail.letter() / state: NOT IN {'canceled', 'sent'} -> IN ['pending', 'error']
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4188, in create
    next(iter(fields)).determine_inverse(batch_recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1344, in determine_inverse
    getattr(records, self.inverse)()
  File "/home/odoo/Documents/dev/odoo/odoo/addons/base/models/res_company.py", line 157, in _inverse_country
    company.partner_id.country_id = company.country_id
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1286, in __set__
    records.write({self.name: write_value})
  File "/home/odoo/Documents/dev/odoo/addons/snailmail/models/res_partner.py", line 20, in write
    letters = self.env['snailmail.letter'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "snailmail_letter".id FROM "snailmail_letter" WHERE (("snailmail_letter"."state" in %s) AND ("snailmail_letter"."partner_id" in %s))' with params: [('pending', 'error'), (1193,)]>

 --------------------------------
Inverse selection of snailmail.letter() / state: NOT IN {'canceled', 'sent'} -> IN ['pending', 'error']
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4188, in create
    next(iter(fields)).determine_inverse(batch_recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1344, in determine_inverse
    getattr(records, self.inverse)()
  File "/home/odoo/Documents/dev/odoo/odoo/addons/base/models/res_company.py", line 137, in _inverse_street
    company.partner_id.street = company.street
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1286, in __set__
    records.write({self.name: write_value})
  File "/home/odoo/Documents/dev/odoo/addons/snailmail/models/res_partner.py", line 20, in write
    letters = self.env['snailmail.letter'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "snailmail_letter".id FROM "snailmail_letter" WHERE (("snailmail_letter"."state" in %s) AND ("snailmail_letter"."partner_id" in %s))' with params: [('pending', 'error'), (1194,)]>

 --------------------------------
Inverse selection of snailmail.letter() / state: NOT IN {'canceled', 'sent'} -> IN ['pending', 'error']
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4188, in create
    next(iter(fields)).determine_inverse(batch_recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1344, in determine_inverse
    getattr(records, self.inverse)()
  File "/home/odoo/Documents/dev/odoo/odoo/addons/base/models/res_company.py", line 141, in _inverse_street2
    company.partner_id.street2 = company.street2
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1286, in __set__
    records.write({self.name: write_value})
  File "/home/odoo/Documents/dev/odoo/addons/snailmail/models/res_partner.py", line 20, in write
    letters = self.env['snailmail.letter'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "snailmail_letter".id FROM "snailmail_letter" WHERE (("snailmail_letter"."state" in %s) AND ("snailmail_letter"."partner_id" in %s))' with params: [('pending', 'error'), (1194,)]>

 --------------------------------
Inverse selection of snailmail.letter() / state: NOT IN {'canceled', 'sent'} -> IN ['pending', 'error']
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4188, in create
    next(iter(fields)).determine_inverse(batch_recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1344, in determine_inverse
    getattr(records, self.inverse)()
  File "/home/odoo/Documents/dev/odoo/odoo/addons/base/models/res_company.py", line 145, in _inverse_zip
    company.partner_id.zip = company.zip
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1286, in __set__
    records.write({self.name: write_value})
  File "/home/odoo/Documents/dev/odoo/addons/snailmail/models/res_partner.py", line 20, in write
    letters = self.env['snailmail.letter'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "snailmail_letter".id FROM "snailmail_letter" WHERE (("snailmail_letter"."state" in %s) AND ("snailmail_letter"."partner_id" in %s))' with params: [('pending', 'error'), (1194,)]>

 --------------------------------
Inverse selection of snailmail.letter() / state: NOT IN {'canceled', 'sent'} -> IN ['pending', 'error']
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4188, in create
    next(iter(fields)).determine_inverse(batch_recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1344, in determine_inverse
    getattr(records, self.inverse)()
  File "/home/odoo/Documents/dev/odoo/odoo/addons/base/models/res_company.py", line 149, in _inverse_city
    company.partner_id.city = company.city
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1286, in __set__
    records.write({self.name: write_value})
  File "/home/odoo/Documents/dev/odoo/addons/snailmail/models/res_partner.py", line 20, in write
    letters = self.env['snailmail.letter'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "snailmail_letter".id FROM "snailmail_letter" WHERE (("snailmail_letter"."state" in %s) AND ("snailmail_letter"."partner_id" in %s))' with params: [('pending', 'error'), (1194,)]>

 --------------------------------
Inverse selection of snailmail.letter() / state: NOT IN {'canceled', 'sent'} -> IN ['pending', 'error']
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4188, in create
    next(iter(fields)).determine_inverse(batch_recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1344, in determine_inverse
    getattr(records, self.inverse)()
  File "/home/odoo/Documents/dev/odoo/odoo/addons/base/models/res_company.py", line 153, in _inverse_state
    company.partner_id.state_id = company.state_id
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1286, in __set__
    records.write({self.name: write_value})
  File "/home/odoo/Documents/dev/odoo/addons/snailmail/models/res_partner.py", line 20, in write
    letters = self.env['snailmail.letter'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "snailmail_letter".id FROM "snailmail_letter" WHERE (("snailmail_letter"."state" in %s) AND ("snailmail_letter"."partner_id" in %s))' with params: [('pending', 'error'), (1194,)]>

 --------------------------------
Inverse selection of snailmail.letter() / state: NOT IN {'canceled', 'sent'} -> IN ['pending', 'error']
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4188, in create
    next(iter(fields)).determine_inverse(batch_recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1344, in determine_inverse
    getattr(records, self.inverse)()
  File "/home/odoo/Documents/dev/odoo/odoo/addons/base/models/res_company.py", line 157, in _inverse_country
    company.partner_id.country_id = company.country_id
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1286, in __set__
    records.write({self.name: write_value})
  File "/home/odoo/Documents/dev/odoo/addons/snailmail/models/res_partner.py", line 20, in write
    letters = self.env['snailmail.letter'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "snailmail_letter".id FROM "snailmail_letter" WHERE (("snailmail_letter"."state" in %s) AND ("snailmail_letter"."partner_id" in %s))' with params: [('pending', 'error'), (1194,)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/usr/lib/python3.10/unittest/case.py", line 549, in _callTestMethod
    method()
  File "/home/odoo/Documents/dev/odoo/addons/stock_account/tests/test_stockvaluation.py", line 3903, in test_forecast_report_value
    report_value_1 = report_for_company_1._get_report_values(docids=self.product1.ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 69, in _get_report_values
    'docs': self._get_report_data(product_variant_ids=docids),
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 106, in _get_report_data
    res['lines'] = self._get_report_lines(product_template_ids, product_variant_ids, wh_location_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 161, in _get_report_lines
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in %s) AND (("stock_move"."location_dest_id" not in %s) OR "stock_move"."location_dest_id" IS NULL))) AND ("stock_move"."state" in %s))' with params: [(1122,), '0.00', (612, 613), (612, 613), ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/usr/lib/python3.10/unittest/case.py", line 549, in _callTestMethod
    method()
  File "/home/odoo/Documents/dev/odoo/addons/stock_account/tests/test_stockvaluation.py", line 3903, in test_forecast_report_value
    report_value_1 = report_for_company_1._get_report_values(docids=self.product1.ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 69, in _get_report_values
    'docs': self._get_report_data(product_variant_ids=docids),
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 106, in _get_report_data
    res['lines'] = self._get_report_lines(product_template_ids, product_variant_ids, wh_location_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 162, in _get_report_lines
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in %s) AND (("stock_move"."location_dest_id" not in %s) OR "stock_move"."location_dest_id" IS NULL))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(1122,), '0.00', (612, 613), (612, 613), ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/usr/lib/python3.10/unittest/case.py", line 549, in _callTestMethod
    method()
  File "/home/odoo/Documents/dev/odoo/addons/stock_account/tests/test_stockvaluation.py", line 3903, in test_forecast_report_value
    report_value_1 = report_for_company_1._get_report_values(docids=self.product1.ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 69, in _get_report_values
    'docs': self._get_report_data(product_variant_ids=docids),
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 106, in _get_report_data
    res['lines'] = self._get_report_lines(product_template_ids, product_variant_ids, wh_location_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 171, in _get_report_lines
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND ((("stock_move"."location_id" not in %s) OR "stock_move"."location_id" IS NULL) AND ("stock_move"."location_dest_id" in %s))) AND ("stock_move"."state" in %s))' with params: [(1122,), '0.00', (612, 613), (612, 613), ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/usr/lib/python3.10/unittest/case.py", line 549, in _callTestMethod
    method()
  File "/home/odoo/Documents/dev/odoo/addons/stock_account/tests/test_stockvaluation.py", line 3904, in test_forecast_report_value
    report_value_2 = report_for_company_2._get_report_values(docids=self.product1.ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 69, in _get_report_values
    'docs': self._get_report_data(product_variant_ids=docids),
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 106, in _get_report_data
    res['lines'] = self._get_report_lines(product_template_ids, product_variant_ids, wh_location_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 161, in _get_report_lines
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in %s) AND (("stock_move"."location_dest_id" not in %s) OR "stock_move"."location_dest_id" IS NULL))) AND ("stock_move"."state" in %s))' with params: [(1122,), '0.00', (624, 625), (624, 625), ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/usr/lib/python3.10/unittest/case.py", line 549, in _callTestMethod
    method()
  File "/home/odoo/Documents/dev/odoo/addons/stock_account/tests/test_stockvaluation.py", line 3904, in test_forecast_report_value
    report_value_2 = report_for_company_2._get_report_values(docids=self.product1.ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 69, in _get_report_values
    'docs': self._get_report_data(product_variant_ids=docids),
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 106, in _get_report_data
    res['lines'] = self._get_report_lines(product_template_ids, product_variant_ids, wh_location_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 162, in _get_report_lines
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in %s) AND (("stock_move"."location_dest_id" not in %s) OR "stock_move"."location_dest_id" IS NULL))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(1122,), '0.00', (624, 625), (624, 625), ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/usr/lib/python3.10/unittest/case.py", line 549, in _callTestMethod
    method()
  File "/home/odoo/Documents/dev/odoo/addons/stock_account/tests/test_stockvaluation.py", line 3904, in test_forecast_report_value
    report_value_2 = report_for_company_2._get_report_values(docids=self.product1.ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 69, in _get_report_values
    'docs': self._get_report_data(product_variant_ids=docids),
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 106, in _get_report_data
    res['lines'] = self._get_report_lines(product_template_ids, product_variant_ids, wh_location_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 171, in _get_report_lines
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND ((("stock_move"."location_id" not in %s) OR "stock_move"."location_id" IS NULL) AND ("stock_move"."location_dest_id" in %s))) AND ("stock_move"."state" in %s))' with params: [(1122,), '0.00', (624, 625), (624, 625), ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(1135,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(1135,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(1135,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(1135,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(1135,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(1135,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(1135,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(1135,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(1135,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(1135,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(1135,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(1135,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(1135,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(1135,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(1135,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(1135,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(1135,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(1135,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(1135,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(1135,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(1135,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(1135,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(1135,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(1135,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(1135,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(1135,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(1135,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(1135,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(1135,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(1135,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(1135,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(1135,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(1135,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(1135,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(1135,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(1135,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(1135,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(1135,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(1135,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(1135,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(1135,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(1135,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(1135,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(1135,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(1135,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(1135,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(1135,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(1135,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(1135,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(1135,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(1135,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(1135,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(1135,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(1135,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(1135,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(1135,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(1135,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(1135,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(1135,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(1135,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(1135,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(1135,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(1135,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(1135,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(1135,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(1135,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(1135,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(1135,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(1135,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(1135,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(1135,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(1135,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(1135,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(1135,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(1135,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(1135,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(1135,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(1135,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(1135,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(1135,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(1135,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(1135,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(1135,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(1135,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(1135,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(1135,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(1135,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(1135,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(1135,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(1135,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(1135,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(1135,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(1135,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(1135,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(1135,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(1135,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(1135,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(1135,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(1135,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(1135,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(1135,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(1135,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(1135,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(1135,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(1135,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(1135,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(1135,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(1135,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(1135,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(1135,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(1135,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(1135,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(1135,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(1135,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(1135,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(1135,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(1135,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(1135,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(1135,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(1135,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(1135,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(1135,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(1135,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(1135,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(1135,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(1135,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/enterprise/mail_mobile/models/mail_thread.py", line 25, in _notify_thread
    recipients_data = super(MailThread, self)._notify_thread(message, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (246,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 438, in _send
    mail._postprocess_sent_message(success_pids=success_pids, failure_type=failure_type)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 175, in _postprocess_sent_message
    notifications = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (246,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/enterprise/mail_mobile/models/mail_thread.py", line 25, in _notify_thread
    recipients_data = super(MailThread, self)._notify_thread(message, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (247,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 438, in _send
    mail._postprocess_sent_message(success_pids=success_pids, failure_type=failure_type)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 175, in _postprocess_sent_message
    notifications = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (247,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/enterprise/mail_mobile/models/mail_thread.py", line 25, in _notify_thread
    recipients_data = super(MailThread, self)._notify_thread(message, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (248,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 438, in _send
    mail._postprocess_sent_message(success_pids=success_pids, failure_type=failure_type)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 175, in _postprocess_sent_message
    notifications = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (248,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/enterprise/mail_mobile/models/mail_thread.py", line 25, in _notify_thread
    recipients_data = super(MailThread, self)._notify_thread(message, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (249,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 438, in _send
    mail._postprocess_sent_message(success_pids=success_pids, failure_type=failure_type)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 175, in _postprocess_sent_message
    notifications = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (249,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/enterprise/mail_mobile/models/mail_thread.py", line 25, in _notify_thread
    recipients_data = super(MailThread, self)._notify_thread(message, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (250,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 438, in _send
    mail._postprocess_sent_message(success_pids=success_pids, failure_type=failure_type)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 175, in _postprocess_sent_message
    notifications = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (250,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/enterprise/mail_mobile/models/mail_thread.py", line 25, in _notify_thread
    recipients_data = super(MailThread, self)._notify_thread(message, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (251,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 438, in _send
    mail._postprocess_sent_message(success_pids=success_pids, failure_type=failure_type)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 175, in _postprocess_sent_message
    notifications = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (251,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/enterprise/mail_mobile/models/mail_thread.py", line 25, in _notify_thread
    recipients_data = super(MailThread, self)._notify_thread(message, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (252,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 438, in _send
    mail._postprocess_sent_message(success_pids=success_pids, failure_type=failure_type)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 175, in _postprocess_sent_message
    notifications = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (252,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/enterprise/mail_mobile/models/mail_thread.py", line 25, in _notify_thread
    recipients_data = super(MailThread, self)._notify_thread(message, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (253,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 438, in _send
    mail._postprocess_sent_message(success_pids=success_pids, failure_type=failure_type)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 175, in _postprocess_sent_message
    notifications = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (253,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/enterprise/mail_mobile/models/mail_thread.py", line 25, in _notify_thread
    recipients_data = super(MailThread, self)._notify_thread(message, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (254,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 438, in _send
    mail._postprocess_sent_message(success_pids=success_pids, failure_type=failure_type)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 175, in _postprocess_sent_message
    notifications = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (254,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/enterprise/mail_mobile/models/mail_thread.py", line 25, in _notify_thread
    recipients_data = super(MailThread, self)._notify_thread(message, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (255,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 438, in _send
    mail._postprocess_sent_message(success_pids=success_pids, failure_type=failure_type)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 175, in _postprocess_sent_message
    notifications = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (255,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/enterprise/mail_mobile/models/mail_thread.py", line 25, in _notify_thread
    recipients_data = super(MailThread, self)._notify_thread(message, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (256,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 438, in _send
    mail._postprocess_sent_message(success_pids=success_pids, failure_type=failure_type)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 175, in _postprocess_sent_message
    notifications = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (256,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/enterprise/mail_mobile/models/mail_thread.py", line 25, in _notify_thread
    recipients_data = super(MailThread, self)._notify_thread(message, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (257,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 438, in _send
    mail._postprocess_sent_message(success_pids=success_pids, failure_type=failure_type)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 175, in _postprocess_sent_message
    notifications = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (257,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/enterprise/mail_mobile/models/mail_thread.py", line 25, in _notify_thread
    recipients_data = super(MailThread, self)._notify_thread(message, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (258,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 438, in _send
    mail._postprocess_sent_message(success_pids=success_pids, failure_type=failure_type)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 175, in _postprocess_sent_message
    notifications = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (258,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/enterprise/mail_mobile/models/mail_thread.py", line 25, in _notify_thread
    recipients_data = super(MailThread, self)._notify_thread(message, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (259,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 438, in _send
    mail._postprocess_sent_message(success_pids=success_pids, failure_type=failure_type)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 175, in _postprocess_sent_message
    notifications = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (259,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/enterprise/mail_mobile/models/mail_thread.py", line 25, in _notify_thread
    recipients_data = super(MailThread, self)._notify_thread(message, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (260,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 438, in _send
    mail._postprocess_sent_message(success_pids=success_pids, failure_type=failure_type)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 175, in _postprocess_sent_message
    notifications = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (260,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/enterprise/mail_mobile/models/mail_thread.py", line 25, in _notify_thread
    recipients_data = super(MailThread, self)._notify_thread(message, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (261,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 438, in _send
    mail._postprocess_sent_message(success_pids=success_pids, failure_type=failure_type)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 175, in _postprocess_sent_message
    notifications = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (261,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/enterprise/mail_mobile/models/mail_thread.py", line 25, in _notify_thread
    recipients_data = super(MailThread, self)._notify_thread(message, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (262,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 438, in _send
    mail._postprocess_sent_message(success_pids=success_pids, failure_type=failure_type)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 175, in _postprocess_sent_message
    notifications = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (262,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/enterprise/mail_mobile/models/mail_thread.py", line 25, in _notify_thread
    recipients_data = super(MailThread, self)._notify_thread(message, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (263,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 438, in _send
    mail._postprocess_sent_message(success_pids=success_pids, failure_type=failure_type)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 175, in _postprocess_sent_message
    notifications = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (263,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/auth_signup/models/res_users.py", line 243, in create
    users_with_email.with_context(create_user=True).action_reset_password()
  File "/home/odoo/Documents/dev/odoo/addons/auth_signup/models/res_users.py", line 202, in action_reset_password
    template.send_mail(user.id, force_send=force_send, raise_exception=True, email_values=email_values)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_template.py", line 337, in send_mail
    mail.send(raise_exception=raise_exception)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (264,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/auth_signup/models/res_users.py", line 243, in create
    users_with_email.with_context(create_user=True).action_reset_password()
  File "/home/odoo/Documents/dev/odoo/addons/auth_signup/models/res_users.py", line 202, in action_reset_password
    template.send_mail(user.id, force_send=force_send, raise_exception=True, email_values=email_values)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_template.py", line 337, in send_mail
    mail.send(raise_exception=raise_exception)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (265,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/auth_signup/models/res_users.py", line 243, in create
    users_with_email.with_context(create_user=True).action_reset_password()
  File "/home/odoo/Documents/dev/odoo/addons/auth_signup/models/res_users.py", line 202, in action_reset_password
    template.send_mail(user.id, force_send=force_send, raise_exception=True, email_values=email_values)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_template.py", line 337, in send_mail
    mail.send(raise_exception=raise_exception)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (266,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/auth_signup/models/res_users.py", line 243, in create
    users_with_email.with_context(create_user=True).action_reset_password()
  File "/home/odoo/Documents/dev/odoo/addons/auth_signup/models/res_users.py", line 202, in action_reset_password
    template.send_mail(user.id, force_send=force_send, raise_exception=True, email_values=email_values)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_template.py", line 337, in send_mail
    mail.send(raise_exception=raise_exception)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (267,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/purchase_stock/tests/test_purchase_stock_report.py", line 203, in test_approval_and_forecasted_qty
    docs = self.get_report_forecast(product_template_ids=self.product_template.ids)[1]
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 35, in get_report_forecast
    report_values = report._get_report_values(docids=product_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 246, in _get_report_values
    'docs': self._get_report_data(product_template_ids=docids),
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 106, in _get_report_data
    res['lines'] = self._get_report_lines(product_template_ids, product_variant_ids, wh_location_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 161, in _get_report_lines
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in (SELECT "product_product".id FROM "product_product" WHERE ("product_product"."product_tmpl_id" in %s))) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in %s) AND (("stock_move"."location_dest_id" not in %s) OR "stock_move"."location_dest_id" IS NULL))) AND ("stock_move"."state" in %s))' with params: [(981,), '0.00', (7, 19, 20, 21, 22, 8, 18, 17, 33), (7, 19, 20, 21, 22, 8, 18, 17, 33), ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/purchase_stock/tests/test_purchase_stock_report.py", line 203, in test_approval_and_forecasted_qty
    docs = self.get_report_forecast(product_template_ids=self.product_template.ids)[1]
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 35, in get_report_forecast
    report_values = report._get_report_values(docids=product_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 246, in _get_report_values
    'docs': self._get_report_data(product_template_ids=docids),
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 106, in _get_report_data
    res['lines'] = self._get_report_lines(product_template_ids, product_variant_ids, wh_location_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 162, in _get_report_lines
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in (SELECT "product_product".id FROM "product_product" WHERE ("product_product"."product_tmpl_id" in %s))) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in %s) AND (("stock_move"."location_dest_id" not in %s) OR "stock_move"."location_dest_id" IS NULL))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(981,), '0.00', (7, 19, 20, 21, 22, 8, 18, 17, 33), (7, 19, 20, 21, 22, 8, 18, 17, 33), ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/purchase_stock/tests/test_purchase_stock_report.py", line 203, in test_approval_and_forecasted_qty
    docs = self.get_report_forecast(product_template_ids=self.product_template.ids)[1]
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 35, in get_report_forecast
    report_values = report._get_report_values(docids=product_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 246, in _get_report_values
    'docs': self._get_report_data(product_template_ids=docids),
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 106, in _get_report_data
    res['lines'] = self._get_report_lines(product_template_ids, product_variant_ids, wh_location_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 171, in _get_report_lines
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in (SELECT "product_product".id FROM "product_product" WHERE ("product_product"."product_tmpl_id" in %s))) AND ("stock_move"."product_uom_qty" != %s)) AND ((("stock_move"."location_id" not in %s) OR "stock_move"."location_id" IS NULL) AND ("stock_move"."location_dest_id" in %s))) AND ("stock_move"."state" in %s))' with params: [(981,), '0.00', (7, 19, 20, 21, 22, 8, 18, 17, 33), (7, 19, 20, 21, 22, 8, 18, 17, 33), ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/purchase_stock/tests/test_purchase_stock_report.py", line 21, in test_report_forecast_1_purchase_order_multi_receipt
    report_values, docs, lines = self.get_report_forecast(product_template_ids=self.product_template.ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 35, in get_report_forecast
    report_values = report._get_report_values(docids=product_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 246, in _get_report_values
    'docs': self._get_report_data(product_template_ids=docids),
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 106, in _get_report_data
    res['lines'] = self._get_report_lines(product_template_ids, product_variant_ids, wh_location_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 161, in _get_report_lines
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in (SELECT "product_product".id FROM "product_product" WHERE ("product_product"."product_tmpl_id" in %s))) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in %s) AND (("stock_move"."location_dest_id" not in %s) OR "stock_move"."location_dest_id" IS NULL))) AND ("stock_move"."state" in %s))' with params: [(981,), '0.00', (7, 19, 20, 21, 22, 8, 18, 17, 33), (7, 19, 20, 21, 22, 8, 18, 17, 33), ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/purchase_stock/tests/test_purchase_stock_report.py", line 21, in test_report_forecast_1_purchase_order_multi_receipt
    report_values, docs, lines = self.get_report_forecast(product_template_ids=self.product_template.ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 35, in get_report_forecast
    report_values = report._get_report_values(docids=product_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 246, in _get_report_values
    'docs': self._get_report_data(product_template_ids=docids),
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 106, in _get_report_data
    res['lines'] = self._get_report_lines(product_template_ids, product_variant_ids, wh_location_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 162, in _get_report_lines
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in (SELECT "product_product".id FROM "product_product" WHERE ("product_product"."product_tmpl_id" in %s))) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in %s) AND (("stock_move"."location_dest_id" not in %s) OR "stock_move"."location_dest_id" IS NULL))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(981,), '0.00', (7, 19, 20, 21, 22, 8, 18, 17, 33), (7, 19, 20, 21, 22, 8, 18, 17, 33), ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/purchase_stock/tests/test_purchase_stock_report.py", line 21, in test_report_forecast_1_purchase_order_multi_receipt
    report_values, docs, lines = self.get_report_forecast(product_template_ids=self.product_template.ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 35, in get_report_forecast
    report_values = report._get_report_values(docids=product_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 246, in _get_report_values
    'docs': self._get_report_data(product_template_ids=docids),
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 106, in _get_report_data
    res['lines'] = self._get_report_lines(product_template_ids, product_variant_ids, wh_location_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 171, in _get_report_lines
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in (SELECT "product_product".id FROM "product_product" WHERE ("product_product"."product_tmpl_id" in %s))) AND ("stock_move"."product_uom_qty" != %s)) AND ((("stock_move"."location_id" not in %s) OR "stock_move"."location_id" IS NULL) AND ("stock_move"."location_dest_id" in %s))) AND ("stock_move"."state" in %s))' with params: [(981,), '0.00', (7, 19, 20, 21, 22, 8, 18, 17, 33), (7, 19, 20, 21, 22, 8, 18, 17, 33), ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/purchase_stock/tests/test_purchase_stock_report.py", line 32, in test_report_forecast_1_purchase_order_multi_receipt
    report_values, docs, lines = self.get_report_forecast(product_template_ids=self.product_template.ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 35, in get_report_forecast
    report_values = report._get_report_values(docids=product_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 246, in _get_report_values
    'docs': self._get_report_data(product_template_ids=docids),
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 106, in _get_report_data
    res['lines'] = self._get_report_lines(product_template_ids, product_variant_ids, wh_location_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 161, in _get_report_lines
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in (SELECT "product_product".id FROM "product_product" WHERE ("product_product"."product_tmpl_id" in %s))) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in %s) AND (("stock_move"."location_dest_id" not in %s) OR "stock_move"."location_dest_id" IS NULL))) AND ("stock_move"."state" in %s))' with params: [(981,), '0.00', (7, 19, 20, 21, 22, 8, 18, 17, 33), (7, 19, 20, 21, 22, 8, 18, 17, 33), ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/purchase_stock/tests/test_purchase_stock_report.py", line 32, in test_report_forecast_1_purchase_order_multi_receipt
    report_values, docs, lines = self.get_report_forecast(product_template_ids=self.product_template.ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 35, in get_report_forecast
    report_values = report._get_report_values(docids=product_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 246, in _get_report_values
    'docs': self._get_report_data(product_template_ids=docids),
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 106, in _get_report_data
    res['lines'] = self._get_report_lines(product_template_ids, product_variant_ids, wh_location_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 162, in _get_report_lines
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in (SELECT "product_product".id FROM "product_product" WHERE ("product_product"."product_tmpl_id" in %s))) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in %s) AND (("stock_move"."location_dest_id" not in %s) OR "stock_move"."location_dest_id" IS NULL))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(981,), '0.00', (7, 19, 20, 21, 22, 8, 18, 17, 33), (7, 19, 20, 21, 22, 8, 18, 17, 33), ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/purchase_stock/tests/test_purchase_stock_report.py", line 32, in test_report_forecast_1_purchase_order_multi_receipt
    report_values, docs, lines = self.get_report_forecast(product_template_ids=self.product_template.ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 35, in get_report_forecast
    report_values = report._get_report_values(docids=product_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 246, in _get_report_values
    'docs': self._get_report_data(product_template_ids=docids),
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 106, in _get_report_data
    res['lines'] = self._get_report_lines(product_template_ids, product_variant_ids, wh_location_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 171, in _get_report_lines
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in (SELECT "product_product".id FROM "product_product" WHERE ("product_product"."product_tmpl_id" in %s))) AND ("stock_move"."product_uom_qty" != %s)) AND ((("stock_move"."location_id" not in %s) OR "stock_move"."location_id" IS NULL) AND ("stock_move"."location_dest_id" in %s))) AND ("stock_move"."state" in %s))' with params: [(981,), '0.00', (7, 19, 20, 21, 22, 8, 18, 17, 33), (7, 19, 20, 21, 22, 8, 18, 17, 33), ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/purchase_stock/tests/test_purchase_stock_report.py", line 49, in test_report_forecast_1_purchase_order_multi_receipt
    report_values, docs, lines = self.get_report_forecast(product_template_ids=self.product_template.ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 35, in get_report_forecast
    report_values = report._get_report_values(docids=product_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 246, in _get_report_values
    'docs': self._get_report_data(product_template_ids=docids),
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 106, in _get_report_data
    res['lines'] = self._get_report_lines(product_template_ids, product_variant_ids, wh_location_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 161, in _get_report_lines
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in (SELECT "product_product".id FROM "product_product" WHERE ("product_product"."product_tmpl_id" in %s))) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in %s) AND (("stock_move"."location_dest_id" not in %s) OR "stock_move"."location_dest_id" IS NULL))) AND ("stock_move"."state" in %s))' with params: [(981,), '0.00', (7, 19, 20, 21, 22, 8, 18, 17, 33), (7, 19, 20, 21, 22, 8, 18, 17, 33), ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/purchase_stock/tests/test_purchase_stock_report.py", line 49, in test_report_forecast_1_purchase_order_multi_receipt
    report_values, docs, lines = self.get_report_forecast(product_template_ids=self.product_template.ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 35, in get_report_forecast
    report_values = report._get_report_values(docids=product_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 246, in _get_report_values
    'docs': self._get_report_data(product_template_ids=docids),
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 106, in _get_report_data
    res['lines'] = self._get_report_lines(product_template_ids, product_variant_ids, wh_location_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 162, in _get_report_lines
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in (SELECT "product_product".id FROM "product_product" WHERE ("product_product"."product_tmpl_id" in %s))) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in %s) AND (("stock_move"."location_dest_id" not in %s) OR "stock_move"."location_dest_id" IS NULL))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(981,), '0.00', (7, 19, 20, 21, 22, 8, 18, 17, 33), (7, 19, 20, 21, 22, 8, 18, 17, 33), ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/purchase_stock/tests/test_purchase_stock_report.py", line 49, in test_report_forecast_1_purchase_order_multi_receipt
    report_values, docs, lines = self.get_report_forecast(product_template_ids=self.product_template.ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 35, in get_report_forecast
    report_values = report._get_report_values(docids=product_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 246, in _get_report_values
    'docs': self._get_report_data(product_template_ids=docids),
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 106, in _get_report_data
    res['lines'] = self._get_report_lines(product_template_ids, product_variant_ids, wh_location_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 171, in _get_report_lines
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in (SELECT "product_product".id FROM "product_product" WHERE ("product_product"."product_tmpl_id" in %s))) AND ("stock_move"."product_uom_qty" != %s)) AND ((("stock_move"."location_id" not in %s) OR "stock_move"."location_id" IS NULL) AND ("stock_move"."location_dest_id" in %s))) AND ("stock_move"."state" in %s))' with params: [(981,), '0.00', (7, 19, 20, 21, 22, 8, 18, 17, 33), (7, 19, 20, 21, 22, 8, 18, 17, 33), ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/purchase_stock/tests/test_purchase_stock_report.py", line 64, in test_report_forecast_1_purchase_order_multi_receipt
    report_values, docs, lines = self.get_report_forecast(product_template_ids=self.product_template.ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 35, in get_report_forecast
    report_values = report._get_report_values(docids=product_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 246, in _get_report_values
    'docs': self._get_report_data(product_template_ids=docids),
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 106, in _get_report_data
    res['lines'] = self._get_report_lines(product_template_ids, product_variant_ids, wh_location_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 161, in _get_report_lines
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in (SELECT "product_product".id FROM "product_product" WHERE ("product_product"."product_tmpl_id" in %s))) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in %s) AND (("stock_move"."location_dest_id" not in %s) OR "stock_move"."location_dest_id" IS NULL))) AND ("stock_move"."state" in %s))' with params: [(981,), '0.00', (7, 19, 20, 21, 22, 8, 18, 17, 33), (7, 19, 20, 21, 22, 8, 18, 17, 33), ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/purchase_stock/tests/test_purchase_stock_report.py", line 64, in test_report_forecast_1_purchase_order_multi_receipt
    report_values, docs, lines = self.get_report_forecast(product_template_ids=self.product_template.ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 35, in get_report_forecast
    report_values = report._get_report_values(docids=product_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 246, in _get_report_values
    'docs': self._get_report_data(product_template_ids=docids),
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 106, in _get_report_data
    res['lines'] = self._get_report_lines(product_template_ids, product_variant_ids, wh_location_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 162, in _get_report_lines
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in (SELECT "product_product".id FROM "product_product" WHERE ("product_product"."product_tmpl_id" in %s))) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in %s) AND (("stock_move"."location_dest_id" not in %s) OR "stock_move"."location_dest_id" IS NULL))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(981,), '0.00', (7, 19, 20, 21, 22, 8, 18, 17, 33), (7, 19, 20, 21, 22, 8, 18, 17, 33), ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/purchase_stock/tests/test_purchase_stock_report.py", line 64, in test_report_forecast_1_purchase_order_multi_receipt
    report_values, docs, lines = self.get_report_forecast(product_template_ids=self.product_template.ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 35, in get_report_forecast
    report_values = report._get_report_values(docids=product_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 246, in _get_report_values
    'docs': self._get_report_data(product_template_ids=docids),
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 106, in _get_report_data
    res['lines'] = self._get_report_lines(product_template_ids, product_variant_ids, wh_location_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 171, in _get_report_lines
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in (SELECT "product_product".id FROM "product_product" WHERE ("product_product"."product_tmpl_id" in %s))) AND ("stock_move"."product_uom_qty" != %s)) AND ((("stock_move"."location_id" not in %s) OR "stock_move"."location_id" IS NULL) AND ("stock_move"."location_dest_id" in %s))) AND ("stock_move"."state" in %s))' with params: [(981,), '0.00', (7, 19, 20, 21, 22, 8, 18, 17, 33), (7, 19, 20, 21, 22, 8, 18, 17, 33), ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/purchase_stock/tests/test_purchase_stock_report.py", line 95, in test_report_forecast_2_purchase_order_three_step_receipt
    report_values, docs, lines = self.get_report_forecast(product_template_ids=self.product_template.ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 35, in get_report_forecast
    report_values = report._get_report_values(docids=product_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 246, in _get_report_values
    'docs': self._get_report_data(product_template_ids=docids),
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 106, in _get_report_data
    res['lines'] = self._get_report_lines(product_template_ids, product_variant_ids, wh_location_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 161, in _get_report_lines
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in (SELECT "product_product".id FROM "product_product" WHERE ("product_product"."product_tmpl_id" in %s))) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in %s) AND (("stock_move"."location_dest_id" not in %s) OR "stock_move"."location_dest_id" IS NULL))) AND ("stock_move"."state" in %s))' with params: [(981,), '0.00', (7, 9, 19, 20, 21, 22, 10, 8, 18, 17, 33), (7, 9, 19, 20, 21, 22, 10, 8, 18, 17, 33), ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/purchase_stock/tests/test_purchase_stock_report.py", line 95, in test_report_forecast_2_purchase_order_three_step_receipt
    report_values, docs, lines = self.get_report_forecast(product_template_ids=self.product_template.ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 35, in get_report_forecast
    report_values = report._get_report_values(docids=product_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 246, in _get_report_values
    'docs': self._get_report_data(product_template_ids=docids),
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 106, in _get_report_data
    res['lines'] = self._get_report_lines(product_template_ids, product_variant_ids, wh_location_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 162, in _get_report_lines
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in (SELECT "product_product".id FROM "product_product" WHERE ("product_product"."product_tmpl_id" in %s))) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in %s) AND (("stock_move"."location_dest_id" not in %s) OR "stock_move"."location_dest_id" IS NULL))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(981,), '0.00', (7, 9, 19, 20, 21, 22, 10, 8, 18, 17, 33), (7, 9, 19, 20, 21, 22, 10, 8, 18, 17, 33), ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/purchase_stock/tests/test_purchase_stock_report.py", line 95, in test_report_forecast_2_purchase_order_three_step_receipt
    report_values, docs, lines = self.get_report_forecast(product_template_ids=self.product_template.ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 35, in get_report_forecast
    report_values = report._get_report_values(docids=product_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 246, in _get_report_values
    'docs': self._get_report_data(product_template_ids=docids),
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 106, in _get_report_data
    res['lines'] = self._get_report_lines(product_template_ids, product_variant_ids, wh_location_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 171, in _get_report_lines
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in (SELECT "product_product".id FROM "product_product" WHERE ("product_product"."product_tmpl_id" in %s))) AND ("stock_move"."product_uom_qty" != %s)) AND ((("stock_move"."location_id" not in %s) OR "stock_move"."location_id" IS NULL) AND ("stock_move"."location_dest_id" in %s))) AND ("stock_move"."state" in %s))' with params: [(981,), '0.00', (7, 9, 19, 20, 21, 22, 10, 8, 18, 17, 33), (7, 9, 19, 20, 21, 22, 10, 8, 18, 17, 33), ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/purchase_stock/tests/test_purchase_stock_report.py", line 106, in test_report_forecast_2_purchase_order_three_step_receipt
    report_values, docs, lines = self.get_report_forecast(product_template_ids=self.product_template.ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 35, in get_report_forecast
    report_values = report._get_report_values(docids=product_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 246, in _get_report_values
    'docs': self._get_report_data(product_template_ids=docids),
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 106, in _get_report_data
    res['lines'] = self._get_report_lines(product_template_ids, product_variant_ids, wh_location_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 161, in _get_report_lines
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in (SELECT "product_product".id FROM "product_product" WHERE ("product_product"."product_tmpl_id" in %s))) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in %s) AND (("stock_move"."location_dest_id" not in %s) OR "stock_move"."location_dest_id" IS NULL))) AND ("stock_move"."state" in %s))' with params: [(981,), '0.00', (7, 9, 19, 20, 21, 22, 10, 8, 18, 17, 33), (7, 9, 19, 20, 21, 22, 10, 8, 18, 17, 33), ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/purchase_stock/tests/test_purchase_stock_report.py", line 106, in test_report_forecast_2_purchase_order_three_step_receipt
    report_values, docs, lines = self.get_report_forecast(product_template_ids=self.product_template.ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 35, in get_report_forecast
    report_values = report._get_report_values(docids=product_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 246, in _get_report_values
    'docs': self._get_report_data(product_template_ids=docids),
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 106, in _get_report_data
    res['lines'] = self._get_report_lines(product_template_ids, product_variant_ids, wh_location_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 162, in _get_report_lines
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in (SELECT "product_product".id FROM "product_product" WHERE ("product_product"."product_tmpl_id" in %s))) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in %s) AND (("stock_move"."location_dest_id" not in %s) OR "stock_move"."location_dest_id" IS NULL))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(981,), '0.00', (7, 9, 19, 20, 21, 22, 10, 8, 18, 17, 33), (7, 9, 19, 20, 21, 22, 10, 8, 18, 17, 33), ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/purchase_stock/tests/test_purchase_stock_report.py", line 106, in test_report_forecast_2_purchase_order_three_step_receipt
    report_values, docs, lines = self.get_report_forecast(product_template_ids=self.product_template.ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 35, in get_report_forecast
    report_values = report._get_report_values(docids=product_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 246, in _get_report_values
    'docs': self._get_report_data(product_template_ids=docids),
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 106, in _get_report_data
    res['lines'] = self._get_report_lines(product_template_ids, product_variant_ids, wh_location_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 171, in _get_report_lines
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in (SELECT "product_product".id FROM "product_product" WHERE ("product_product"."product_tmpl_id" in %s))) AND ("stock_move"."product_uom_qty" != %s)) AND ((("stock_move"."location_id" not in %s) OR "stock_move"."location_id" IS NULL) AND ("stock_move"."location_dest_id" in %s))) AND ("stock_move"."state" in %s))' with params: [(981,), '0.00', (7, 9, 19, 20, 21, 22, 10, 8, 18, 17, 33), (7, 9, 19, 20, 21, 22, 10, 8, 18, 17, 33), ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/purchase_stock/tests/test_purchase_stock_report.py", line 124, in test_report_forecast_2_purchase_order_three_step_receipt
    report_values, docs, lines = self.get_report_forecast(product_template_ids=self.product_template.ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 35, in get_report_forecast
    report_values = report._get_report_values(docids=product_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 246, in _get_report_values
    'docs': self._get_report_data(product_template_ids=docids),
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 106, in _get_report_data
    res['lines'] = self._get_report_lines(product_template_ids, product_variant_ids, wh_location_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 161, in _get_report_lines
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in (SELECT "product_product".id FROM "product_product" WHERE ("product_product"."product_tmpl_id" in %s))) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in %s) AND (("stock_move"."location_dest_id" not in %s) OR "stock_move"."location_dest_id" IS NULL))) AND ("stock_move"."state" in %s))' with params: [(981,), '0.00', (7, 9, 19, 20, 21, 22, 10, 8, 18, 17, 33), (7, 9, 19, 20, 21, 22, 10, 8, 18, 17, 33), ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/purchase_stock/tests/test_purchase_stock_report.py", line 124, in test_report_forecast_2_purchase_order_three_step_receipt
    report_values, docs, lines = self.get_report_forecast(product_template_ids=self.product_template.ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 35, in get_report_forecast
    report_values = report._get_report_values(docids=product_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 246, in _get_report_values
    'docs': self._get_report_data(product_template_ids=docids),
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 106, in _get_report_data
    res['lines'] = self._get_report_lines(product_template_ids, product_variant_ids, wh_location_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 162, in _get_report_lines
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in (SELECT "product_product".id FROM "product_product" WHERE ("product_product"."product_tmpl_id" in %s))) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in %s) AND (("stock_move"."location_dest_id" not in %s) OR "stock_move"."location_dest_id" IS NULL))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(981,), '0.00', (7, 9, 19, 20, 21, 22, 10, 8, 18, 17, 33), (7, 9, 19, 20, 21, 22, 10, 8, 18, 17, 33), ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/purchase_stock/tests/test_purchase_stock_report.py", line 124, in test_report_forecast_2_purchase_order_three_step_receipt
    report_values, docs, lines = self.get_report_forecast(product_template_ids=self.product_template.ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 35, in get_report_forecast
    report_values = report._get_report_values(docids=product_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 246, in _get_report_values
    'docs': self._get_report_data(product_template_ids=docids),
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 106, in _get_report_data
    res['lines'] = self._get_report_lines(product_template_ids, product_variant_ids, wh_location_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 171, in _get_report_lines
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in (SELECT "product_product".id FROM "product_product" WHERE ("product_product"."product_tmpl_id" in %s))) AND ("stock_move"."product_uom_qty" != %s)) AND ((("stock_move"."location_id" not in %s) OR "stock_move"."location_id" IS NULL) AND ("stock_move"."location_dest_id" in %s))) AND ("stock_move"."state" in %s))' with params: [(981,), '0.00', (7, 9, 19, 20, 21, 22, 10, 8, 18, 17, 33), (7, 9, 19, 20, 21, 22, 10, 8, 18, 17, 33), ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/purchase_stock/tests/test_purchase_stock_report.py", line 139, in test_report_forecast_2_purchase_order_three_step_receipt
    report_values, docs, lines = self.get_report_forecast(product_template_ids=self.product_template.ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 35, in get_report_forecast
    report_values = report._get_report_values(docids=product_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 246, in _get_report_values
    'docs': self._get_report_data(product_template_ids=docids),
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 106, in _get_report_data
    res['lines'] = self._get_report_lines(product_template_ids, product_variant_ids, wh_location_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 161, in _get_report_lines
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in (SELECT "product_product".id FROM "product_product" WHERE ("product_product"."product_tmpl_id" in %s))) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in %s) AND (("stock_move"."location_dest_id" not in %s) OR "stock_move"."location_dest_id" IS NULL))) AND ("stock_move"."state" in %s))' with params: [(981,), '0.00', (7, 9, 19, 20, 21, 22, 10, 8, 18, 17, 33), (7, 9, 19, 20, 21, 22, 10, 8, 18, 17, 33), ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/purchase_stock/tests/test_purchase_stock_report.py", line 139, in test_report_forecast_2_purchase_order_three_step_receipt
    report_values, docs, lines = self.get_report_forecast(product_template_ids=self.product_template.ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 35, in get_report_forecast
    report_values = report._get_report_values(docids=product_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 246, in _get_report_values
    'docs': self._get_report_data(product_template_ids=docids),
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 106, in _get_report_data
    res['lines'] = self._get_report_lines(product_template_ids, product_variant_ids, wh_location_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 162, in _get_report_lines
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in (SELECT "product_product".id FROM "product_product" WHERE ("product_product"."product_tmpl_id" in %s))) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in %s) AND (("stock_move"."location_dest_id" not in %s) OR "stock_move"."location_dest_id" IS NULL))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(981,), '0.00', (7, 9, 19, 20, 21, 22, 10, 8, 18, 17, 33), (7, 9, 19, 20, 21, 22, 10, 8, 18, 17, 33), ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/purchase_stock/tests/test_purchase_stock_report.py", line 139, in test_report_forecast_2_purchase_order_three_step_receipt
    report_values, docs, lines = self.get_report_forecast(product_template_ids=self.product_template.ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 35, in get_report_forecast
    report_values = report._get_report_values(docids=product_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 246, in _get_report_values
    'docs': self._get_report_data(product_template_ids=docids),
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 106, in _get_report_data
    res['lines'] = self._get_report_lines(product_template_ids, product_variant_ids, wh_location_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 171, in _get_report_lines
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in (SELECT "product_product".id FROM "product_product" WHERE ("product_product"."product_tmpl_id" in %s))) AND ("stock_move"."product_uom_qty" != %s)) AND ((("stock_move"."location_id" not in %s) OR "stock_move"."location_id" IS NULL) AND ("stock_move"."location_dest_id" in %s))) AND ("stock_move"."state" in %s))' with params: [(981,), '0.00', (7, 9, 19, 20, 21, 22, 10, 8, 18, 17, 33), (7, 9, 19, 20, 21, 22, 10, 8, 18, 17, 33), ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/purchase_stock/tests/test_purchase_stock_report.py", line 167, in test_report_forecast_3_report_line_corresponding_to_po_line_highlighted
    _, _, lines = self.get_report_forecast(product_template_ids=self.product_template.ids, context=context)
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 35, in get_report_forecast
    report_values = report._get_report_values(docids=product_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 246, in _get_report_values
    'docs': self._get_report_data(product_template_ids=docids),
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 106, in _get_report_data
    res['lines'] = self._get_report_lines(product_template_ids, product_variant_ids, wh_location_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 161, in _get_report_lines
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in (SELECT "product_product".id FROM "product_product" WHERE ("product_product"."product_tmpl_id" in %s))) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in %s) AND (("stock_move"."location_dest_id" not in %s) OR "stock_move"."location_dest_id" IS NULL))) AND ("stock_move"."state" in %s))' with params: [(981,), '0.00', (7, 19, 20, 21, 22, 8, 18, 17, 33), (7, 19, 20, 21, 22, 8, 18, 17, 33), ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/purchase_stock/tests/test_purchase_stock_report.py", line 167, in test_report_forecast_3_report_line_corresponding_to_po_line_highlighted
    _, _, lines = self.get_report_forecast(product_template_ids=self.product_template.ids, context=context)
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 35, in get_report_forecast
    report_values = report._get_report_values(docids=product_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 246, in _get_report_values
    'docs': self._get_report_data(product_template_ids=docids),
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 106, in _get_report_data
    res['lines'] = self._get_report_lines(product_template_ids, product_variant_ids, wh_location_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 162, in _get_report_lines
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in (SELECT "product_product".id FROM "product_product" WHERE ("product_product"."product_tmpl_id" in %s))) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in %s) AND (("stock_move"."location_dest_id" not in %s) OR "stock_move"."location_dest_id" IS NULL))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(981,), '0.00', (7, 19, 20, 21, 22, 8, 18, 17, 33), (7, 19, 20, 21, 22, 8, 18, 17, 33), ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/purchase_stock/tests/test_purchase_stock_report.py", line 167, in test_report_forecast_3_report_line_corresponding_to_po_line_highlighted
    _, _, lines = self.get_report_forecast(product_template_ids=self.product_template.ids, context=context)
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 35, in get_report_forecast
    report_values = report._get_report_values(docids=product_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 246, in _get_report_values
    'docs': self._get_report_data(product_template_ids=docids),
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 106, in _get_report_data
    res['lines'] = self._get_report_lines(product_template_ids, product_variant_ids, wh_location_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 171, in _get_report_lines
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in (SELECT "product_product".id FROM "product_product" WHERE ("product_product"."product_tmpl_id" in %s))) AND ("stock_move"."product_uom_qty" != %s)) AND ((("stock_move"."location_id" not in %s) OR "stock_move"."location_id" IS NULL) AND ("stock_move"."location_dest_id" in %s))) AND ("stock_move"."state" in %s))' with params: [(981,), '0.00', (7, 19, 20, 21, 22, 8, 18, 17, 33), (7, 19, 20, 21, 22, 8, 18, 17, 33), ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/purchase_stock/tests/test_purchase_stock_report.py", line 167, in test_report_forecast_3_report_line_corresponding_to_po_line_highlighted
    _, _, lines = self.get_report_forecast(product_template_ids=self.product_template.ids, context=context)
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 35, in get_report_forecast
    report_values = report._get_report_values(docids=product_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 246, in _get_report_values
    'docs': self._get_report_data(product_template_ids=docids),
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 106, in _get_report_data
    res['lines'] = self._get_report_lines(product_template_ids, product_variant_ids, wh_location_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 161, in _get_report_lines
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in (SELECT "product_product".id FROM "product_product" WHERE ("product_product"."product_tmpl_id" in %s))) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in %s) AND (("stock_move"."location_dest_id" not in %s) OR "stock_move"."location_dest_id" IS NULL))) AND ("stock_move"."state" in %s))' with params: [(981,), '0.00', (7, 19, 20, 21, 22, 8, 18, 17, 33), (7, 19, 20, 21, 22, 8, 18, 17, 33), ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/purchase_stock/tests/test_purchase_stock_report.py", line 167, in test_report_forecast_3_report_line_corresponding_to_po_line_highlighted
    _, _, lines = self.get_report_forecast(product_template_ids=self.product_template.ids, context=context)
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 35, in get_report_forecast
    report_values = report._get_report_values(docids=product_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 246, in _get_report_values
    'docs': self._get_report_data(product_template_ids=docids),
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 106, in _get_report_data
    res['lines'] = self._get_report_lines(product_template_ids, product_variant_ids, wh_location_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 162, in _get_report_lines
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in (SELECT "product_product".id FROM "product_product" WHERE ("product_product"."product_tmpl_id" in %s))) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in %s) AND (("stock_move"."location_dest_id" not in %s) OR "stock_move"."location_dest_id" IS NULL))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(981,), '0.00', (7, 19, 20, 21, 22, 8, 18, 17, 33), (7, 19, 20, 21, 22, 8, 18, 17, 33), ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/purchase_stock/tests/test_purchase_stock_report.py", line 167, in test_report_forecast_3_report_line_corresponding_to_po_line_highlighted
    _, _, lines = self.get_report_forecast(product_template_ids=self.product_template.ids, context=context)
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 35, in get_report_forecast
    report_values = report._get_report_values(docids=product_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 246, in _get_report_values
    'docs': self._get_report_data(product_template_ids=docids),
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 106, in _get_report_data
    res['lines'] = self._get_report_lines(product_template_ids, product_variant_ids, wh_location_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 171, in _get_report_lines
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in (SELECT "product_product".id FROM "product_product" WHERE ("product_product"."product_tmpl_id" in %s))) AND ("stock_move"."product_uom_qty" != %s)) AND ((("stock_move"."location_id" not in %s) OR "stock_move"."location_id" IS NULL) AND ("stock_move"."location_dest_id" in %s))) AND ("stock_move"."state" in %s))' with params: [(981,), '0.00', (7, 19, 20, 21, 22, 8, 18, 17, 33), (7, 19, 20, 21, 22, 8, 18, 17, 33), ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/enterprise/mail_mobile/models/mail_thread.py", line 25, in _notify_thread
    recipients_data = super(MailThread, self)._notify_thread(message, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (268,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 438, in _send
    mail._postprocess_sent_message(success_pids=success_pids, failure_type=failure_type)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 175, in _postprocess_sent_message
    notifications = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (268,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/enterprise/mail_mobile/models/mail_thread.py", line 25, in _notify_thread
    recipients_data = super(MailThread, self)._notify_thread(message, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (269,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 438, in _send
    mail._postprocess_sent_message(success_pids=success_pids, failure_type=failure_type)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 175, in _postprocess_sent_message
    notifications = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (269,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/enterprise/mail_mobile/models/mail_thread.py", line 25, in _notify_thread
    recipients_data = super(MailThread, self)._notify_thread(message, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (270,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 438, in _send
    mail._postprocess_sent_message(success_pids=success_pids, failure_type=failure_type)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 175, in _postprocess_sent_message
    notifications = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (270,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/enterprise/mail_mobile/models/mail_thread.py", line 25, in _notify_thread
    recipients_data = super(MailThread, self)._notify_thread(message, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (271,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 438, in _send
    mail._postprocess_sent_message(success_pids=success_pids, failure_type=failure_type)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 175, in _postprocess_sent_message
    notifications = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (271,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/enterprise/mail_mobile/models/mail_thread.py", line 25, in _notify_thread
    recipients_data = super(MailThread, self)._notify_thread(message, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (272,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 438, in _send
    mail._postprocess_sent_message(success_pids=success_pids, failure_type=failure_type)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 175, in _postprocess_sent_message
    notifications = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (272,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/enterprise/mail_mobile/models/mail_thread.py", line 25, in _notify_thread
    recipients_data = super(MailThread, self)._notify_thread(message, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (273,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 438, in _send
    mail._postprocess_sent_message(success_pids=success_pids, failure_type=failure_type)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 175, in _postprocess_sent_message
    notifications = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (273,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/enterprise/mail_mobile/models/mail_thread.py", line 25, in _notify_thread
    recipients_data = super(MailThread, self)._notify_thread(message, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (274,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 438, in _send
    mail._postprocess_sent_message(success_pids=success_pids, failure_type=failure_type)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 175, in _postprocess_sent_message
    notifications = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (274,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/enterprise/mail_mobile/models/mail_thread.py", line 25, in _notify_thread
    recipients_data = super(MailThread, self)._notify_thread(message, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 375, in _send
    notifs = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (275,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2192, in _notify_thread
    self._notify_thread_by_email(message, recipients_data, msg_vals=msg_vals, **kwargs)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 2377, in _notify_thread_by_email
    emails.send()
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 305, in send
    self.browse(batch_ids)._send(
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 438, in _send
    mail._postprocess_sent_message(success_pids=success_pids, failure_type=failure_type)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 175, in _postprocess_sent_message
    notifications = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (275,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(1317, 1318, 1319, 1320), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(1317, 1318, 1319, 1320), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(1317, 1318, 1319, 1320), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(1317, 1318, 1319, 1320), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(1317, 1318, 1319, 1320), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(1317, 1318, 1319, 1320), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(1317, 1318, 1319, 1320), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(1317, 1318, 1319, 1320), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(1317, 1318, 1319, 1320), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(1317, 1318, 1319, 1320), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(1317, 1318, 1319, 1320), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(1317, 1318, 1319, 1320), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(1317,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(1317,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(1317,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(1318,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(1318,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(1318,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(1319,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(1319,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(1319,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(1320,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(1320,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(1320,), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2025, in _get_forecast_availability_outgoing
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(1317, 1318, 1319, 1320), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2026, in _get_forecast_availability_outgoing
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(1317, 1318, 1319, 1320), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/mrp/models/mrp_production.py", line 307, in _compute_components_availability
    all_raw_moves._fields['forecast_availability'].compute_value(all_raw_moves)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 467, in _compute_forecast_information
    forecast_info = moves._get_forecast_availability_outgoing(warehouse)
  File "/home/odoo/Documents/dev/odoo/addons/stock/models/stock_move.py", line 2029, in _get_forecast_availability_outgoing
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in %s) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" not in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))) AND ("stock_move"."location_dest_id" in (SELECT "stock_location".id FROM "stock_location" WHERE (("stock_location"."active" = %s) AND ("stock_location"."parent_path"::text like %s)))))) AND ("stock_move"."state" in %s))' with params: [(1317, 1318, 1319, 1320), '0.00', True, '1/7/%', True, '1/7/%', ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/sale_stock/tests/test_sale_stock_report.py", line 53, in test_report_forecast_1_sale_order_replenishment
    report_values, docs, lines = self.get_report_forecast(product_template_ids=self.product_template.ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 35, in get_report_forecast
    report_values = report._get_report_values(docids=product_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 246, in _get_report_values
    'docs': self._get_report_data(product_template_ids=docids),
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 106, in _get_report_data
    res['lines'] = self._get_report_lines(product_template_ids, product_variant_ids, wh_location_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 161, in _get_report_lines
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in (SELECT "product_product".id FROM "product_product" WHERE ("product_product"."product_tmpl_id" in %s))) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in %s) AND (("stock_move"."location_dest_id" not in %s) OR "stock_move"."location_dest_id" IS NULL))) AND ("stock_move"."state" in %s))' with params: [(1056,), '0.00', (7, 19, 20, 21, 22, 8, 18, 17, 33), (7, 19, 20, 21, 22, 8, 18, 17, 33), ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/sale_stock/tests/test_sale_stock_report.py", line 53, in test_report_forecast_1_sale_order_replenishment
    report_values, docs, lines = self.get_report_forecast(product_template_ids=self.product_template.ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 35, in get_report_forecast
    report_values = report._get_report_values(docids=product_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 246, in _get_report_values
    'docs': self._get_report_data(product_template_ids=docids),
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 106, in _get_report_data
    res['lines'] = self._get_report_lines(product_template_ids, product_variant_ids, wh_location_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 162, in _get_report_lines
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in (SELECT "product_product".id FROM "product_product" WHERE ("product_product"."product_tmpl_id" in %s))) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in %s) AND (("stock_move"."location_dest_id" not in %s) OR "stock_move"."location_dest_id" IS NULL))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(1056,), '0.00', (7, 19, 20, 21, 22, 8, 18, 17, 33), (7, 19, 20, 21, 22, 8, 18, 17, 33), ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/sale_stock/tests/test_sale_stock_report.py", line 53, in test_report_forecast_1_sale_order_replenishment
    report_values, docs, lines = self.get_report_forecast(product_template_ids=self.product_template.ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 35, in get_report_forecast
    report_values = report._get_report_values(docids=product_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 246, in _get_report_values
    'docs': self._get_report_data(product_template_ids=docids),
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 106, in _get_report_data
    res['lines'] = self._get_report_lines(product_template_ids, product_variant_ids, wh_location_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 171, in _get_report_lines
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in (SELECT "product_product".id FROM "product_product" WHERE ("product_product"."product_tmpl_id" in %s))) AND ("stock_move"."product_uom_qty" != %s)) AND ((("stock_move"."location_id" not in %s) OR "stock_move"."location_id" IS NULL) AND ("stock_move"."location_dest_id" in %s))) AND ("stock_move"."state" in %s))' with params: [(1056,), '0.00', (7, 19, 20, 21, 22, 8, 18, 17, 33), (7, 19, 20, 21, 22, 8, 18, 17, 33), ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/sale_stock/tests/test_sale_stock_report.py", line 81, in test_report_forecast_2_report_line_corresponding_to_so_line_highlighted
    _, _, lines = self.get_report_forecast(product_template_ids=self.product_template.ids, context=context)
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 35, in get_report_forecast
    report_values = report._get_report_values(docids=product_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 246, in _get_report_values
    'docs': self._get_report_data(product_template_ids=docids),
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 106, in _get_report_data
    res['lines'] = self._get_report_lines(product_template_ids, product_variant_ids, wh_location_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 161, in _get_report_lines
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in (SELECT "product_product".id FROM "product_product" WHERE ("product_product"."product_tmpl_id" in %s))) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in %s) AND (("stock_move"."location_dest_id" not in %s) OR "stock_move"."location_dest_id" IS NULL))) AND ("stock_move"."state" in %s))' with params: [(1056,), '0.00', (7, 19, 20, 21, 22, 8, 18, 17, 33), (7, 19, 20, 21, 22, 8, 18, 17, 33), ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/sale_stock/tests/test_sale_stock_report.py", line 81, in test_report_forecast_2_report_line_corresponding_to_so_line_highlighted
    _, _, lines = self.get_report_forecast(product_template_ids=self.product_template.ids, context=context)
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 35, in get_report_forecast
    report_values = report._get_report_values(docids=product_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 246, in _get_report_values
    'docs': self._get_report_data(product_template_ids=docids),
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 106, in _get_report_data
    res['lines'] = self._get_report_lines(product_template_ids, product_variant_ids, wh_location_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 162, in _get_report_lines
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in (SELECT "product_product".id FROM "product_product" WHERE ("product_product"."product_tmpl_id" in %s))) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in %s) AND (("stock_move"."location_dest_id" not in %s) OR "stock_move"."location_dest_id" IS NULL))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(1056,), '0.00', (7, 19, 20, 21, 22, 8, 18, 17, 33), (7, 19, 20, 21, 22, 8, 18, 17, 33), ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/sale_stock/tests/test_sale_stock_report.py", line 81, in test_report_forecast_2_report_line_corresponding_to_so_line_highlighted
    _, _, lines = self.get_report_forecast(product_template_ids=self.product_template.ids, context=context)
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 35, in get_report_forecast
    report_values = report._get_report_values(docids=product_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 246, in _get_report_values
    'docs': self._get_report_data(product_template_ids=docids),
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 106, in _get_report_data
    res['lines'] = self._get_report_lines(product_template_ids, product_variant_ids, wh_location_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 171, in _get_report_lines
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in (SELECT "product_product".id FROM "product_product" WHERE ("product_product"."product_tmpl_id" in %s))) AND ("stock_move"."product_uom_qty" != %s)) AND ((("stock_move"."location_id" not in %s) OR "stock_move"."location_id" IS NULL) AND ("stock_move"."location_dest_id" in %s))) AND ("stock_move"."state" in %s))' with params: [(1056,), '0.00', (7, 19, 20, 21, 22, 8, 18, 17, 33), (7, 19, 20, 21, 22, 8, 18, 17, 33), ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/sale_stock/tests/test_sale_stock_report.py", line 81, in test_report_forecast_2_report_line_corresponding_to_so_line_highlighted
    _, _, lines = self.get_report_forecast(product_template_ids=self.product_template.ids, context=context)
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 35, in get_report_forecast
    report_values = report._get_report_values(docids=product_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 246, in _get_report_values
    'docs': self._get_report_data(product_template_ids=docids),
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 106, in _get_report_data
    res['lines'] = self._get_report_lines(product_template_ids, product_variant_ids, wh_location_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 161, in _get_report_lines
    outs = self.env['stock.move'].search(out_domain, order='reservation_date, priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in (SELECT "product_product".id FROM "product_product" WHERE ("product_product"."product_tmpl_id" in %s))) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in %s) AND (("stock_move"."location_dest_id" not in %s) OR "stock_move"."location_dest_id" IS NULL))) AND ("stock_move"."state" in %s))' with params: [(1056,), '0.00', (7, 19, 20, 21, 22, 8, 18, 17, 33), (7, 19, 20, 21, 22, 8, 18, 17, 33), ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/sale_stock/tests/test_sale_stock_report.py", line 81, in test_report_forecast_2_report_line_corresponding_to_so_line_highlighted
    _, _, lines = self.get_report_forecast(product_template_ids=self.product_template.ids, context=context)
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 35, in get_report_forecast
    report_values = report._get_report_values(docids=product_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 246, in _get_report_values
    'docs': self._get_report_data(product_template_ids=docids),
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 106, in _get_report_data
    res['lines'] = self._get_report_lines(product_template_ids, product_variant_ids, wh_location_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 162, in _get_report_lines
    reserved_outs = self.env['stock.move'].search(
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE ((((("stock_move"."product_id" in (SELECT "product_product".id FROM "product_product" WHERE ("product_product"."product_tmpl_id" in %s))) AND ("stock_move"."product_uom_qty" != %s)) AND (("stock_move"."location_id" in %s) AND (("stock_move"."location_dest_id" not in %s) OR "stock_move"."location_dest_id" IS NULL))) AND ("stock_move"."state" in %s)) AND ("stock_move"."state" in %s))' with params: [(1056,), '0.00', (7, 19, 20, 21, 22, 8, 18, 17, 33), (7, 19, 20, 21, 22, 8, 18, 17, 33), ('waiting', 'confirmed', 'partially_available', 'assigned', None), ('partially_available', 'assigned')]>

 --------------------------------
Inverse selection of stock.move() / state: NOT IN {'done', 'draft', 'cancel'} -> IN ['waiting', 'confirmed', 'partially_available', 'assigned', False]
  File "/home/odoo/Documents/dev/odoo/addons/sale_stock/tests/test_sale_stock_report.py", line 81, in test_report_forecast_2_report_line_corresponding_to_so_line_highlighted
    _, _, lines = self.get_report_forecast(product_template_ids=self.product_template.ids, context=context)
  File "/home/odoo/Documents/dev/odoo/addons/stock/tests/test_report.py", line 35, in get_report_forecast
    report_values = report._get_report_values(docids=product_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 246, in _get_report_values
    'docs': self._get_report_data(product_template_ids=docids),
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 106, in _get_report_data
    res['lines'] = self._get_report_lines(product_template_ids, product_variant_ids, wh_location_ids)
  File "/home/odoo/Documents/dev/odoo/addons/stock/report/report_stock_forecasted.py", line 171, in _get_report_lines
    ins = self.env['stock.move'].search(in_domain, order='priority desc, date, id')
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "stock_move".id FROM "stock_move" WHERE (((("stock_move"."product_id" in (SELECT "product_product".id FROM "product_product" WHERE ("product_product"."product_tmpl_id" in %s))) AND ("stock_move"."product_uom_qty" != %s)) AND ((("stock_move"."location_id" not in %s) OR "stock_move"."location_id" IS NULL) AND ("stock_move"."location_dest_id" in %s))) AND ("stock_move"."state" in %s))' with params: [(1056,), '0.00', (7, 19, 20, 21, 22, 8, 18, 17, 33), (7, 19, 20, 21, 22, 8, 18, 17, 33), ('waiting', 'confirmed', 'partially_available', 'assigned', None)]>

 --------------------------------
Inverse selection of account.move(178,) / move_type: NOT IN {'in_refund', 'out_refund'} -> IN ['entry', 'out_invoice', 'in_invoice', 'out_receipt', 'in_receipt']
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 389, in _compute_field_value
    return super()._compute_field_value(field)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/account/models/account_move.py", line 1141, in _compute_name
    highest_name = self[0]._get_last_sequence() if self else False
  File "/home/odoo/Documents/dev/odoo/addons/account/models/sequence_mixin.py", line 160, in _get_last_sequence
    where_string, param = self._get_last_sequence_domain(relaxed)
  File "/home/odoo/Documents/dev/odoo/addons/account/models/account_move.py", line 1282, in _get_last_sequence_domain
    reference_move_name = self.search(domain + [('date', '<=', self.date)], order='date desc', limit=1).name
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "account_move".id FROM "account_move" WHERE ((((("account_move"."journal_id" = %s) AND (("account_move"."id" != %s) OR "account_move"."id" IS NULL)) AND (("account_move"."name" not in %s) AND "account_move"."name" IS NOT NULL)) AND ("account_move"."move_type" in %s)) AND ("account_move"."date" <= %s))' with params: [6, '178', ('/', ''), ('entry', 'out_invoice', 'in_invoice', 'out_receipt', 'in_receipt'), '2022-05-11']>

 --------------------------------
Inverse selection of account.move(178,) / move_type: NOT IN {'in_refund', 'out_refund'} -> IN ['entry', 'out_invoice', 'in_invoice', 'out_receipt', 'in_receipt']
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 389, in _compute_field_value
    return super()._compute_field_value(field)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/account/models/account_move.py", line 1141, in _compute_name
    highest_name = self[0]._get_last_sequence() if self else False
  File "/home/odoo/Documents/dev/odoo/addons/account/models/sequence_mixin.py", line 160, in _get_last_sequence
    where_string, param = self._get_last_sequence_domain(relaxed)
  File "/home/odoo/Documents/dev/odoo/addons/account/models/account_move.py", line 1284, in _get_last_sequence_domain
    reference_move_name = self.search(domain, order='date asc', limit=1).name
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "account_move".id FROM "account_move" WHERE (((("account_move"."journal_id" = %s) AND (("account_move"."id" != %s) OR "account_move"."id" IS NULL)) AND (("account_move"."name" not in %s) AND "account_move"."name" IS NOT NULL)) AND ("account_move"."move_type" in %s))' with params: [6, '178', ('/', ''), ('entry', 'out_invoice', 'in_invoice', 'out_receipt', 'in_receipt')]>

 --------------------------------
Inverse selection of account.move(178,) / move_type: NOT IN {'in_refund', 'out_refund'} -> IN ['entry', 'out_invoice', 'in_invoice', 'out_receipt', 'in_receipt']
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/account/models/account_move.py", line 1161, in _compute_name
    move._set_next_sequence()
  File "/home/odoo/Documents/dev/odoo/addons/account/models/sequence_mixin.py", line 233, in _set_next_sequence
    last_sequence = self._get_last_sequence()
  File "/home/odoo/Documents/dev/odoo/addons/account/models/sequence_mixin.py", line 160, in _get_last_sequence
    where_string, param = self._get_last_sequence_domain(relaxed)
  File "/home/odoo/Documents/dev/odoo/addons/account/models/account_move.py", line 1282, in _get_last_sequence_domain
    reference_move_name = self.search(domain + [('date', '<=', self.date)], order='date desc', limit=1).name
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "account_move".id FROM "account_move" WHERE ((((("account_move"."journal_id" = %s) AND (("account_move"."id" != %s) OR "account_move"."id" IS NULL)) AND (("account_move"."name" not in %s) AND "account_move"."name" IS NOT NULL)) AND ("account_move"."move_type" in %s)) AND ("account_move"."date" <= %s))' with params: [6, '178', ('/', ''), ('entry', 'out_invoice', 'in_invoice', 'out_receipt', 'in_receipt'), '2022-05-11']>

 --------------------------------
Inverse selection of account.move(178,) / move_type: NOT IN {'in_refund', 'out_refund'} -> IN ['entry', 'out_invoice', 'in_invoice', 'out_receipt', 'in_receipt']
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/account/models/account_move.py", line 1161, in _compute_name
    move._set_next_sequence()
  File "/home/odoo/Documents/dev/odoo/addons/account/models/sequence_mixin.py", line 233, in _set_next_sequence
    last_sequence = self._get_last_sequence()
  File "/home/odoo/Documents/dev/odoo/addons/account/models/sequence_mixin.py", line 160, in _get_last_sequence
    where_string, param = self._get_last_sequence_domain(relaxed)
  File "/home/odoo/Documents/dev/odoo/addons/account/models/account_move.py", line 1284, in _get_last_sequence_domain
    reference_move_name = self.search(domain, order='date asc', limit=1).name
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "account_move".id FROM "account_move" WHERE (((("account_move"."journal_id" = %s) AND (("account_move"."id" != %s) OR "account_move"."id" IS NULL)) AND (("account_move"."name" not in %s) AND "account_move"."name" IS NOT NULL)) AND ("account_move"."move_type" in %s))' with params: [6, '178', ('/', ''), ('entry', 'out_invoice', 'in_invoice', 'out_receipt', 'in_receipt')]>

 --------------------------------
Inverse selection of account.move(178,) / move_type: NOT IN {'in_refund', 'out_refund'} -> IN ['entry', 'out_invoice', 'in_invoice', 'out_receipt', 'in_receipt']
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 389, in _compute_field_value
    return super()._compute_field_value(field)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/account/models/account_move.py", line 1141, in _compute_name
    highest_name = self[0]._get_last_sequence() if self else False
  File "/home/odoo/Documents/dev/odoo/addons/account/models/sequence_mixin.py", line 160, in _get_last_sequence
    where_string, param = self._get_last_sequence_domain(relaxed)
  File "/home/odoo/Documents/dev/odoo/addons/account/models/account_move.py", line 1282, in _get_last_sequence_domain
    reference_move_name = self.search(domain + [('date', '<=', self.date)], order='date desc', limit=1).name
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "account_move".id FROM "account_move" WHERE ((((("account_move"."journal_id" = %s) AND (("account_move"."id" != %s) OR "account_move"."id" IS NULL)) AND (("account_move"."name" not in %s) AND "account_move"."name" IS NOT NULL)) AND ("account_move"."move_type" in %s)) AND ("account_move"."date" <= %s))' with params: [6, '178', ('/', ''), ('entry', 'out_invoice', 'in_invoice', 'out_receipt', 'in_receipt'), '2022-05-11']>

 --------------------------------
Inverse selection of account.move(178,) / move_type: NOT IN {'in_refund', 'out_refund'} -> IN ['entry', 'out_invoice', 'in_invoice', 'out_receipt', 'in_receipt']
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 389, in _compute_field_value
    return super()._compute_field_value(field)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/account/models/account_move.py", line 1141, in _compute_name
    highest_name = self[0]._get_last_sequence() if self else False
  File "/home/odoo/Documents/dev/odoo/addons/account/models/sequence_mixin.py", line 160, in _get_last_sequence
    where_string, param = self._get_last_sequence_domain(relaxed)
  File "/home/odoo/Documents/dev/odoo/addons/account/models/account_move.py", line 1284, in _get_last_sequence_domain
    reference_move_name = self.search(domain, order='date asc', limit=1).name
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "account_move".id FROM "account_move" WHERE (((("account_move"."journal_id" = %s) AND (("account_move"."id" != %s) OR "account_move"."id" IS NULL)) AND (("account_move"."name" not in %s) AND "account_move"."name" IS NOT NULL)) AND ("account_move"."move_type" in %s))' with params: [6, '178', ('/', ''), ('entry', 'out_invoice', 'in_invoice', 'out_receipt', 'in_receipt')]>

 --------------------------------
Inverse selection of account.move(185,) / move_type: NOT IN {'in_refund', 'out_refund'} -> IN ['entry', 'out_invoice', 'in_invoice', 'out_receipt', 'in_receipt']
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 389, in _compute_field_value
    return super()._compute_field_value(field)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/account/models/account_move.py", line 1141, in _compute_name
    highest_name = self[0]._get_last_sequence() if self else False
  File "/home/odoo/Documents/dev/odoo/addons/account/models/sequence_mixin.py", line 160, in _get_last_sequence
    where_string, param = self._get_last_sequence_domain(relaxed)
  File "/home/odoo/Documents/dev/odoo/addons/account/models/account_move.py", line 1282, in _get_last_sequence_domain
    reference_move_name = self.search(domain + [('date', '<=', self.date)], order='date desc', limit=1).name
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "account_move".id FROM "account_move" WHERE ((((("account_move"."journal_id" = %s) AND (("account_move"."id" != %s) OR "account_move"."id" IS NULL)) AND (("account_move"."name" not in %s) AND "account_move"."name" IS NOT NULL)) AND ("account_move"."move_type" in %s)) AND ("account_move"."date" <= %s))' with params: [8, '185', ('/', ''), ('entry', 'out_invoice', 'in_invoice', 'out_receipt', 'in_receipt'), '2018-09-17']>

 --------------------------------
Inverse selection of account.move(185,) / move_type: NOT IN {'in_refund', 'out_refund'} -> IN ['entry', 'out_invoice', 'in_invoice', 'out_receipt', 'in_receipt']
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 389, in _compute_field_value
    return super()._compute_field_value(field)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/account/models/account_move.py", line 1141, in _compute_name
    highest_name = self[0]._get_last_sequence() if self else False
  File "/home/odoo/Documents/dev/odoo/addons/account/models/sequence_mixin.py", line 160, in _get_last_sequence
    where_string, param = self._get_last_sequence_domain(relaxed)
  File "/home/odoo/Documents/dev/odoo/addons/account/models/account_move.py", line 1284, in _get_last_sequence_domain
    reference_move_name = self.search(domain, order='date asc', limit=1).name
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "account_move".id FROM "account_move" WHERE (((("account_move"."journal_id" = %s) AND (("account_move"."id" != %s) OR "account_move"."id" IS NULL)) AND (("account_move"."name" not in %s) AND "account_move"."name" IS NOT NULL)) AND ("account_move"."move_type" in %s))' with params: [8, '185', ('/', ''), ('entry', 'out_invoice', 'in_invoice', 'out_receipt', 'in_receipt')]>

 --------------------------------
Inverse selection of account.move(185,) / move_type: NOT IN {'in_refund', 'out_refund'} -> IN ['entry', 'out_invoice', 'in_invoice', 'out_receipt', 'in_receipt']
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/account/models/account_move.py", line 1161, in _compute_name
    move._set_next_sequence()
  File "/home/odoo/Documents/dev/odoo/addons/account/models/sequence_mixin.py", line 233, in _set_next_sequence
    last_sequence = self._get_last_sequence()
  File "/home/odoo/Documents/dev/odoo/addons/account/models/sequence_mixin.py", line 160, in _get_last_sequence
    where_string, param = self._get_last_sequence_domain(relaxed)
  File "/home/odoo/Documents/dev/odoo/addons/account/models/account_move.py", line 1282, in _get_last_sequence_domain
    reference_move_name = self.search(domain + [('date', '<=', self.date)], order='date desc', limit=1).name
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "account_move".id FROM "account_move" WHERE ((((("account_move"."journal_id" = %s) AND (("account_move"."id" != %s) OR "account_move"."id" IS NULL)) AND (("account_move"."name" not in %s) AND "account_move"."name" IS NOT NULL)) AND ("account_move"."move_type" in %s)) AND ("account_move"."date" <= %s))' with params: [8, '185', ('/', ''), ('entry', 'out_invoice', 'in_invoice', 'out_receipt', 'in_receipt'), '2018-09-17']>

 --------------------------------
Inverse selection of account.move(185,) / move_type: NOT IN {'in_refund', 'out_refund'} -> IN ['entry', 'out_invoice', 'in_invoice', 'out_receipt', 'in_receipt']
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/account/models/account_move.py", line 1161, in _compute_name
    move._set_next_sequence()
  File "/home/odoo/Documents/dev/odoo/addons/account/models/sequence_mixin.py", line 233, in _set_next_sequence
    last_sequence = self._get_last_sequence()
  File "/home/odoo/Documents/dev/odoo/addons/account/models/sequence_mixin.py", line 160, in _get_last_sequence
    where_string, param = self._get_last_sequence_domain(relaxed)
  File "/home/odoo/Documents/dev/odoo/addons/account/models/account_move.py", line 1284, in _get_last_sequence_domain
    reference_move_name = self.search(domain, order='date asc', limit=1).name
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "account_move".id FROM "account_move" WHERE (((("account_move"."journal_id" = %s) AND (("account_move"."id" != %s) OR "account_move"."id" IS NULL)) AND (("account_move"."name" not in %s) AND "account_move"."name" IS NOT NULL)) AND ("account_move"."move_type" in %s))' with params: [8, '185', ('/', ''), ('entry', 'out_invoice', 'in_invoice', 'out_receipt', 'in_receipt')]>

 --------------------------------
Inverse selection of account.move(179,) / move_type: NOT IN {'in_refund', 'out_refund'} -> IN ['entry', 'out_invoice', 'in_invoice', 'out_receipt', 'in_receipt']
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 389, in _compute_field_value
    return super()._compute_field_value(field)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/account/models/account_move.py", line 1141, in _compute_name
    highest_name = self[0]._get_last_sequence() if self else False
  File "/home/odoo/Documents/dev/odoo/addons/account/models/sequence_mixin.py", line 160, in _get_last_sequence
    where_string, param = self._get_last_sequence_domain(relaxed)
  File "/home/odoo/Documents/dev/odoo/addons/account/models/account_move.py", line 1282, in _get_last_sequence_domain
    reference_move_name = self.search(domain + [('date', '<=', self.date)], order='date desc', limit=1).name
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "account_move".id FROM "account_move" WHERE ((((("account_move"."journal_id" = %s) AND (("account_move"."id" != %s) OR "account_move"."id" IS NULL)) AND (("account_move"."name" not in %s) AND "account_move"."name" IS NOT NULL)) AND ("account_move"."move_type" in %s)) AND ("account_move"."date" <= %s))' with params: [7, '179', ('/', ''), ('entry', 'out_invoice', 'in_invoice', 'out_receipt', 'in_receipt'), '2022-05-01']>

 --------------------------------
Inverse selection of account.move(179,) / move_type: NOT IN {'in_refund', 'out_refund'} -> IN ['entry', 'out_invoice', 'in_invoice', 'out_receipt', 'in_receipt']
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 389, in _compute_field_value
    return super()._compute_field_value(field)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/account/models/account_move.py", line 1141, in _compute_name
    highest_name = self[0]._get_last_sequence() if self else False
  File "/home/odoo/Documents/dev/odoo/addons/account/models/sequence_mixin.py", line 160, in _get_last_sequence
    where_string, param = self._get_last_sequence_domain(relaxed)
  File "/home/odoo/Documents/dev/odoo/addons/account/models/account_move.py", line 1284, in _get_last_sequence_domain
    reference_move_name = self.search(domain, order='date asc', limit=1).name
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "account_move".id FROM "account_move" WHERE (((("account_move"."journal_id" = %s) AND (("account_move"."id" != %s) OR "account_move"."id" IS NULL)) AND (("account_move"."name" not in %s) AND "account_move"."name" IS NOT NULL)) AND ("account_move"."move_type" in %s))' with params: [7, '179', ('/', ''), ('entry', 'out_invoice', 'in_invoice', 'out_receipt', 'in_receipt')]>

 --------------------------------
Inverse selection of account.move(179,) / move_type: NOT IN {'in_refund', 'out_refund'} -> IN ['entry', 'out_invoice', 'in_invoice', 'out_receipt', 'in_receipt']
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/account/models/account_move.py", line 1161, in _compute_name
    move._set_next_sequence()
  File "/home/odoo/Documents/dev/odoo/addons/account/models/sequence_mixin.py", line 233, in _set_next_sequence
    last_sequence = self._get_last_sequence()
  File "/home/odoo/Documents/dev/odoo/addons/account/models/sequence_mixin.py", line 160, in _get_last_sequence
    where_string, param = self._get_last_sequence_domain(relaxed)
  File "/home/odoo/Documents/dev/odoo/addons/account/models/account_move.py", line 1282, in _get_last_sequence_domain
    reference_move_name = self.search(domain + [('date', '<=', self.date)], order='date desc', limit=1).name
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "account_move".id FROM "account_move" WHERE ((((("account_move"."journal_id" = %s) AND (("account_move"."id" != %s) OR "account_move"."id" IS NULL)) AND (("account_move"."name" not in %s) AND "account_move"."name" IS NOT NULL)) AND ("account_move"."move_type" in %s)) AND ("account_move"."date" <= %s))' with params: [7, '179', ('/', ''), ('entry', 'out_invoice', 'in_invoice', 'out_receipt', 'in_receipt'), '2022-05-01']>

 --------------------------------
Inverse selection of account.move(179,) / move_type: NOT IN {'in_refund', 'out_refund'} -> IN ['entry', 'out_invoice', 'in_invoice', 'out_receipt', 'in_receipt']
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/account/models/account_move.py", line 1161, in _compute_name
    move._set_next_sequence()
  File "/home/odoo/Documents/dev/odoo/addons/account/models/sequence_mixin.py", line 233, in _set_next_sequence
    last_sequence = self._get_last_sequence()
  File "/home/odoo/Documents/dev/odoo/addons/account/models/sequence_mixin.py", line 160, in _get_last_sequence
    where_string, param = self._get_last_sequence_domain(relaxed)
  File "/home/odoo/Documents/dev/odoo/addons/account/models/account_move.py", line 1284, in _get_last_sequence_domain
    reference_move_name = self.search(domain, order='date asc', limit=1).name
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "account_move".id FROM "account_move" WHERE (((("account_move"."journal_id" = %s) AND (("account_move"."id" != %s) OR "account_move"."id" IS NULL)) AND (("account_move"."name" not in %s) AND "account_move"."name" IS NOT NULL)) AND ("account_move"."move_type" in %s))' with params: [7, '179', ('/', ''), ('entry', 'out_invoice', 'in_invoice', 'out_receipt', 'in_receipt')]>

 --------------------------------
Inverse selection of account.move(180,) / move_type: NOT IN {'in_refund', 'out_refund'} -> IN ['entry', 'out_invoice', 'in_invoice', 'out_receipt', 'in_receipt']
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 389, in _compute_field_value
    return super()._compute_field_value(field)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/account/models/account_move.py", line 1141, in _compute_name
    highest_name = self[0]._get_last_sequence() if self else False
  File "/home/odoo/Documents/dev/odoo/addons/account/models/sequence_mixin.py", line 160, in _get_last_sequence
    where_string, param = self._get_last_sequence_domain(relaxed)
  File "/home/odoo/Documents/dev/odoo/addons/account/models/account_move.py", line 1282, in _get_last_sequence_domain
    reference_move_name = self.search(domain + [('date', '<=', self.date)], order='date desc', limit=1).name
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "account_move".id FROM "account_move" WHERE ((((("account_move"."journal_id" = %s) AND (("account_move"."id" != %s) OR "account_move"."id" IS NULL)) AND (("account_move"."name" not in %s) AND "account_move"."name" IS NOT NULL)) AND ("account_move"."move_type" in %s)) AND ("account_move"."date" <= %s))' with params: [7, '180', ('/', ''), ('entry', 'out_invoice', 'in_invoice', 'out_receipt', 'in_receipt'), '2022-05-08']>

 --------------------------------
Inverse selection of account.move(180,) / move_type: NOT IN {'in_refund', 'out_refund'} -> IN ['entry', 'out_invoice', 'in_invoice', 'out_receipt', 'in_receipt']
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/account/models/account_move.py", line 1161, in _compute_name
    move._set_next_sequence()
  File "/home/odoo/Documents/dev/odoo/addons/account/models/sequence_mixin.py", line 233, in _set_next_sequence
    last_sequence = self._get_last_sequence()
  File "/home/odoo/Documents/dev/odoo/addons/account/models/sequence_mixin.py", line 160, in _get_last_sequence
    where_string, param = self._get_last_sequence_domain(relaxed)
  File "/home/odoo/Documents/dev/odoo/addons/account/models/account_move.py", line 1282, in _get_last_sequence_domain
    reference_move_name = self.search(domain + [('date', '<=', self.date)], order='date desc', limit=1).name
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "account_move".id FROM "account_move" WHERE ((((("account_move"."journal_id" = %s) AND (("account_move"."id" != %s) OR "account_move"."id" IS NULL)) AND (("account_move"."name" not in %s) AND "account_move"."name" IS NOT NULL)) AND ("account_move"."move_type" in %s)) AND ("account_move"."date" <= %s))' with params: [7, '180', ('/', ''), ('entry', 'out_invoice', 'in_invoice', 'out_receipt', 'in_receipt'), '2022-05-08']>

 --------------------------------
Inverse selection of account.move(181,) / move_type: NOT IN {'in_refund', 'out_refund'} -> IN ['entry', 'out_invoice', 'in_invoice', 'out_receipt', 'in_receipt']
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 389, in _compute_field_value
    return super()._compute_field_value(field)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/account/models/account_move.py", line 1141, in _compute_name
    highest_name = self[0]._get_last_sequence() if self else False
  File "/home/odoo/Documents/dev/odoo/addons/account/models/sequence_mixin.py", line 160, in _get_last_sequence
    where_string, param = self._get_last_sequence_domain(relaxed)
  File "/home/odoo/Documents/dev/odoo/addons/account/models/account_move.py", line 1282, in _get_last_sequence_domain
    reference_move_name = self.search(domain + [('date', '<=', self.date)], order='date desc', limit=1).name
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "account_move".id FROM "account_move" WHERE ((((("account_move"."journal_id" = %s) AND (("account_move"."id" != %s) OR "account_move"."id" IS NULL)) AND (("account_move"."name" not in %s) AND "account_move"."name" IS NOT NULL)) AND ("account_move"."move_type" in %s)) AND ("account_move"."date" <= %s))' with params: [7, '181', ('/', ''), ('entry', 'out_invoice', 'in_invoice', 'out_receipt', 'in_receipt'), '2022-05-08']>

 --------------------------------
Inverse selection of account.move(181,) / move_type: NOT IN {'in_refund', 'out_refund'} -> IN ['entry', 'out_invoice', 'in_invoice', 'out_receipt', 'in_receipt']
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/account/models/account_move.py", line 1161, in _compute_name
    move._set_next_sequence()
  File "/home/odoo/Documents/dev/odoo/addons/account/models/sequence_mixin.py", line 233, in _set_next_sequence
    last_sequence = self._get_last_sequence()
  File "/home/odoo/Documents/dev/odoo/addons/account/models/sequence_mixin.py", line 160, in _get_last_sequence
    where_string, param = self._get_last_sequence_domain(relaxed)
  File "/home/odoo/Documents/dev/odoo/addons/account/models/account_move.py", line 1282, in _get_last_sequence_domain
    reference_move_name = self.search(domain + [('date', '<=', self.date)], order='date desc', limit=1).name
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "account_move".id FROM "account_move" WHERE ((((("account_move"."journal_id" = %s) AND (("account_move"."id" != %s) OR "account_move"."id" IS NULL)) AND (("account_move"."name" not in %s) AND "account_move"."name" IS NOT NULL)) AND ("account_move"."move_type" in %s)) AND ("account_move"."date" <= %s))' with params: [7, '181', ('/', ''), ('entry', 'out_invoice', 'in_invoice', 'out_receipt', 'in_receipt'), '2022-05-08']>

 --------------------------------
Inverse selection of account.move(182,) / move_type: NOT IN {'in_refund', 'out_refund'} -> IN ['entry', 'out_invoice', 'in_invoice', 'out_receipt', 'in_receipt']
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 389, in _compute_field_value
    return super()._compute_field_value(field)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/account/models/account_move.py", line 1141, in _compute_name
    highest_name = self[0]._get_last_sequence() if self else False
  File "/home/odoo/Documents/dev/odoo/addons/account/models/sequence_mixin.py", line 160, in _get_last_sequence
    where_string, param = self._get_last_sequence_domain(relaxed)
  File "/home/odoo/Documents/dev/odoo/addons/account/models/account_move.py", line 1282, in _get_last_sequence_domain
    reference_move_name = self.search(domain + [('date', '<=', self.date)], order='date desc', limit=1).name
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "account_move".id FROM "account_move" WHERE ((((("account_move"."journal_id" = %s) AND (("account_move"."id" != %s) OR "account_move"."id" IS NULL)) AND (("account_move"."name" not in %s) AND "account_move"."name" IS NOT NULL)) AND ("account_move"."move_type" in %s)) AND ("account_move"."date" <= %s))' with params: [7, '182', ('/', ''), ('entry', 'out_invoice', 'in_invoice', 'out_receipt', 'in_receipt'), '2022-04-26']>

 --------------------------------
Inverse selection of account.move(182,) / move_type: NOT IN {'in_refund', 'out_refund'} -> IN ['entry', 'out_invoice', 'in_invoice', 'out_receipt', 'in_receipt']
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 389, in _compute_field_value
    return super()._compute_field_value(field)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/account/models/account_move.py", line 1141, in _compute_name
    highest_name = self[0]._get_last_sequence() if self else False
  File "/home/odoo/Documents/dev/odoo/addons/account/models/sequence_mixin.py", line 160, in _get_last_sequence
    where_string, param = self._get_last_sequence_domain(relaxed)
  File "/home/odoo/Documents/dev/odoo/addons/account/models/account_move.py", line 1284, in _get_last_sequence_domain
    reference_move_name = self.search(domain, order='date asc', limit=1).name
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "account_move".id FROM "account_move" WHERE (((("account_move"."journal_id" = %s) AND (("account_move"."id" != %s) OR "account_move"."id" IS NULL)) AND (("account_move"."name" not in %s) AND "account_move"."name" IS NOT NULL)) AND ("account_move"."move_type" in %s))' with params: [7, '182', ('/', ''), ('entry', 'out_invoice', 'in_invoice', 'out_receipt', 'in_receipt')]>

 --------------------------------
Inverse selection of account.move(182,) / move_type: NOT IN {'in_refund', 'out_refund'} -> IN ['entry', 'out_invoice', 'in_invoice', 'out_receipt', 'in_receipt']
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/account/models/account_move.py", line 1161, in _compute_name
    move._set_next_sequence()
  File "/home/odoo/Documents/dev/odoo/addons/account/models/sequence_mixin.py", line 233, in _set_next_sequence
    last_sequence = self._get_last_sequence()
  File "/home/odoo/Documents/dev/odoo/addons/account/models/sequence_mixin.py", line 160, in _get_last_sequence
    where_string, param = self._get_last_sequence_domain(relaxed)
  File "/home/odoo/Documents/dev/odoo/addons/account/models/account_move.py", line 1282, in _get_last_sequence_domain
    reference_move_name = self.search(domain + [('date', '<=', self.date)], order='date desc', limit=1).name
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "account_move".id FROM "account_move" WHERE ((((("account_move"."journal_id" = %s) AND (("account_move"."id" != %s) OR "account_move"."id" IS NULL)) AND (("account_move"."name" not in %s) AND "account_move"."name" IS NOT NULL)) AND ("account_move"."move_type" in %s)) AND ("account_move"."date" <= %s))' with params: [7, '182', ('/', ''), ('entry', 'out_invoice', 'in_invoice', 'out_receipt', 'in_receipt'), '2022-04-26']>

 --------------------------------
Inverse selection of account.move(182,) / move_type: NOT IN {'in_refund', 'out_refund'} -> IN ['entry', 'out_invoice', 'in_invoice', 'out_receipt', 'in_receipt']
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/account/models/account_move.py", line 1161, in _compute_name
    move._set_next_sequence()
  File "/home/odoo/Documents/dev/odoo/addons/account/models/sequence_mixin.py", line 233, in _set_next_sequence
    last_sequence = self._get_last_sequence()
  File "/home/odoo/Documents/dev/odoo/addons/account/models/sequence_mixin.py", line 160, in _get_last_sequence
    where_string, param = self._get_last_sequence_domain(relaxed)
  File "/home/odoo/Documents/dev/odoo/addons/account/models/account_move.py", line 1284, in _get_last_sequence_domain
    reference_move_name = self.search(domain, order='date asc', limit=1).name
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "account_move".id FROM "account_move" WHERE (((("account_move"."journal_id" = %s) AND (("account_move"."id" != %s) OR "account_move"."id" IS NULL)) AND (("account_move"."name" not in %s) AND "account_move"."name" IS NOT NULL)) AND ("account_move"."move_type" in %s))' with params: [7, '182', ('/', ''), ('entry', 'out_invoice', 'in_invoice', 'out_receipt', 'in_receipt')]>

 --------------------------------
Inverse selection of account.move(183,) / move_type: NOT IN {'in_refund', 'out_refund'} -> IN ['entry', 'out_invoice', 'in_invoice', 'out_receipt', 'in_receipt']
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 389, in _compute_field_value
    return super()._compute_field_value(field)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/account/models/account_move.py", line 1141, in _compute_name
    highest_name = self[0]._get_last_sequence() if self else False
  File "/home/odoo/Documents/dev/odoo/addons/account/models/sequence_mixin.py", line 160, in _get_last_sequence
    where_string, param = self._get_last_sequence_domain(relaxed)
  File "/home/odoo/Documents/dev/odoo/addons/account/models/account_move.py", line 1282, in _get_last_sequence_domain
    reference_move_name = self.search(domain + [('date', '<=', self.date)], order='date desc', limit=1).name
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "account_move".id FROM "account_move" WHERE ((((("account_move"."journal_id" = %s) AND (("account_move"."id" != %s) OR "account_move"."id" IS NULL)) AND (("account_move"."name" not in %s) AND "account_move"."name" IS NOT NULL)) AND ("account_move"."move_type" in %s)) AND ("account_move"."date" <= %s))' with params: [8, '183', ('/', ''), ('entry', 'out_invoice', 'in_invoice', 'out_receipt', 'in_receipt'), '2022-05-01']>

 --------------------------------
Inverse selection of account.move(183,) / move_type: NOT IN {'in_refund', 'out_refund'} -> IN ['entry', 'out_invoice', 'in_invoice', 'out_receipt', 'in_receipt']
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/account/models/account_move.py", line 1161, in _compute_name
    move._set_next_sequence()
  File "/home/odoo/Documents/dev/odoo/addons/account/models/sequence_mixin.py", line 233, in _set_next_sequence
    last_sequence = self._get_last_sequence()
  File "/home/odoo/Documents/dev/odoo/addons/account/models/sequence_mixin.py", line 160, in _get_last_sequence
    where_string, param = self._get_last_sequence_domain(relaxed)
  File "/home/odoo/Documents/dev/odoo/addons/account/models/account_move.py", line 1282, in _get_last_sequence_domain
    reference_move_name = self.search(domain + [('date', '<=', self.date)], order='date desc', limit=1).name
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "account_move".id FROM "account_move" WHERE ((((("account_move"."journal_id" = %s) AND (("account_move"."id" != %s) OR "account_move"."id" IS NULL)) AND (("account_move"."name" not in %s) AND "account_move"."name" IS NOT NULL)) AND ("account_move"."move_type" in %s)) AND ("account_move"."date" <= %s))' with params: [8, '183', ('/', ''), ('entry', 'out_invoice', 'in_invoice', 'out_receipt', 'in_receipt'), '2022-05-01']>

 --------------------------------
Inverse selection of account.move(185,) / move_type: NOT IN {'in_refund', 'out_refund'} -> IN ['entry', 'out_invoice', 'in_invoice', 'out_receipt', 'in_receipt']
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 389, in _compute_field_value
    return super()._compute_field_value(field)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/account/models/account_move.py", line 1141, in _compute_name
    highest_name = self[0]._get_last_sequence() if self else False
  File "/home/odoo/Documents/dev/odoo/addons/account/models/sequence_mixin.py", line 160, in _get_last_sequence
    where_string, param = self._get_last_sequence_domain(relaxed)
  File "/home/odoo/Documents/dev/odoo/addons/account/models/account_move.py", line 1282, in _get_last_sequence_domain
    reference_move_name = self.search(domain + [('date', '<=', self.date)], order='date desc', limit=1).name
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "account_move".id FROM "account_move" WHERE ((((("account_move"."journal_id" = %s) AND (("account_move"."id" != %s) OR "account_move"."id" IS NULL)) AND (("account_move"."name" not in %s) AND "account_move"."name" IS NOT NULL)) AND ("account_move"."move_type" in %s)) AND ("account_move"."date" <= %s))' with params: [8, '185', ('/', ''), ('entry', 'out_invoice', 'in_invoice', 'out_receipt', 'in_receipt'), '2018-09-17']>

 --------------------------------
Inverse selection of account.move(185,) / move_type: NOT IN {'in_refund', 'out_refund'} -> IN ['entry', 'out_invoice', 'in_invoice', 'out_receipt', 'in_receipt']
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 389, in _compute_field_value
    return super()._compute_field_value(field)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/account/models/account_move.py", line 1141, in _compute_name
    highest_name = self[0]._get_last_sequence() if self else False
  File "/home/odoo/Documents/dev/odoo/addons/account/models/sequence_mixin.py", line 160, in _get_last_sequence
    where_string, param = self._get_last_sequence_domain(relaxed)
  File "/home/odoo/Documents/dev/odoo/addons/account/models/account_move.py", line 1284, in _get_last_sequence_domain
    reference_move_name = self.search(domain, order='date asc', limit=1).name
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "account_move".id FROM "account_move" WHERE (((("account_move"."journal_id" = %s) AND (("account_move"."id" != %s) OR "account_move"."id" IS NULL)) AND (("account_move"."name" not in %s) AND "account_move"."name" IS NOT NULL)) AND ("account_move"."move_type" in %s))' with params: [8, '185', ('/', ''), ('entry', 'out_invoice', 'in_invoice', 'out_receipt', 'in_receipt')]>

 --------------------------------
Inverse selection of hr.leave() / state: NOT IN {'refuse', 'cancel'} -> IN ['draft', 'confirm', 'validate1', 'validate', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 389, in _compute_field_value
    return super()._compute_field_value(field)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/hr_holidays/models/hr_employee.py", line 134, in _compute_leave_status
    holidays = self.env['hr.leave'].sudo().search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "hr_leave".id FROM "hr_leave" WHERE ((((("hr_leave"."active" = %s) AND ("hr_leave"."employee_id" in %s)) AND ("hr_leave"."date_from" <= %s)) AND ("hr_leave"."date_to" >= %s)) AND ("hr_leave"."state" in %s))' with params: [True, (209, 210), '2022-05-11 13:05:39', '2022-05-11 13:05:39', ('draft', 'confirm', 'validate1', 'validate', None)]>

 --------------------------------
Inverse selection of hr.leave() / state: NOT IN {'refuse', 'cancel'} -> IN ['draft', 'confirm', 'validate1', 'validate', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 389, in _compute_field_value
    return super()._compute_field_value(field)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/hr_holidays/models/hr_employee.py", line 101, in _compute_allocation_remaining_display
    data_leave = self.env['hr.leave']._read_group([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 2519, in _read_group
    return self.read_group(domain, fields, groupby, offset, limit, orderby, lazy)
  File "/home/odoo/Documents/dev/odoo/addons/hr_holidays/models/hr_leave.py", line 1086, in read_group
    return super(HolidaysRequest, self).read_group(domain, fields, groupby, offset=offset, limit=limit, orderby=orderby, lazy=lazy)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 2560, in read_group
    result = self._read_group_raw(domain, fields, groupby, offset=offset, limit=limit, orderby=orderby, lazy=lazy)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 2596, in _read_group_raw
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "hr_leave".id FROM "hr_leave" WHERE (((((("hr_leave"."active" = %s) AND ("hr_leave"."employee_id" in %s)) AND ("hr_leave"."holiday_status_id" in (SELECT "hr_leave_type".id FROM "hr_leave_type" WHERE ("hr_leave_type"."active" = %s)))) AND ("hr_leave"."holiday_status_id" in (SELECT "hr_leave_type".id FROM "hr_leave_type" WHERE ("hr_leave_type"."requires_allocation" = %s)))) AND ("hr_leave"."state" in %s)) AND (("hr_leave"."holiday_allocation_id" in (SELECT "hr_leave_allocation".id FROM "hr_leave_allocation" WHERE "hr_leave_allocation"."date_to" IS NULL )) OR ("hr_leave"."holiday_allocation_id" in (SELECT "hr_leave_allocation".id FROM "hr_leave_allocation" WHERE ("hr_leave_allocation"."date_to" >= %s)))))' with params: [True, (209, 210), True, 'yes', ('draft', 'confirm', 'validate1', 'validate', None), '2022-05-11']>

 --------------------------------
Inverse selection of hr.leave() / state: NOT IN {'refuse', 'cancel'} -> IN ['draft', 'confirm', 'validate1', 'validate', False]
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1175, in __get__
    self.compute_value(recs)
  File "/home/odoo/Documents/dev/odoo/odoo/fields.py", line 1334, in compute_value
    records._compute_field_value(self)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 389, in _compute_field_value
    return super()._compute_field_value(field)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/hr_holidays/models/hr_employee.py", line 134, in _compute_leave_status
    holidays = self.env['hr.leave'].sudo().search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "hr_leave".id FROM "hr_leave" WHERE ((((("hr_leave"."active" = %s) AND ("hr_leave"."employee_id" in %s)) AND ("hr_leave"."date_from" <= %s)) AND ("hr_leave"."date_to" >= %s)) AND ("hr_leave"."state" in %s))' with params: [True, (209,), '2022-05-11 13:05:39', '2022-05-11 13:05:39', ('draft', 'confirm', 'validate1', 'validate', None)]>

 --------------------------------
Inverse selection of hr.leave() / state: NOT IN {'refuse', 'cancel'} -> IN ['draft', 'confirm', 'validate1', 'validate', False]
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_thread.py", line 389, in _compute_field_value
    return super()._compute_field_value(field)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4410, in _compute_field_value
    getattr(self, field.compute)()
  File "/home/odoo/Documents/dev/odoo/addons/hr_holidays/models/hr_employee.py", line 101, in _compute_allocation_remaining_display
    data_leave = self.env['hr.leave']._read_group([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 2519, in _read_group
    return self.read_group(domain, fields, groupby, offset, limit, orderby, lazy)
  File "/home/odoo/Documents/dev/odoo/addons/hr_holidays/models/hr_leave.py", line 1086, in read_group
    return super(HolidaysRequest, self).read_group(domain, fields, groupby, offset=offset, limit=limit, orderby=orderby, lazy=lazy)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 2560, in read_group
    result = self._read_group_raw(domain, fields, groupby, offset=offset, limit=limit, orderby=orderby, lazy=lazy)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 2596, in _read_group_raw
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "hr_leave".id FROM "hr_leave" WHERE (((((("hr_leave"."active" = %s) AND ("hr_leave"."employee_id" in %s)) AND ("hr_leave"."holiday_status_id" in (SELECT "hr_leave_type".id FROM "hr_leave_type" WHERE ("hr_leave_type"."active" = %s)))) AND ("hr_leave"."holiday_status_id" in (SELECT "hr_leave_type".id FROM "hr_leave_type" WHERE ("hr_leave_type"."requires_allocation" = %s)))) AND ("hr_leave"."state" in %s)) AND (("hr_leave"."holiday_allocation_id" in (SELECT "hr_leave_allocation".id FROM "hr_leave_allocation" WHERE "hr_leave_allocation"."date_to" IS NULL )) OR ("hr_leave"."holiday_allocation_id" in (SELECT "hr_leave_allocation".id FROM "hr_leave_allocation" WHERE ("hr_leave_allocation"."date_to" >= %s)))))' with params: [True, (209,), True, 'yes', ('draft', 'confirm', 'validate1', 'validate', None), '2022-05-11']>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/odoo/tools/safe_eval.py", line 337, in safe_eval
    return unsafe_eval(c, globals_dict, locals_dict)
  File "ir.actions.server(145,)", line 1, in <module>
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 160, in process_email_queue
    res = self.browse(ids).send(auto_commit=auto_commit)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 303, in send
    batch._postprocess_sent_message(success_pids=[], failure_type="mail_smtp")
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 175, in _postprocess_sent_message
    notifications = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (5, 7, 8, 9, 10), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/odoo/tools/safe_eval.py", line 337, in safe_eval
    return unsafe_eval(c, globals_dict, locals_dict)
  File "ir.actions.server(145,)", line 1, in <module>
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 160, in process_email_queue
    res = self.browse(ids).send(auto_commit=auto_commit)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 303, in send
    batch._postprocess_sent_message(success_pids=[], failure_type="mail_smtp")
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 175, in _postprocess_sent_message
    notifications = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (6,), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
Inverse selection of mail.notification() / notification_status: NOT IN {'canceled', 'sent'} -> IN ['ready', 'bounce', 'exception', False]
  File "/home/odoo/Documents/dev/odoo/odoo/tools/safe_eval.py", line 337, in safe_eval
    return unsafe_eval(c, globals_dict, locals_dict)
  File "ir.actions.server(145,)", line 1, in <module>
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 160, in process_email_queue
    res = self.browse(ids).send(auto_commit=auto_commit)
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 303, in send
    batch._postprocess_sent_message(success_pids=[], failure_type="mail_smtp")
  File "/home/odoo/Documents/dev/odoo/addons/mail/models/mail_mail.py", line 175, in _postprocess_sent_message
    notifications = self.env['mail.notification'].search([
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 1893, in search
    res = self._search(domain, offset=offset, limit=limit, order=order, count=count)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4854, in _search
    query = self._where_calc(domain)
  File "/home/odoo/Documents/dev/odoo/odoo/models.py", line 4610, in _where_calc
    return expression.expression(domain, self).query
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 453, in __init__
    self.parse()
  File "/home/odoo/Documents/dev/odoo/odoo/osv/expression.py", line 996, in parse
    print("".join(traceback.format_stack(limit=10)))

<osv.Query: 'SELECT "mail_notification".id FROM "mail_notification" WHERE ((("mail_notification"."notification_type" = %s) AND ("mail_notification"."mail_mail_id" in %s)) AND ("mail_notification"."notification_status" in %s))' with params: ['email', (276, 277, 278, 279), ('ready', 'bounce', 'exception', None)]>

 --------------------------------
